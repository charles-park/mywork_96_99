####################################################################################################
#                                                                                                  #
#     Micro Series 8051 C-Compiler V5.12K/DXT                              31/Jan/97  08:51:50     #
#     Front end V4.04                                                                              #
#     Global Optimizer V1.00E                                                                      #
#                                                                                                  #
#           Target option =  8051                                                                  #
#           Memory model  =  medium                                                                #
#           Source file   =  wds350.c                                                              #
#           List file     =  wds350.lst                                                            #
#           Object file   =  wds350.r03                                                            #
#           ASM file      =  wds350.s03                                                            #
#           Command line  =  -mm -L -q -s -P -K -a WDS350 WDS350                                   #
#                                                                                                  #
#                                                                   (c) Copyright IAR Systems 1994 #
####################################################################################################

   \   0000                    NAME    wds350(17)
   \   0000                    RSEG    CODE(0)
   \   0000                    RSEG    CONST(0)
   \   0000                    COMMON  INTVEC(0)
   \   0000                    RSEG    X_UDATA(0)
   \   0000                    RSEG    BITVARS(0)
   \   0000                    PUBLIC  EX0_int
   \   0000                    $DEFFN  EX0_int(512,2,0,0,0,0,0,0)
   \   0000                    PUBLIC  One_pros
   \   0000                    $DEFFN  One_pros(0,6,0,0,0,0,0,0),main
   \   0000                    PUBLIC  Quad_pros
   \   0000                    $DEFFN  Quad_pros(0,16,0,0,0,0,0,0),main
   \   0000                    PUBLIC  SCON_int
   \   0000                    $DEFFN  SCON_int(512,2,0,0,0,0,0,0)
   \   0000                    PUBLIC  Sec_pros
   \   0000                    $DEFFN  Sec_pros(0,12,0,0,0,0,0,0),main
   \   0000                    PUBLIC  T0_int
   \   0000                    $DEFFN  T0_int(512,0,0,0,0,0,0,0)
   \   0000                    PUBLIC  T2_int
   \   0000                    $DEFFN  T2_int(512,0,0,0,0,0,0,0)
   \   0000                    PUBLIC  Ten_pros
   \   0000                    $DEFFN  Ten_pros(0,10,0,0,0,0,0,0),main
   \   0000                    PUBLIC  Title
   \   0000                    PUBLIC  Ws_calc
   \   0000                    $DEFFN  Ws_calc(0,2,0,0,0,2,0,0),One_pros,Ten_pros,Sec_pros,Quad_pros
   \   0000                    PUBLIC  Ws_calc1
   \   0000                    $DEFFN  Ws_calc1(0,12,0,0,0,2,0,0),Ws_calc
   \   0000                    PUBLIC  Ws_calc2
   \   0000                    $DEFFN  Ws_calc2(0,12,0,0,0,2,0,0),Ws_calc
   \   0000                    EXTERN  atan
   \   0000                    $DEFFN  atan(0,4,0,0),One_pros,Ten_pros,Sec_pros,Quad_pros
   \   0000                    EXTERN  cos
   \   0000                    $DEFFN  cos(0,4,0,0),One_pros,Sec_pros,Quad_pros
   \   0000                    PUBLIC  initialize
   \   0000                    $DEFFN  initialize(0,2,0,0,0,0,0,0),main
   \   0000                    PUBLIC  main
   \   0000                    $DEFFN  main(0,2,0,0,0,0,0,0)
   \   0000                    EXTERN  sin
   \   0000                    $DEFFN  sin(0,4,0,0),One_pros,Sec_pros,Quad_pros
   \   0000                    EXTERN  ?UI_MOD_L00
   \   0000                    EXTERN  ?SL_DIV_L01
   \   0000                    EXTERN  ?L_CMP_L01
   \   0000                    EXTERN  ?L_ADD_ASG_DPTR_R4567_L01
   \   0000                    EXTERN  ?L_OR_ASG_DPTR_R4567_L01
   \   0000                    EXTERN  ?F_ADD_L02
   \   0000                    EXTERN  ?F_SUB_R_L02
   \   0000                    EXTERN  ?F_MUL_L02
   \   0000                    EXTERN  ?F_DIV_L02
   \   0000                    EXTERN  ?F_DIV_R_L02
   \   0000                    EXTERN  ?F_ADD_ASG_R0_R4567_L02
   \   0000                    EXTERN  ?F_ADD_ASG_DPTR_R4567_L02
   \   0000                    EXTERN  ?R4567_FLT_TO_LONG_L02
   \   0000                    EXTERN  ?R4567_LONG_TO_FLT_L02
   \   0000                    EXTERN  ?R0123_ULONG_TO_FLT_L02
   \   0000                    EXTERN  ?R4567_ULONG_TO_FLT_L02
   \   0000                    EXTERN  ?STO_R4567_IR0_L20
   \   0000                    EXTERN  ?STO_R0123_DPTR_L20
   \   0000                    EXTERN  ?STO_R4567_DPTR_L20
   \   0000                    EXTERN  ?LD_R0123_IR0_L20
   \   0000                    EXTERN  ?LD_R4567_IR0_L20
   \   0000                    EXTERN  ?LD_R0123_XDPTR_L20
   \   0000                    EXTERN  ?LD_R4567_XDPTR_L20
   \   0000                    EXTERN  ?CL8051M_5_12_L17
   \   0000                    RSEG    CODE
      1          #include <c:\cci_hdsl\include\io51.h>
      2          #include <c:\cci_hdsl\include\math.h>
      3          #include <wds350.h>
      4          
      5          #pragma memory=code
      6          char Title[10][65]={
      7          "/ /// /////////////////////////////////////////////// /// /",
      8          "/ /// /////////////////////////////////////////////// /// /",
      9          "/ /// ///        Wind Speed & Direction Board     /// /// /",
     10          "/ /// ///                        (General)        /// /// /",
     11          "/ /// ///       JINYANG  INDUSTRIAL.,CO LTD       /// /// /",
     12          "/ /// ///       Program By  Hae-suk. JIN          /// /// /",
     13          "/ /// ///     Start :  1995.12. 17                /// /// /",
     14          "/ /// ///       End :  1996. 4.  3  Ver 3.0       /// /// /",
     15          "/ /// /////////////////////////////////////////////// /// /",
     16          "/ /// /////////////////////////////////////////////// /// /"
     17          };
     18          //               Memory Default Set
     19          //  Adirection Default Value   Aspeed Default Value
     20          //                           0 :                   5.835
     21          //   254 ;  22.5       //   45 ;  3 m/s   5.833    3.890 knot
     22          //   509 ;  45         //   80 ;  5 m/s   9.725    9.725
     23          //   763 ;  67.5       //  160 ; 10 m/s  19.5      9.725
     24          //  1018 ;  90         //  248 ; 15 m/s  29.16
     25          //  1272 ; 112.5       //  333 ; 20 m/s  38.88
     26          //  1526 ; 135         //  420 ; 25 m/s  48.61
     27          //  1781 ; 157.5       //  507 ; 30 m/s
     28          //  2035 ; 180         //  593 ; 35 m/s
     29          //  2289 ; 202.5       //  680 ; 40 m/s
     30          //  2544 ; 225         //  766 ; 45 m/s
     31          //  2798 ; 247.5       //  853 ; 50 m/s
     32          //  3053 ; 270         //  940 ; 55 m/s
     33          //  3307 ; 292.5       // 1027 ; 60 m/s 116.7
     34          //  3561 ; 315         // 1113 ; 65 m/s 126.4
     35          //  3816 ; 337.5       // 1200 ; 70 m/s
     36          //  4070 ; 360         // 1287 ; 75 m/s
     37          
     38          
     39          static  unsigned    int Adirection[16] = {
     40           254,509, 763,1018,1272,1526,1781,2035,2289,2544,2798,3053,3307,3561,3816,4070};
     41          // 0   1   2   3    4    5    6    7    8    9   10   11   12   13   14   15
     42          static  unsigned    int Aspeed[16] = {
     43          //   3   5   10   15   20   25   30   35   40   45   50   55   60   65   70   75
     44                  38, 72, 152, 227, 303, 382, 460, 544, 627, 706, 785, 864,944 ,1022,1101,1181};
     45          //  45, 80, 160, 248, 324, 410, 495, 579, 663, 748, 833, 918,1003,1088,1172,1257};
     46          //static  unsigned    int Adirection[16] = {
     47          // 254,509,763,1018,1272,1526,1781,2035,2289,2544,2798,3053,3307,3561,3816,4070};
     48          // 0   1   2   3    4    5    6    7    8    9   10   11   12   13   14   15
     49          //static  unsigned    int Aspeed[16] = {
     50          //  45, 80, 160, 248, 333, 420, 507, 593, 680, 766, 853, 940,1027,1113,1200,1287};
     51          //   0   1   2   3    4    5    6    7    8    9   10   11   12   13   14   15
     52          #pragma memory=default
     53          
     54          #define     CS      P1.3
     55          #define     CLK     P1.2
     56          #define     DI      P1.1
     57          #define     DO      P1.0
     58          #define     RedL    P1.7        // Transm
     59          #define     BlueL   P1.6        // Receve
     60          #define     Wdt     P1.5
     61          #define     LightL  0x800
     62          
     63          interrupt   void    EX0_int(void);       // 4 Hz (Time Process)
     64          interrupt   void    T0_int(void);        // Wind Speed Buffer
     65          interrupt   void    T2_int(void);
     66          interrupt   void    SCON_int(void);      // Internal Serial Communication
     67                                  void    Quad_pros(void);
     68                                  void    Sec_pros(void);
     69                                  void    One_pros(void);
     70                                  void    Ten_pros(void);
     71                                  void    initialize(void);
     72             unsigned int     Ws_calc(unsigned int);
     73             unsigned int     Ws_calc1(unsigned int);
     74             unsigned int     Ws_calc2(unsigned int);
     75          
     76          void initialize(void)
     77          {
   \   0000            initialize:
     78                  unsigned int i;
     79          
     80                  IE=0x80;
   \   0000  75A880            MOV     IE,#128
     81                  PCON=0x80;          // Baudrate double set
   \   0003  758780            MOV     PCON,#128
     82                  P2=0xff;
   \   0006  75A0FF            MOV     P2,#255
     83          
     84                  TMOD = 0x25;        // T0 = counter 16Bit no,Prescaler,
   \   0009  758925            MOV     TMOD,#37
     85          
     86              TH1 = 0xf4;
   \   000C  758DF4            MOV     TH1,#244
     87              TL1 = 0xf4;        // 23Mhz = F3, 22Mhz = F4,18Mhz = F6, 11Mhz = fa Set
   \   000F  758BF4            MOV     TL1,#244
     88              TH0=0;
   \   0012  758C00            MOV     TH0,#0
     89              TL0=0;
   \   0015  758A00            MOV     TL0,#0
     90          
     91              TH2=0;
   \   0018  75CD00            MOV     205,#0
     92                  TL2=0;
   \   001B  75CC00            MOV     204,#0
     93              RCAP2L=0x00;
   \   001E  75CA00            MOV     202,#0
     94              RCAP2H=0x00;
   \   0021  75CB00            MOV     203,#0
     95          
     96                  SCON=0x50;
   \   0024  759850            MOV     SCON,#80
     97              TR1=1;
   \   0027  D28E              SETB    TCON.6
     98              TR0=0;      // External Counting Stop
   \   0029  C28C              CLR     TCON.4
     99          
    100              Rpoint=0;
   \   002B  9001EE            MOV     DPTR,#Rpoint
   \   002E  E4                CLR     A
   \   002F  F0                MOVX    @DPTR,A
   \   0030  A3                INC     DPTR
   \   0031  F0                MOVX    @DPTR,A
    101              Spoint=0;
   \   0032  900254            MOV     DPTR,#Spoint
   \   0035  F0                MOVX    @DPTR,A
   \   0036  A3                INC     DPTR
   \   0037  F0                MOVX    @DPTR,A
    102              Comon=0;
   \   0038  C203              CLR     Comon
    103              Quad=0;
   \   003A  90000A            MOV     DPTR,#Quad
   \   003D  F0                MOVX    @DPTR,A
    104                  Second=1;
   \   003E  04                INC     A
   \   003F  90000C            MOV     DPTR,#Second
   \   0042  F0                MOVX    @DPTR,A
    105                  Minute=0;
   \   0043  E4                CLR     A
   \   0044  90000B            MOV     DPTR,#Minute
   \   0047  F0                MOVX    @DPTR,A
    106              Wssta=0;
   \   0048  900001            MOV     DPTR,#Wssta
   \   004B  F0                MOVX    @DPTR,A
    107                  Wdsta=0;
   \   004C  900000            MOV     DPTR,#Wdsta
   \   004F  F0                MOVX    @DPTR,A
    108              Wpoint=0;
   \   0050  900047            MOV     DPTR,#Wpoint
   \   0053  F0                MOVX    @DPTR,A
    109              Nws=0;
   \   0054  900002            MOV     DPTR,#Nws
   \   0057  F0                MOVX    @DPTR,A
   \   0058  A3                INC     DPTR
   \   0059  F0                MOVX    @DPTR,A
   \   005A  A3                INC     DPTR
   \   005B  F0                MOVX    @DPTR,A
   \   005C  A3                INC     DPTR
   \   005D  F0                MOVX    @DPTR,A
    110              Ows=0;
   \   005E  900006            MOV     DPTR,#Ows
   \   0061  F0                MOVX    @DPTR,A
   \   0062  A3                INC     DPTR
   \   0063  F0                MOVX    @DPTR,A
   \   0064  A3                INC     DPTR
   \   0065  F0                MOVX    @DPTR,A
   \   0066  A3                INC     DPTR
   \   0067  F0                MOVX    @DPTR,A
    111          
    112                  Sbuf[4]=0;
   \   0068  9001F4            MOV     DPTR,#Sbuf+4
   \   006B  F0                MOVX    @DPTR,A
    113              Sbuf[5]=0;
   \   006C  A3                INC     DPTR
   \   006D  F0                MOVX    @DPTR,A
    114              Sbuf[6]=0;
   \   006E  A3                INC     DPTR
   \   006F  F0                MOVX    @DPTR,A
    115              Sbuf[7]=0;
   \   0070  A3                INC     DPTR
   \   0071  F0                MOVX    @DPTR,A
    116                  for(i=0; i != 60;i++)
   \   0072  7800              MOV     R0,#$LOCBI initialize
   \   0074  F6                MOV     @R0,A
   \   0075  08                INC     R0
   \   0076  F6                MOV     @R0,A
   \   0077            ?0001:
   \   0077  7800              MOV     R0,#$LOCBI initialize+1
   \   0079  E6                MOV     A,@R0
   \   007A  643C              XRL     A,#60
   \   007C  7004              JNZ     ?0361
   \   007E  18                DEC     R0
   \   007F  E6                MOV     A,@R0
   \   0080  602A              JZ      ?0000
   \   0082            ?0361:
   \   0082            ?0002:
    117              {
    118                  WdSecd[i]=0;
   \   0082  7800              MOV     R0,#$LOCBI initialize+1
   \   0084  E6                MOV     A,@R0
   \   0085  25E0              ADD     A,ACC
   \   0087  244A              ADD     A,#LOW(WdSecd)
   \   0089  F582              MOV     DPL,A
   \   008B  E4                CLR     A
   \   008C  3400              ADDC    A,#HIGH(WdSecd)
   \   008E  F583              MOV     DPH,A
   \   0090  E4                CLR     A
   \   0091  F0                MOVX    @DPTR,A
   \   0092  A3                INC     DPTR
   \   0093  F0                MOVX    @DPTR,A
    119                  WsSecd[i]=0;
   \   0094  E6                MOV     A,@R0
   \   0095  25E0              ADD     A,ACC
   \   0097  24C4              ADD     A,#LOW(WsSecd)
   \   0099  F582              MOV     DPL,A
   \   009B  E4                CLR     A
   \   009C  3400              ADDC    A,#HIGH(WsSecd)
   \   009E  F583              MOV     DPH,A
   \   00A0  E4                CLR     A
   \   00A1  F0                MOVX    @DPTR,A
   \   00A2  A3                INC     DPTR
   \   00A3  F0                MOVX    @DPTR,A
   \   00A4  06                INC     @R0
   \   00A5  E6                MOV     A,@R0
   \   00A6  18                DEC     R0
   \   00A7  7001              JNZ     $+3
   \   00A9  06                INC     @R0
   \   00AA  80CB              SJMP    ?0001
   \   00AC            ?0000:
    120              }               // 1 Sec, Avarage Dim Clear
    121              for(i=0; i != 12;i++)
   \   00AC  7800              MOV     R0,#$LOCBI initialize
   \   00AE  E4                CLR     A
   \   00AF  F6                MOV     @R0,A
   \   00B0  08                INC     R0
   \   00B1  F6                MOV     @R0,A
   \   00B2            ?0005:
   \   00B2  7800              MOV     R0,#$LOCBI initialize+1
   \   00B4  E6                MOV     A,@R0
   \   00B5  640C              XRL     A,#12
   \   00B7  7004              JNZ     ?0362
   \   00B9  18                DEC     R0
   \   00BA  E6                MOV     A,@R0
   \   00BB  602A              JZ      ?0004
   \   00BD            ?0362:
   \   00BD            ?0006:
    122              {
    123                  Wddata[i]=0;
   \   00BD  7800              MOV     R0,#$LOCBI initialize+1
   \   00BF  E6                MOV     A,@R0
   \   00C0  25E0              ADD     A,ACC
   \   00C2  2417              ADD     A,#LOW(Wddata)
   \   00C4  F582              MOV     DPL,A
   \   00C6  E4                CLR     A
   \   00C7  3400              ADDC    A,#HIGH(Wddata)
   \   00C9  F583              MOV     DPH,A
   \   00CB  E4                CLR     A
   \   00CC  F0                MOVX    @DPTR,A
   \   00CD  A3                INC     DPTR
   \   00CE  F0                MOVX    @DPTR,A
    124                          Wsdata[i]=0;
   \   00CF  E6                MOV     A,@R0
   \   00D0  25E0              ADD     A,ACC
   \   00D2  242F              ADD     A,#LOW(Wsdata)
   \   00D4  F582              MOV     DPL,A
   \   00D6  E4                CLR     A
   \   00D7  3400              ADDC    A,#HIGH(Wsdata)
   \   00D9  F583              MOV     DPH,A
   \   00DB  E4                CLR     A
   \   00DC  F0                MOVX    @DPTR,A
   \   00DD  A3                INC     DPTR
   \   00DE  F0                MOVX    @DPTR,A
   \   00DF  06                INC     @R0
   \   00E0  E6                MOV     A,@R0
   \   00E1  18                DEC     R0
   \   00E2  7001              JNZ     $+3
   \   00E4  06                INC     @R0
   \   00E5  80CB              SJMP    ?0005
   \   00E7            ?0004:
    125                  }               // 3 Sec, Avarage Dim Clear
    126              for(i=0; i != 10;i++)
   \   00E7  7800              MOV     R0,#$LOCBI initialize
   \   00E9  E4                CLR     A
   \   00EA  F6                MOV     @R0,A
   \   00EB  08                INC     R0
   \   00EC  F6                MOV     @R0,A
   \   00ED            ?0009:
   \   00ED  7800              MOV     R0,#$LOCBI initialize+1
   \   00EF  E6                MOV     A,@R0
   \   00F0  640A              XRL     A,#10
   \   00F2  7004              JNZ     ?0363
   \   00F4  18                DEC     R0
   \   00F5  E6                MOV     A,@R0
   \   00F6  602A              JZ      ?0008
   \   00F8            ?0363:
   \   00F8            ?0010:
    127              {
    128                  WdMind[i]=0;
   \   00F8  7800              MOV     R0,#$LOCBI initialize+1
   \   00FA  E6                MOV     A,@R0
   \   00FB  25E0              ADD     A,ACC
   \   00FD  243E              ADD     A,#LOW(WdMind)
   \   00FF  F582              MOV     DPL,A
   \   0101  E4                CLR     A
   \   0102  3401              ADDC    A,#HIGH(WdMind)
   \   0104  F583              MOV     DPH,A
   \   0106  E4                CLR     A
   \   0107  F0                MOVX    @DPTR,A
   \   0108  A3                INC     DPTR
   \   0109  F0                MOVX    @DPTR,A
    129                  WsMind[i]=0;
   \   010A  E6                MOV     A,@R0
   \   010B  25E0              ADD     A,ACC
   \   010D  2454              ADD     A,#LOW(WsMind)
   \   010F  F582              MOV     DPL,A
   \   0111  E4                CLR     A
   \   0112  3401              ADDC    A,#HIGH(WsMind)
   \   0114  F583              MOV     DPH,A
   \   0116  E4                CLR     A
   \   0117  F0                MOVX    @DPTR,A
   \   0118  A3                INC     DPTR
   \   0119  F0                MOVX    @DPTR,A
   \   011A  06                INC     @R0
   \   011B  E6                MOV     A,@R0
   \   011C  18                DEC     R0
   \   011D  7001              JNZ     $+3
   \   011F  06                INC     @R0
   \   0120  80CB              SJMP    ?0009
   \   0122            ?0008:
    130              }               // Minute Dim Clear
    131              WdMin=0;
   \   0122  90013C            MOV     DPTR,#WdMin
   \   0125  E4                CLR     A
   \   0126  F0                MOVX    @DPTR,A
   \   0127  A3                INC     DPTR
   \   0128  F0                MOVX    @DPTR,A
    132                  WsMin=0;
   \   0129  900152            MOV     DPTR,#WsMin
   \   012C  F0                MOVX    @DPTR,A
   \   012D  A3                INC     DPTR
   \   012E  F0                MOVX    @DPTR,A
    133              WsMin  = 0;
   \   012F  900152            MOV     DPTR,#WsMin
   \   0132  F0                MOVX    @DPTR,A
   \   0133  A3                INC     DPTR
   \   0134  F0                MOVX    @DPTR,A
    134              WsTen  = 0;
   \   0135  900168            MOV     DPTR,#WsTen
   \   0138  F0                MOVX    @DPTR,A
   \   0139  A3                INC     DPTR
   \   013A  F0                MOVX    @DPTR,A
    135              WsGmax = 0;
   \   013B  900170            MOV     DPTR,#WsGmax
   \   013E  F0                MOVX    @DPTR,A
   \   013F  A3                INC     DPTR
   \   0140  F0                MOVX    @DPTR,A
    136                  WsMmax = 0;
   \   0141  900174            MOV     DPTR,#WsMmax
   \   0144  F0                MOVX    @DPTR,A
   \   0145  A3                INC     DPTR
   \   0146  F0                MOVX    @DPTR,A
    137              WsTmax = 0;
   \   0147  900178            MOV     DPTR,#WsTmax
   \   014A  F0                MOVX    @DPTR,A
   \   014B  A3                INC     DPTR
   \   014C  F0                MOVX    @DPTR,A
    138              WsEcount=0;
   \   014D  900180            MOV     DPTR,#WsEcount
   \   0150  F0                MOVX    @DPTR,A
   \   0151  A3                INC     DPTR
   \   0152  F0                MOVX    @DPTR,A
    139              WdEcount=0;
   \   0153  90017E            MOV     DPTR,#WdEcount
   \   0156  F0                MOVX    @DPTR,A
   \   0157  A3                INC     DPTR
   \   0158  F0                MOVX    @DPTR,A
    140              WdsEcount=0;
   \   0159  900186            MOV     DPTR,#WdsEcount
   \   015C  F0                MOVX    @DPTR,A
   \   015D  A3                INC     DPTR
   \   015E  F0                MOVX    @DPTR,A
    141              TEcount=0;
   \   015F  900188            MOV     DPTR,#TEcount
   \   0162  F0                MOVX    @DPTR,A
   \   0163  A3                INC     DPTR
   \   0164  F0                MOVX    @DPTR,A
    142              sinSec=0;
   \   0165  900271            MOV     DPTR,#sinSec
   \   0168  F0                MOVX    @DPTR,A
   \   0169  A3                INC     DPTR
   \   016A  F0                MOVX    @DPTR,A
    143              sinOne=0;
   \   016B  900275            MOV     DPTR,#sinOne
   \   016E  F0                MOVX    @DPTR,A
   \   016F  A3                INC     DPTR
   \   0170  F0                MOVX    @DPTR,A
    144                  sinTen=0;
   \   0171  900279            MOV     DPTR,#sinTen
   \   0174  F0                MOVX    @DPTR,A
   \   0175  A3                INC     DPTR
   \   0176  F0                MOVX    @DPTR,A
    145                  cosSec=0;
   \   0177  90027D            MOV     DPTR,#cosSec
   \   017A  F0                MOVX    @DPTR,A
   \   017B  A3                INC     DPTR
   \   017C  F0                MOVX    @DPTR,A
    146                  cosOne=0;
   \   017D  900281            MOV     DPTR,#cosOne
   \   0180  F0                MOVX    @DPTR,A
   \   0181  A3                INC     DPTR
   \   0182  F0                MOVX    @DPTR,A
    147                  cosTen=0;
   \   0183  900285            MOV     DPTR,#cosTen
   \   0186  F0                MOVX    @DPTR,A
   \   0187  A3                INC     DPTR
   \   0188  F0                MOVX    @DPTR,A
    148                  sumSec=0;
   \   0189  900289            MOV     DPTR,#sumSec
   \   018C  F0                MOVX    @DPTR,A
   \   018D  A3                INC     DPTR
   \   018E  F0                MOVX    @DPTR,A
    149                  sumOne=0;
   \   018F  90028B            MOV     DPTR,#sumOne
   \   0192  F0                MOVX    @DPTR,A
   \   0193  A3                INC     DPTR
   \   0194  F0                MOVX    @DPTR,A
   \   0195  A3                INC     DPTR
   \   0196  F0                MOVX    @DPTR,A
   \   0197  A3                INC     DPTR
   \   0198  F0                MOVX    @DPTR,A
    150                  sumTen=0;
   \   0199  90028F            MOV     DPTR,#sumTen
   \   019C  F0                MOVX    @DPTR,A
   \   019D  A3                INC     DPTR
   \   019E  F0                MOVX    @DPTR,A
   \   019F  A3                INC     DPTR
   \   01A0  F0                MOVX    @DPTR,A
   \   01A1  A3                INC     DPTR
   \   01A2  F0                MOVX    @DPTR,A
    151          
    152                  sinHTen = 0;
   \   01A3  900269            MOV     DPTR,#sinHTen
   \   01A6  F0                MOVX    @DPTR,A
   \   01A7  A3                INC     DPTR
   \   01A8  F0                MOVX    @DPTR,A
    153              cosHTen = 0;
   \   01A9  90026D            MOV     DPTR,#cosHTen
   \   01AC  F0                MOVX    @DPTR,A
   \   01AD  A3                INC     DPTR
   \   01AE  F0                MOVX    @DPTR,A
    154          
    155                  WdEvalue=0;
   \   01AF  90017A            MOV     DPTR,#WdEvalue
   \   01B2  F0                MOVX    @DPTR,A
   \   01B3  A3                INC     DPTR
   \   01B4  F0                MOVX    @DPTR,A
    156              WsEvalue=0;
   \   01B5  90017C            MOV     DPTR,#WsEvalue
   \   01B8  F0                MOVX    @DPTR,A
   \   01B9  A3                INC     DPTR
   \   01BA  F0                MOVX    @DPTR,A
    157          
    158              // Bit Default Set
    159              Send=0;
   \   01BB  C202              CLR     Send
    160              Sendd=0;
   \   01BD  C201              CLR     Sendd
    161              Init=1;
   \   01BF  D208              SETB    Init
    162              Aderr=0;
   \   01C1  C20A              CLR     Aderr
    163              MeasQ=0;
   \   01C3  C207              CLR     MeasQ
    164                  Terror=0;
   \   01C5  C20D              CLR     Terror
   \   01C7            ?0014:
    165          /* Hard Ware Set up ID READ */
    166              do
    167              {
    168                  ID=read_XDATA(VID);
   \   01C7  908000            MOV     DPTR,#32768
   \   01CA  E0                MOVX    A,@DPTR
   \   01CB  900256            MOV     DPTR,#ID
   \   01CE  F0                MOVX    @DPTR,A
    169                  for(i=10; i != 0; i--)
   \   01CF  7800              MOV     R0,#$LOCBI initialize
   \   01D1  E4                CLR     A
   \   01D2  F6                MOV     @R0,A
   \   01D3  08                INC     R0
   \   01D4  760A              MOV     @R0,#10
   \   01D6            ?0016:
   \   01D6  7800              MOV     R0,#$LOCBI initialize
   \   01D8  E6                MOV     A,@R0
   \   01D9  08                INC     R0
   \   01DA  46                ORL     A,@R0
   \   01DB  6016              JZ      ?0015
   \   01DD            ?0017:
    170                  {
    171                                  if(ID != read_XDATA(VID))
   \   01DD  908000            MOV     DPTR,#32768
   \   01E0  E0                MOVX    A,@DPTR
   \   01E1  FC                MOV     R4,A
   \   01E2  900256            MOV     DPTR,#ID
   \   01E5  E0                MOVX    A,@DPTR
   \   01E6  6C                XRL     A,R4
   \   01E7  6002              JZ      ?0020
   \   01E9            ?0019:
    172                          break;
   \   01E9  8008              SJMP    ?0015
   \   01EB            ?0020:
   \   01EB  E6                MOV     A,@R0
   \   01EC  16                DEC     @R0
   \   01ED  18                DEC     R0
   \   01EE  7001              JNZ     $+3
   \   01F0  16                DEC     @R0
   \   01F1  80E3              SJMP    ?0016
   \   01F3            ?0015:
    173                  }
    174              } while(i != 0);
   \   01F3  18                DEC     R0
   \   01F4  E6                MOV     A,@R0
   \   01F5  08                INC     R0
   \   01F6  46                ORL     A,@R0
   \   01F7  70CE              JNZ     ?0014
   \   01F9            ?0012:
    175          
    176              Fout=0;                     /* Fout 0 = Gust,1Min,10Min Max.    */
   \   01F9  C20E              CLR     Fout
    177              if((ID & 0x80) == 0x80)
   \   01FB  900256            MOV     DPTR,#ID
   \   01FE  E0                MOVX    A,@DPTR
   \   01FF  5480              ANL     A,#128
   \   0201  B48002            CJNE    A,#128,?0022
   \   0204            ?0021:
    178                  Fout=1;                 /* Fout 1 = Gust,Gust,Gust Max. */
   \   0204  D20E              SETB    Fout
   \   0206            ?0022:
    179          
    180              unit=0;                     // knot
   \   0206  C200              CLR     unit
    181              if((ID & 0x40) == 0x40)
   \   0208  E0                MOVX    A,@DPTR
   \   0209  5440              ANL     A,#64
   \   020B  B44002            CJNE    A,#64,?0024
   \   020E            ?0023:
    182                  unit=1;                 // m/s
   \   020E  D200              SETB    unit
   \   0210            ?0024:
    183          
    184                  ID &= 0x0f;
   \   0210  E0                MOVX    A,@DPTR
   \   0211  540F              ANL     A,#15
   \   0213  F0                MOVX    @DPTR,A
    185              ID  = (0x0f-ID) & 0x0f;     /* ID Number Complemently   */
   \   0214  E0                MOVX    A,@DPTR
   \   0215  FF                MOV     R7,A
   \   0216  F4                CPL     A
   \   0217  04                INC     A
   \   0218  240F              ADD     A,#15
   \   021A  540F              ANL     A,#15
   \   021C  FF                MOV     R7,A
   \   021D  F0                MOVX    @DPTR,A
    186              BlueL=0;
   \   021E  C296              CLR     P1.6
    187              RedL=0;
   \   0220  C297              CLR     P1.7
    188          
    189              PS =1;      // Serial Priority
   \   0222  D2BC              SETB    IP.4
    190              TR2=1;      // Quad Time Watcher "RUN
   \   0224  D2CA              SETB    T2CON.2
    191                  IT0=1;      // Edge Trigger
   \   0226  D288              SETB    TCON.0
    192              ES =1;      // Serial Interrupt Enable
   \   0228  D2AC              SETB    IE.4
    193              ET2=1;      // Quad Time Watcher Enable
   \   022A  D2AD              SETB    IE.5
    194              EX0=1;      // External Interrupt Enable 4hz
   \   022C  D2A8              SETB    IE.0
    195          }
   \   022E  22                RET
    196          
    197          void main(void)
    198          {
   \   022F            main:
    199              unsigned int i;
    200          
    201              initialize();
   \   022F  120000            LCALL   $REFFN initialize
   \   0232            ?0026:
    202              while(1)
    203              {
    204                          if(Wbit)
   \   0232  300906            JNB     Wbit,?0029
   \   0235            ?0028:
    205                  {
    206                      Wdt=0;
   \   0235  C295              CLR     P1.5
    207                      Wbit=0;
   \   0237  C209              CLR     Wbit
    208                  }
    209                  else
   \   0239  8004              SJMP    ?0030
   \   023B            ?0029:
    210                  {
    211                                  Wdt=1;
   \   023B  D295              SETB    P1.5
    212                      Wbit=1;
   \   023D  D209              SETB    Wbit
   \   023F            ?0030:
    213                  }
    214          
    215                          if(Receve)
   \   023F  30041B            JNB     Receve,?0032
   \   0242            ?0031:
    216                  {
    217                      if(!Blueb--)
   \   0242  900257            MOV     DPTR,#Blueb
   \   0245  E0                MOVX    A,@DPTR
   \   0246  FD                MOV     R5,A
   \   0247  A3                INC     DPTR
   \   0248  E0                MOVX    A,@DPTR
   \   0249  FC                MOV     R4,A
   \   024A  E0                MOVX    A,@DPTR
   \   024B  24FF              ADD     A,#255
   \   024D  F0                MOVX    @DPTR,A
   \   024E  900257            MOV     DPTR,#Blueb
   \   0251  E0                MOVX    A,@DPTR
   \   0252  34FF              ADDC    A,#255
   \   0254  F0                MOVX    @DPTR,A
   \   0255  EC                MOV     A,R4
   \   0256  4D                ORL     A,R5
   \   0257  7004              JNZ     ?0034
   \   0259            ?0033:
    218                      {
    219                          BlueL=0;     // Receive LED off
   \   0259  C296              CLR     P1.6
    220                          Receve=0;
   \   025B  C204              CLR     Receve
   \   025D            ?0034:
   \   025D            ?0032:
    221                      }
    222                  }
    223                  if(Transm)
   \   025D  30051B            JNB     Transm,?0036
   \   0260            ?0035:
    224                          {
    225                                  if(!Redb--)
   \   0260  900259            MOV     DPTR,#Redb
   \   0263  E0                MOVX    A,@DPTR
   \   0264  FD                MOV     R5,A
   \   0265  A3                INC     DPTR
   \   0266  E0                MOVX    A,@DPTR
   \   0267  FC                MOV     R4,A
   \   0268  E0                MOVX    A,@DPTR
   \   0269  24FF              ADD     A,#255
   \   026B  F0                MOVX    @DPTR,A
   \   026C  900259            MOV     DPTR,#Redb
   \   026F  E0                MOVX    A,@DPTR
   \   0270  34FF              ADDC    A,#255
   \   0272  F0                MOVX    @DPTR,A
   \   0273  EC                MOV     A,R4
   \   0274  4D                ORL     A,R5
   \   0275  7004              JNZ     ?0038
   \   0277            ?0037:
    226                      {
    227                          RedL=0;
   \   0277  C297              CLR     P1.7
    228                          Transm=0;
   \   0279  C205              CLR     Transm
   \   027B            ?0038:
   \   027B            ?0036:
    229                      }
    230                  }
    231          
    232                  if(WdsEcount == 43200 || WsEcount == 21600)
   \   027B  900187            MOV     DPTR,#WdsEcount+1
   \   027E  E0                MOVX    A,@DPTR
   \   027F  64C0              XRL     A,#192
   \   0281  7008              JNZ     ?0364
   \   0283  900186            MOV     DPTR,#WdsEcount
   \   0286  E0                MOVX    A,@DPTR
   \   0287  64A8              XRL     A,#168
   \   0289  6010              JZ      ?0039
   \   028B            ?0364:
   \   028B  900181            MOV     DPTR,#WsEcount+1
   \   028E  E0                MOVX    A,@DPTR
   \   028F  6460              XRL     A,#96
   \   0291  7006              JNZ     ?0365
   \   0293  900180            MOV     DPTR,#WsEcount
   \   0296  E0                MOVX    A,@DPTR
   \   0297  6454              XRL     A,#84
   \   0299            ?0365:
   \   0299  700D              JNZ     ?0040
   \   029B            ?0041:
   \   029B            ?0042:
   \   029B            ?0039:
    233                  {
    234                      ES=0;
   \   029B  C2AC              CLR     IE.4
    235                                  Wssta |= 2;         // 010
   \   029D  900001            MOV     DPTR,#Wssta
   \   02A0  E0                MOVX    A,@DPTR
   \   02A1  4402              ORL     A,#2
   \   02A3  F0                MOVX    @DPTR,A
    236                      ES=1;
   \   02A4  D2AC              SETB    IE.4
    237                  }
    238                  else
   \   02A6  800B              SJMP    ?0043
   \   02A8            ?0040:
    239                  {
    240                      ES=0;
   \   02A8  C2AC              CLR     IE.4
    241                      Wssta &= 5;         // 101
   \   02AA  900001            MOV     DPTR,#Wssta
   \   02AD  E0                MOVX    A,@DPTR
   \   02AE  5405              ANL     A,#5
   \   02B0  F0                MOVX    @DPTR,A
    242                      ES=1;
   \   02B1  D2AC              SETB    IE.4
   \   02B3            ?0043:
    243                  }
    244          
    245                          if(WdsEcount == 43200 || WdEcount == 21600)
   \   02B3  900187            MOV     DPTR,#WdsEcount+1
   \   02B6  E0                MOVX    A,@DPTR
   \   02B7  64C0              XRL     A,#192
   \   02B9  7008              JNZ     ?0366
   \   02BB  900186            MOV     DPTR,#WdsEcount
   \   02BE  E0                MOVX    A,@DPTR
   \   02BF  64A8              XRL     A,#168
   \   02C1  6010              JZ      ?0044
   \   02C3            ?0366:
   \   02C3  90017F            MOV     DPTR,#WdEcount+1
   \   02C6  E0                MOVX    A,@DPTR
   \   02C7  6460              XRL     A,#96
   \   02C9  7006              JNZ     ?0367
   \   02CB  90017E            MOV     DPTR,#WdEcount
   \   02CE  E0                MOVX    A,@DPTR
   \   02CF  6454              XRL     A,#84
   \   02D1            ?0367:
   \   02D1  700D              JNZ     ?0045
   \   02D3            ?0046:
   \   02D3            ?0047:
   \   02D3            ?0044:
    246                  {
    247                      ES=0;
   \   02D3  C2AC              CLR     IE.4
    248                                  Wdsta |= 2;         // 010
   \   02D5  900000            MOV     DPTR,#Wdsta
   \   02D8  E0                MOVX    A,@DPTR
   \   02D9  4402              ORL     A,#2
   \   02DB  F0                MOVX    @DPTR,A
    249                      ES=1;
   \   02DC  D2AC              SETB    IE.4
    250                  }
    251                          else
   \   02DE  800B              SJMP    ?0048
   \   02E0            ?0045:
    252                  {
    253                      ES=0;
   \   02E0  C2AC              CLR     IE.4
    254                                  Wdsta &= 5;         // 101
   \   02E2  900000            MOV     DPTR,#Wdsta
   \   02E5  E0                MOVX    A,@DPTR
   \   02E6  5405              ANL     A,#5
   \   02E8  F0                MOVX    @DPTR,A
    255                                  ES=1;
   \   02E9  D2AC              SETB    IE.4
   \   02EB            ?0048:
    256                  }
    257          
    258                  if(Aderr)
   \   02EB  300A0A            JNB     Aderr,?0050
   \   02EE            ?0049:
    259                  {
    260                      ES=0;
   \   02EE  C2AC              CLR     IE.4
    261                                  Wdsta |= 4;         // 100
   \   02F0  E0                MOVX    A,@DPTR
   \   02F1  4404              ORL     A,#4
   \   02F3  F0                MOVX    @DPTR,A
    262                      ES=1;
   \   02F4  D2AC              SETB    IE.4
    263                  }
    264                          else
   \   02F6  8008              SJMP    ?0051
   \   02F8            ?0050:
    265                          {
    266                      ES=0;
   \   02F8  C2AC              CLR     IE.4
    267                                  Wdsta &= 3;         // 011
   \   02FA  E0                MOVX    A,@DPTR
   \   02FB  5403              ANL     A,#3
   \   02FD  F0                MOVX    @DPTR,A
    268                      ES=1;
   \   02FE  D2AC              SETB    IE.4
   \   0300            ?0051:
    269                  }
    270                  
    271                          if(Terror)
   \   0300  300D14            JNB     Terror,?0053
   \   0303            ?0052:
    272                  {
    273                      ES=0;
   \   0303  C2AC              CLR     IE.4
    274                      Wssta |= 1;         // 001
   \   0305  900001            MOV     DPTR,#Wssta
   \   0308  E0                MOVX    A,@DPTR
   \   0309  4401              ORL     A,#1
   \   030B  F0                MOVX    @DPTR,A
    275                                  Wdsta |= 1;
   \   030C  900000            MOV     DPTR,#Wdsta
   \   030F  E0                MOVX    A,@DPTR
   \   0310  4401              ORL     A,#1
   \   0312  F0                MOVX    @DPTR,A
    276                      ES=1;
   \   0313  D2AC              SETB    IE.4
    277                  }
    278                  else
   \   0315  8012              SJMP    ?0054
   \   0317            ?0053:
    279                  {
    280                      ES=0;
   \   0317  C2AC              CLR     IE.4
    281                      Wssta &= 6;         // 110
   \   0319  900001            MOV     DPTR,#Wssta
   \   031C  E0                MOVX    A,@DPTR
   \   031D  5406              ANL     A,#6
   \   031F  F0                MOVX    @DPTR,A
    282                                  Wdsta &= 6;
   \   0320  900000            MOV     DPTR,#Wdsta
   \   0323  E0                MOVX    A,@DPTR
   \   0324  5406              ANL     A,#6
   \   0326  F0                MOVX    @DPTR,A
    283                      ES=1;
   \   0327  D2AC              SETB    IE.4
   \   0329            ?0054:
    284                          }
    285          
    286                  if(MeasQ == 1)
   \   0329  300724            JNB     MeasQ,?0056
   \   032C            ?0055:
    287                  {
    288                      EX0=0;
   \   032C  C2A8              CLR     IE.0
    289                      MeasQ=0;
   \   032E  C207              CLR     MeasQ
    290                      Quad_pros();
   \   0330  120000            LCALL   $REFFN Quad_pros
    291                                  if(Quad == 0)
   \   0333  90000A            MOV     DPTR,#Quad
   \   0336  E0                MOVX    A,@DPTR
   \   0337  7015              JNZ     ?0058
   \   0339            ?0057:
    292                      {
    293                          Sec_pros();
   \   0339  120000            LCALL   $REFFN Sec_pros
    294                          if(Second == 0)
   \   033C  90000C            MOV     DPTR,#Second
   \   033F  E0                MOVX    A,@DPTR
   \   0340  700C              JNZ     ?0060
   \   0342            ?0059:
    295                                          {
    296                              One_pros();
   \   0342  120000            LCALL   $REFFN One_pros
    297                              if(Minute == 0)
   \   0345  90000B            MOV     DPTR,#Minute
   \   0348  E0                MOVX    A,@DPTR
   \   0349  7003              JNZ     ?0062
   \   034B            ?0061:
    298                                  Ten_pros();
   \   034B  120000            LCALL   $REFFN Ten_pros
   \   034E            ?0062:
   \   034E            ?0060:
   \   034E            ?0058:
    299                          }
    300                      }
    301                      EX0=1;
   \   034E  D2A8              SETB    IE.0
   \   0350            ?0056:
    302                  }
    303              }
    304          }
   \   0350  020232            LJMP    ?0026
    305          
    306          
    307          void Quad_pros(void)
    308          {
   \   0353            Quad_pros:
    309              unsigned int i,wssum;
    310              double sumsin,sumcos,ave;
    311                                          //  Wind Speed Guest Average Calculate
    312              wssum=0;
   \   0353  7800              MOV     R0,#$LOCBI Quad_pros+2
   \   0355  E4                CLR     A
   \   0356  F6                MOV     @R0,A
   \   0357  08                INC     R0
   \   0358  F6                MOV     @R0,A
    313              for(i=0;i != 12;i++)
   \   0359  7800              MOV     R0,#$LOCBI Quad_pros
   \   035B  F6                MOV     @R0,A
   \   035C  08                INC     R0
   \   035D  F6                MOV     @R0,A
   \   035E            ?0064:
   \   035E  7800              MOV     R0,#$LOCBI Quad_pros+1
   \   0360  E6                MOV     A,@R0
   \   0361  640C              XRL     A,#12
   \   0363  7004              JNZ     ?0368
   \   0365  18                DEC     R0
   \   0366  E6                MOV     A,@R0
   \   0367  6025              JZ      ?0063
   \   0369            ?0368:
   \   0369            ?0065:
    314                  wssum+=Wsdata[i];
   \   0369  7800              MOV     R0,#$LOCBI Quad_pros+1
   \   036B  E6                MOV     A,@R0
   \   036C  25E0              ADD     A,ACC
   \   036E  242F              ADD     A,#LOW(Wsdata)
   \   0370  F582              MOV     DPL,A
   \   0372  E4                CLR     A
   \   0373  3400              ADDC    A,#HIGH(Wsdata)
   \   0375  F583              MOV     DPH,A
   \   0377  E0                MOVX    A,@DPTR
   \   0378  FD                MOV     R5,A
   \   0379  A3                INC     DPTR
   \   037A  E0                MOVX    A,@DPTR
   \   037B  FC                MOV     R4,A
   \   037C  08                INC     R0
   \   037D  08                INC     R0
   \   037E  E6                MOV     A,@R0
   \   037F  2C                ADD     A,R4
   \   0380  F6                MOV     @R0,A
   \   0381  18                DEC     R0
   \   0382  E6                MOV     A,@R0
   \   0383  3D                ADDC    A,R5
   \   0384  F6                MOV     @R0,A
   \   0385  18                DEC     R0
   \   0386  06                INC     @R0
   \   0387  E6                MOV     A,@R0
   \   0388  18                DEC     R0
   \   0389  7001              JNZ     $+3
   \   038B  06                INC     @R0
   \   038C  80D0              SJMP    ?0064
   \   038E            ?0063:
    315                  wssum = wssum/3.;
   \   038E  7800              MOV     R0,#$LOCBI Quad_pros+2
   \   0390  E6                MOV     A,@R0
   \   0391  FF                MOV     R7,A
   \   0392  08                INC     R0
   \   0393  E6                MOV     A,@R0
   \   0394  FE                MOV     R6,A
   \   0395  18                DEC     R0
   \   0396  E6                MOV     A,@R0
   \   0397  FD                MOV     R5,A
   \   0398  08                INC     R0
   \   0399  E6                MOV     A,@R0
   \   039A  FC                MOV     R4,A
   \   039B  ED                MOV     A,R5
   \   039C  E4                CLR     A
   \   039D  FE                MOV     R6,A
   \   039E  FF                MOV     R7,A
   \   039F  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   03A2  E4                CLR     A
   \   03A3  F8                MOV     R0,A
   \   03A4  F9                MOV     R1,A
   \   03A5  7440              MOV     A,#64
   \   03A7  FA                MOV     R2,A
   \   03A8  FB                MOV     R3,A
   \   03A9  120000            LCALL   ?F_DIV_L02
   \   03AC  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    316              wssum = Ws_calc(wssum);
   \   03AF  7800              MOV     R0,#$LOCBI Quad_pros+2
   \   03B1  ED                MOV     A,R5
   \   03B2  F6                MOV     @R0,A
   \   03B3  08                INC     R0
   \   03B4  EC                MOV     A,R4
   \   03B5  F6                MOV     @R0,A
   \   03B6  18                DEC     R0
   \   03B7  E6                MOV     A,@R0
   \   03B8  FD                MOV     R5,A
   \   03B9  08                INC     R0
   \   03BA  E6                MOV     A,@R0
   \   03BB  FC                MOV     R4,A
   \   03BC  120000            LCALL   $REFFN Ws_calc
    317          
    318              if(wssum > WsGmax)
   \   03BF  7800              MOV     R0,#$LOCBI Quad_pros+2
   \   03C1  ED                MOV     A,R5
   \   03C2  F6                MOV     @R0,A
   \   03C3  08                INC     R0
   \   03C4  EC                MOV     A,R4
   \   03C5  F6                MOV     @R0,A
   \   03C6  900171            MOV     DPTR,#WsGmax+1
   \   03C9  E0                MOVX    A,@DPTR
   \   03CA  C3                CLR     C
   \   03CB  9C                SUBB    A,R4
   \   03CC  900170            MOV     DPTR,#WsGmax
   \   03CF  E0                MOVX    A,@DPTR
   \   03D0  9D                SUBB    A,R5
   \   03D1  4003              JC      $+5
   \   03D3  020503            LJMP    ?0068
   \   03D6            ?0067:
    319              {
    320                  ES=0;
   \   03D6  C2AC              CLR     IE.4
    321                  WsGmax = wssum;
   \   03D8  ED                MOV     A,R5
   \   03D9  F0                MOVX    @DPTR,A
   \   03DA  A3                INC     DPTR
   \   03DB  EC                MOV     A,R4
   \   03DC  F0                MOVX    @DPTR,A
    322                  ES=1;
   \   03DD  D2AC              SETB    IE.4
    323                  sumcos=0;
   \   03DF  7800              MOV     R0,#$LOCBI Quad_pros+8
   \   03E1  E4                CLR     A
   \   03E2  F6                MOV     @R0,A
   \   03E3  08                INC     R0
   \   03E4  F6                MOV     @R0,A
    324                          sumsin=0;
   \   03E5  7800              MOV     R0,#$LOCBI Quad_pros+4
   \   03E7  F6                MOV     @R0,A
   \   03E8  08                INC     R0
   \   03E9  F6                MOV     @R0,A
    325                  for(i=0;i != 12; i++)
   \   03EA  7800              MOV     R0,#$LOCBI Quad_pros
   \   03EC  F6                MOV     @R0,A
   \   03ED  08                INC     R0
   \   03EE  F6                MOV     @R0,A
   \   03EF            ?0070:
   \   03EF  7800              MOV     R0,#$LOCBI Quad_pros+1
   \   03F1  E6                MOV     A,@R0
   \   03F2  640C              XRL     A,#12
   \   03F4  7004              JNZ     ?0369
   \   03F6  18                DEC     R0
   \   03F7  E6                MOV     A,@R0
   \   03F8  6053              JZ      ?0069
   \   03FA            ?0369:
   \   03FA            ?0071:
    326                  {
    327                      ave=(double)(Wddata[i]/10.)*(3.141592/180.);
   \   03FA  7800              MOV     R0,#$LOCBI Quad_pros+1
   \   03FC  E6                MOV     A,@R0
   \   03FD  25E0              ADD     A,ACC
   \   03FF  2417              ADD     A,#LOW(Wddata)
   \   0401  F582              MOV     DPL,A
   \   0403  E4                CLR     A
   \   0404  3400              ADDC    A,#HIGH(Wddata)
   \   0406  F583              MOV     DPH,A
   \   0408  E0                MOVX    A,@DPTR
   \   0409  FD                MOV     R5,A
   \   040A  A3                INC     DPTR
   \   040B  E0                MOVX    A,@DPTR
   \   040C  FC                MOV     R4,A
   \   040D  ED                MOV     A,R5
   \   040E  E4                CLR     A
   \   040F  FE                MOV     R6,A
   \   0410  FF                MOV     R7,A
   \   0411  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   0414  E4                CLR     A
   \   0415  F8                MOV     R0,A
   \   0416  F9                MOV     R1,A
   \   0417  7A20              MOV     R2,#32
   \   0419  7B41              MOV     R3,#65
   \   041B  120000            LCALL   ?F_DIV_L02
   \   041E  7833              MOV     R0,#51
   \   0420  7B3C              MOV     R3,#60
   \   0422  7A8E              MOV     R2,#142
   \   0424  79FA              MOV     R1,#250
   \   0426  120000            LCALL   ?F_MUL_L02
    328                      sumsin += sin(ave);
   \   0429  7800              MOV     R0,#$LOCBI Quad_pros+12
   \   042B  120000            LCALL   ?STO_R4567_IR0_L20
   \   042E  120000            LCALL   $REFFN sin
   \   0431  7800              MOV     R0,#$LOCBI Quad_pros+4
   \   0433  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
    329                      sumcos += cos(ave);
   \   0436  7800              MOV     R0,#$LOCBI Quad_pros+12
   \   0438  120000            LCALL   ?LD_R4567_IR0_L20
   \   043B  120000            LCALL   $REFFN cos
   \   043E  7800              MOV     R0,#$LOCBI Quad_pros+8
   \   0440  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0443  7800              MOV     R0,#$LOCBI Quad_pros+1
   \   0445  06                INC     @R0
   \   0446  E6                MOV     A,@R0
   \   0447  18                DEC     R0
   \   0448  7001              JNZ     $+3
   \   044A  06                INC     @R0
   \   044B  80A2              SJMP    ?0070
   \   044D            ?0069:
    330                  }
    331                          ave=(double)(atan(sumsin/sumcos))*(180./3.141592);
   \   044D  7800              MOV     R0,#$LOCBI Quad_pros+4
   \   044F  120000            LCALL   ?LD_R4567_IR0_L20
   \   0452  08                INC     R0
   \   0453  120000            LCALL   ?LD_R0123_IR0_L20
   \   0456  120000            LCALL   ?F_DIV_L02
   \   0459  120000            LCALL   $REFFN atan
   \   045C  792E              MOV     R1,#46
   \   045E  7B42              MOV     R3,#66
   \   0460  7A65              MOV     R2,#101
   \   0462  78E4              MOV     R0,#228
   \   0464  120000            LCALL   ?F_MUL_L02
   \   0467  7800              MOV     R0,#$LOCBI Quad_pros+12
   \   0469  120000            LCALL   ?STO_R4567_IR0_L20
    332                          if(sumsin < 0 && sumcos > 0)
   \   046C  7800              MOV     R0,#$LOCBI Quad_pros+4
   \   046E  120000            LCALL   ?LD_R4567_IR0_L20
   \   0471  EF                MOV     A,R7
   \   0472  4E                ORL     A,R6
   \   0473  6003              JZ      ?0370
   \   0475  EF                MOV     A,R7
   \   0476  5480              ANL     A,#128
   \   0478            ?0370:
   \   0478  B2E7              CPL     ACC.7
   \   047A  701F              JNZ     ?0074
   \   047C  08                INC     R0
   \   047D  120000            LCALL   ?LD_R4567_IR0_L20
   \   0480  EF                MOV     A,R7
   \   0481  4E                ORL     A,R6
   \   0482  6005              JZ      ?0371
   \   0484  EF                MOV     A,R7
   \   0485  5480              ANL     A,#128
   \   0487  B2E7              CPL     ACC.7
   \   0489            ?0371:
   \   0489  B2E7              CPL     ACC.7
   \   048B  700E              JNZ     ?0074
   \   048D            ?0076:
   \   048D            ?0075:
   \   048D            ?0073:
    333                                  ave+=360.;
   \   048D  08                INC     R0
   \   048E  7C00              MOV     R4,#0
   \   0490  7D00              MOV     R5,#0
   \   0492  7EB4              MOV     R6,#180
   \   0494  7F43              MOV     R7,#67
   \   0496  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0499  804A              SJMP    ?0077
   \   049B            ?0074:
    334                          else if((sumsin > 0 && sumcos < 0) || (sumsin < 0 && sumcos < 0))
   \   049B  7800              MOV     R0,#$LOCBI Quad_pros+4
   \   049D  120000            LCALL   ?LD_R4567_IR0_L20
   \   04A0  EF                MOV     A,R7
   \   04A1  4E                ORL     A,R6
   \   04A2  6005              JZ      ?0372
   \   04A4  EF                MOV     A,R7
   \   04A5  5480              ANL     A,#128
   \   04A7  B2E7              CPL     ACC.7
   \   04A9            ?0372:
   \   04A9  B2E7              CPL     ACC.7
   \   04AB  700D              JNZ     ?0080
   \   04AD  08                INC     R0
   \   04AE  120000            LCALL   ?LD_R4567_IR0_L20
   \   04B1  EF                MOV     A,R7
   \   04B2  4E                ORL     A,R6
   \   04B3  6003              JZ      ?0373
   \   04B5  EF                MOV     A,R7
   \   04B6  5480              ANL     A,#128
   \   04B8            ?0373:
   \   04B8  701F              JNZ     ?0078
   \   04BA            ?0081:
   \   04BA            ?0080:
   \   04BA  7800              MOV     R0,#$LOCBI Quad_pros+4
   \   04BC  120000            LCALL   ?LD_R4567_IR0_L20
   \   04BF  EF                MOV     A,R7
   \   04C0  4E                ORL     A,R6
   \   04C1  6003              JZ      ?0374
   \   04C3  EF                MOV     A,R7
   \   04C4  5480              ANL     A,#128
   \   04C6            ?0374:
   \   04C6  B2E7              CPL     ACC.7
   \   04C8  701B              JNZ     ?0079
   \   04CA  08                INC     R0
   \   04CB  120000            LCALL   ?LD_R4567_IR0_L20
   \   04CE  EF                MOV     A,R7
   \   04CF  4E                ORL     A,R6
   \   04D0  6003              JZ      ?0375
   \   04D2  EF                MOV     A,R7
   \   04D3  5480              ANL     A,#128
   \   04D5            ?0375:
   \   04D5  B2E7              CPL     ACC.7
   \   04D7  700C              JNZ     ?0079
   \   04D9            ?0085:
   \   04D9            ?0084:
   \   04D9            ?0082:
   \   04D9            ?0083:
   \   04D9            ?0078:
    335                                  ave+=180.;
   \   04D9  08                INC     R0
   \   04DA  7C00              MOV     R4,#0
   \   04DC  7D00              MOV     R5,#0
   \   04DE  7E34              MOV     R6,#52
   \   04E0  7F43              MOV     R7,#67
   \   04E2  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   04E5            ?0079:
   \   04E5            ?0077:
    336                          ES=0;
   \   04E5  C2AC              CLR     IE.4
    337                          WdGmax=(double)ave*10.;
   \   04E7  7800              MOV     R0,#$LOCBI Quad_pros+12
   \   04E9  120000            LCALL   ?LD_R4567_IR0_L20
   \   04EC  E4                CLR     A
   \   04ED  F8                MOV     R0,A
   \   04EE  F9                MOV     R1,A
   \   04EF  7A20              MOV     R2,#32
   \   04F1  7B41              MOV     R3,#65
   \   04F3  120000            LCALL   ?F_MUL_L02
   \   04F6  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   04F9  90016E            MOV     DPTR,#WdGmax
   \   04FC  ED                MOV     A,R5
   \   04FD  F0                MOVX    @DPTR,A
   \   04FE  A3                INC     DPTR
   \   04FF  EC                MOV     A,R4
   \   0500  F0                MOVX    @DPTR,A
    338                          ES=1;
   \   0501  D2AC              SETB    IE.4
   \   0503            ?0068:
    339                  }
    340                  TEcount=0;
   \   0503  900188            MOV     DPTR,#TEcount
   \   0506  E4                CLR     A
   \   0507  F0                MOVX    @DPTR,A
   \   0508  A3                INC     DPTR
   \   0509  F0                MOVX    @DPTR,A
    341          }
   \   050A  22                RET
    342          
    343          void Sec_pros(void)
    344          {
   \   050B            Sec_pros:
    345                  unsigned int i,wssum;
    346                  double ave,ave2;
    347          
    348                  sinSec=0;
   \   050B  900271            MOV     DPTR,#sinSec
   \   050E  E4                CLR     A
   \   050F  F0                MOVX    @DPTR,A
   \   0510  A3                INC     DPTR
   \   0511  F0                MOVX    @DPTR,A
    349                  cosSec=0;
   \   0512  90027D            MOV     DPTR,#cosSec
   \   0515  F0                MOVX    @DPTR,A
   \   0516  A3                INC     DPTR
   \   0517  F0                MOVX    @DPTR,A
    350                  sumSec=0;
   \   0518  900289            MOV     DPTR,#sumSec
   \   051B  F0                MOVX    @DPTR,A
   \   051C  A3                INC     DPTR
   \   051D  F0                MOVX    @DPTR,A
    351                  for(i=9; i != 13; i++)
   \   051E  7800              MOV     R0,#$LOCBI Sec_pros
   \   0520  F6                MOV     @R0,A
   \   0521  08                INC     R0
   \   0522  7609              MOV     @R0,#9
   \   0524            ?0087:
   \   0524  7800              MOV     R0,#$LOCBI Sec_pros+1
   \   0526  E6                MOV     A,@R0
   \   0527  640D              XRL     A,#13
   \   0529  7007              JNZ     ?0376
   \   052B  18                DEC     R0
   \   052C  E6                MOV     A,@R0
   \   052D  7003              JNZ     $+5
   \   052F  020630            LJMP    ?0086
   \   0532            ?0376:
   \   0532            ?0088:
    352                  {
    353                          wssum   =  Wsdata[(Wpoint+i)%12];      // Wind Speed Sum
   \   0532  900047            MOV     DPTR,#Wpoint
   \   0535  E0                MOVX    A,@DPTR
   \   0536  7D00              MOV     R5,#0
   \   0538  7800              MOV     R0,#$LOCBI Sec_pros+1
   \   053A  26                ADD     A,@R0
   \   053B  FC                MOV     R4,A
   \   053C  18                DEC     R0
   \   053D  ED                MOV     A,R5
   \   053E  36                ADDC    A,@R0
   \   053F  FD                MOV     R5,A
   \   0540  E4                CLR     A
   \   0541  FB                MOV     R3,A
   \   0542  7A0C              MOV     R2,#12
   \   0544  EC                MOV     A,R4
   \   0545  F8                MOV     R0,A
   \   0546  ED                MOV     A,R5
   \   0547  F9                MOV     R1,A
   \   0548  120000            LCALL   ?UI_MOD_L00
   \   054B  E8                MOV     A,R0
   \   054C  25E0              ADD     A,ACC
   \   054E  242F              ADD     A,#LOW(Wsdata)
   \   0550  F582              MOV     DPL,A
   \   0552  E4                CLR     A
   \   0553  3400              ADDC    A,#HIGH(Wsdata)
   \   0555  F583              MOV     DPH,A
   \   0557  E0                MOVX    A,@DPTR
   \   0558  FD                MOV     R5,A
   \   0559  A3                INC     DPTR
   \   055A  E0                MOVX    A,@DPTR
    354                          sumSec +=  wssum;
   \   055B  FC                MOV     R4,A
   \   055C  ED                MOV     A,R5
   \   055D  FF                MOV     R7,A
   \   055E  EC                MOV     A,R4
   \   055F  FE                MOV     R6,A
   \   0560  90028A            MOV     DPTR,#sumSec+1
   \   0563  E0                MOVX    A,@DPTR
   \   0564  2E                ADD     A,R6
   \   0565  F0                MOVX    @DPTR,A
   \   0566  900289            MOV     DPTR,#sumSec
   \   0569  E0                MOVX    A,@DPTR
   \   056A  3F                ADDC    A,R7
   \   056B  F0                MOVX    @DPTR,A
    355                          sumOne +=  wssum;
   \   056C  7800              MOV     R0,#$LOCBI Sec_pros+2
   \   056E  ED                MOV     A,R5
   \   056F  F6                MOV     @R0,A
   \   0570  08                INC     R0
   \   0571  EC                MOV     A,R4
   \   0572  F6                MOV     @R0,A
   \   0573  7E00              MOV     R6,#0
   \   0575  7F00              MOV     R7,#0
   \   0577  90028B            MOV     DPTR,#sumOne
   \   057A  120000            LCALL   ?L_ADD_ASG_DPTR_R4567_L01
    356                          sumTen +=  wssum;
   \   057D  18                DEC     R0
   \   057E  E6                MOV     A,@R0
   \   057F  FD                MOV     R5,A
   \   0580  08                INC     R0
   \   0581  E6                MOV     A,@R0
   \   0582  FC                MOV     R4,A
   \   0583  7E00              MOV     R6,#0
   \   0585  7F00              MOV     R7,#0
   \   0587  90028F            MOV     DPTR,#sumTen
   \   058A  120000            LCALL   ?L_ADD_ASG_DPTR_R4567_L01
    357                                                                                                     // Wind Direction Sum
    358                          ave     = (double)(Wddata[(Wpoint+i)%12]/10.)*(3.141592/180.);
   \   058D  900047            MOV     DPTR,#Wpoint
   \   0590  E0                MOVX    A,@DPTR
   \   0591  7D00              MOV     R5,#0
   \   0593  18                DEC     R0
   \   0594  18                DEC     R0
   \   0595  26                ADD     A,@R0
   \   0596  FC                MOV     R4,A
   \   0597  18                DEC     R0
   \   0598  ED                MOV     A,R5
   \   0599  36                ADDC    A,@R0
   \   059A  FD                MOV     R5,A
   \   059B  E4                CLR     A
   \   059C  FB                MOV     R3,A
   \   059D  7A0C              MOV     R2,#12
   \   059F  EC                MOV     A,R4
   \   05A0  F8                MOV     R0,A
   \   05A1  ED                MOV     A,R5
   \   05A2  F9                MOV     R1,A
   \   05A3  120000            LCALL   ?UI_MOD_L00
   \   05A6  E8                MOV     A,R0
   \   05A7  25E0              ADD     A,ACC
   \   05A9  2417              ADD     A,#LOW(Wddata)
   \   05AB  F582              MOV     DPL,A
   \   05AD  E4                CLR     A
   \   05AE  3400              ADDC    A,#HIGH(Wddata)
   \   05B0  F583              MOV     DPH,A
   \   05B2  E0                MOVX    A,@DPTR
   \   05B3  FD                MOV     R5,A
   \   05B4  A3                INC     DPTR
   \   05B5  E0                MOVX    A,@DPTR
   \   05B6  FC                MOV     R4,A
   \   05B7  ED                MOV     A,R5
   \   05B8  E4                CLR     A
   \   05B9  FE                MOV     R6,A
   \   05BA  FF                MOV     R7,A
   \   05BB  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   05BE  E4                CLR     A
   \   05BF  F8                MOV     R0,A
   \   05C0  F9                MOV     R1,A
   \   05C1  7A20              MOV     R2,#32
   \   05C3  7B41              MOV     R3,#65
   \   05C5  120000            LCALL   ?F_DIV_L02
   \   05C8  7833              MOV     R0,#51
   \   05CA  7B3C              MOV     R3,#60
   \   05CC  7A8E              MOV     R2,#142
   \   05CE  79FA              MOV     R1,#250
   \   05D0  120000            LCALL   ?F_MUL_L02
    359                          ave2    = sin(ave);
   \   05D3  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   05D5  120000            LCALL   ?STO_R4567_IR0_L20
   \   05D8  120000            LCALL   $REFFN sin
    360                          sinSec += ave2;
   \   05DB  7800              MOV     R0,#$LOCBI Sec_pros+8
   \   05DD  120000            LCALL   ?STO_R4567_IR0_L20
   \   05E0  900271            MOV     DPTR,#sinSec
   \   05E3  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    361                          sinOne += ave2;
   \   05E6  7800              MOV     R0,#$LOCBI Sec_pros+8
   \   05E8  120000            LCALL   ?LD_R4567_IR0_L20
   \   05EB  900275            MOV     DPTR,#sinOne
   \   05EE  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    362                          sinTen += ave2;
   \   05F1  7800              MOV     R0,#$LOCBI Sec_pros+8
   \   05F3  120000            LCALL   ?LD_R4567_IR0_L20
   \   05F6  900279            MOV     DPTR,#sinTen
   \   05F9  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    363                          ave2    = cos(ave);
   \   05FC  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   05FE  120000            LCALL   ?LD_R4567_IR0_L20
   \   0601  120000            LCALL   $REFFN cos
    364                          cosSec += ave2;
   \   0604  7800              MOV     R0,#$LOCBI Sec_pros+8
   \   0606  120000            LCALL   ?STO_R4567_IR0_L20
   \   0609  90027D            MOV     DPTR,#cosSec
   \   060C  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    365                          cosOne += ave2;
   \   060F  7800              MOV     R0,#$LOCBI Sec_pros+8
   \   0611  120000            LCALL   ?LD_R4567_IR0_L20
   \   0614  900281            MOV     DPTR,#cosOne
   \   0617  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    366                          cosTen += ave2;
   \   061A  7800              MOV     R0,#$LOCBI Sec_pros+8
   \   061C  120000            LCALL   ?LD_R4567_IR0_L20
   \   061F  900285            MOV     DPTR,#cosTen
   \   0622  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0625  7800              MOV     R0,#$LOCBI Sec_pros+1
   \   0627  06                INC     @R0
   \   0628  E6                MOV     A,@R0
   \   0629  18                DEC     R0
   \   062A  7001              JNZ     $+3
   \   062C  06                INC     @R0
   \   062D  020524            LJMP    ?0087
   \   0630            ?0086:
    367                  }
    368                  ave=(double)(atan(sinSec/cosSec))*(180./3.141592);
   \   0630  900271            MOV     DPTR,#sinSec
   \   0633  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0636  90027D            MOV     DPTR,#cosSec
   \   0639  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   063C  120000            LCALL   ?F_DIV_L02
   \   063F  120000            LCALL   $REFFN atan
   \   0642  792E              MOV     R1,#46
   \   0644  7B42              MOV     R3,#66
   \   0646  7A65              MOV     R2,#101
   \   0648  78E4              MOV     R0,#228
   \   064A  120000            LCALL   ?F_MUL_L02
   \   064D  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   064F  120000            LCALL   ?STO_R4567_IR0_L20
    369                  if(sinSec < 0 && cosSec > 0)   ave+=360.;
   \   0652  900271            MOV     DPTR,#sinSec
   \   0655  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0658  EF                MOV     A,R7
   \   0659  4E                ORL     A,R6
   \   065A  6003              JZ      ?0377
   \   065C  EF                MOV     A,R7
   \   065D  5480              ANL     A,#128
   \   065F            ?0377:
   \   065F  B2E7              CPL     ACC.7
   \   0661  7022              JNZ     ?0091
   \   0663  90027D            MOV     DPTR,#cosSec
   \   0666  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0669  EF                MOV     A,R7
   \   066A  4E                ORL     A,R6
   \   066B  6005              JZ      ?0378
   \   066D  EF                MOV     A,R7
   \   066E  5480              ANL     A,#128
   \   0670  B2E7              CPL     ACC.7
   \   0672            ?0378:
   \   0672  B2E7              CPL     ACC.7
   \   0674  700F              JNZ     ?0091
   \   0676            ?0093:
   \   0676            ?0092:
   \   0676            ?0090:
   \   0676  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   0678  7C00              MOV     R4,#0
   \   067A  7D00              MOV     R5,#0
   \   067C  7EB4              MOV     R6,#180
   \   067E  7F43              MOV     R7,#67
   \   0680  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0683  8051              SJMP    ?0094
   \   0685            ?0091:
    370                  else if((sinSec > 0 && cosSec < 0) || (sinSec < 0 && cosSec < 0))  ave+=180.;
   \   0685  900271            MOV     DPTR,#sinSec
   \   0688  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   068B  EF                MOV     A,R7
   \   068C  4E                ORL     A,R6
   \   068D  6005              JZ      ?0379
   \   068F  EF                MOV     A,R7
   \   0690  5480              ANL     A,#128
   \   0692  B2E7              CPL     ACC.7
   \   0694            ?0379:
   \   0694  B2E7              CPL     ACC.7
   \   0696  700F              JNZ     ?0097
   \   0698  90027D            MOV     DPTR,#cosSec
   \   069B  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   069E  EF                MOV     A,R7
   \   069F  4E                ORL     A,R6
   \   06A0  6003              JZ      ?0380
   \   06A2  EF                MOV     A,R7
   \   06A3  5480              ANL     A,#128
   \   06A5            ?0380:
   \   06A5  7022              JNZ     ?0095
   \   06A7            ?0098:
   \   06A7            ?0097:
   \   06A7  900271            MOV     DPTR,#sinSec
   \   06AA  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   06AD  EF                MOV     A,R7
   \   06AE  4E                ORL     A,R6
   \   06AF  6003              JZ      ?0381
   \   06B1  EF                MOV     A,R7
   \   06B2  5480              ANL     A,#128
   \   06B4            ?0381:
   \   06B4  B2E7              CPL     ACC.7
   \   06B6  701E              JNZ     ?0096
   \   06B8  90027D            MOV     DPTR,#cosSec
   \   06BB  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   06BE  EF                MOV     A,R7
   \   06BF  4E                ORL     A,R6
   \   06C0  6003              JZ      ?0382
   \   06C2  EF                MOV     A,R7
   \   06C3  5480              ANL     A,#128
   \   06C5            ?0382:
   \   06C5  B2E7              CPL     ACC.7
   \   06C7  700D              JNZ     ?0096
   \   06C9            ?0102:
   \   06C9            ?0101:
   \   06C9            ?0099:
   \   06C9            ?0100:
   \   06C9            ?0095:
   \   06C9  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   06CB  7C00              MOV     R4,#0
   \   06CD  7D00              MOV     R5,#0
   \   06CF  7E34              MOV     R6,#52
   \   06D1  7F43              MOV     R7,#67
   \   06D3  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   06D6            ?0096:
   \   06D6            ?0094:
    371          
    372                  Wsreal=sumSec;
   \   06D6  900289            MOV     DPTR,#sumSec
   \   06D9  E0                MOVX    A,@DPTR
   \   06DA  FD                MOV     R5,A
   \   06DB  A3                INC     DPTR
   \   06DC  E0                MOVX    A,@DPTR
   \   06DD  90000F            MOV     DPTR,#Wsreal
   \   06E0  CD                XCH     A,R5
   \   06E1  F0                MOVX    @DPTR,A
   \   06E2  A3                INC     DPTR
   \   06E3  CD                XCH     A,R5
   \   06E4  F0                MOVX    @DPTR,A
    373                  i=Ws_calc(sumSec);
   \   06E5  900289            MOV     DPTR,#sumSec
   \   06E8  E0                MOVX    A,@DPTR
   \   06E9  FD                MOV     R5,A
   \   06EA  A3                INC     DPTR
   \   06EB  E0                MOVX    A,@DPTR
   \   06EC  FC                MOV     R4,A
   \   06ED  120000            LCALL   $REFFN Ws_calc
    374          
    375                  ES=0;
   \   06F0  C2AC              CLR     IE.4
    376                  WsSec=i;
   \   06F2  7800              MOV     R0,#$LOCBI Sec_pros
   \   06F4  ED                MOV     A,R5
   \   06F5  F6                MOV     @R0,A
   \   06F6  08                INC     R0
   \   06F7  EC                MOV     A,R4
   \   06F8  F6                MOV     @R0,A
    377                  WdSec=(double)ave*10.;
   \   06F9  9000C2            MOV     DPTR,#WsSec
   \   06FC  ED                MOV     A,R5
   \   06FD  F0                MOVX    @DPTR,A
   \   06FE  A3                INC     DPTR
   \   06FF  EC                MOV     A,R4
   \   0700  F0                MOVX    @DPTR,A
   \   0701  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   0703  120000            LCALL   ?LD_R4567_IR0_L20
   \   0706  E4                CLR     A
   \   0707  F8                MOV     R0,A
   \   0708  F9                MOV     R1,A
   \   0709  7A20              MOV     R2,#32
   \   070B  7B41              MOV     R3,#65
   \   070D  120000            LCALL   ?F_MUL_L02
   \   0710  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    378                  WsSecd[Second]=WsSec;
   \   0713  9000C2            MOV     DPTR,#WsSec
   \   0716  E0                MOVX    A,@DPTR
   \   0717  FF                MOV     R7,A
   \   0718  A3                INC     DPTR
   \   0719  E0                MOVX    A,@DPTR
   \   071A  FE                MOV     R6,A
   \   071B  90000C            MOV     DPTR,#Second
   \   071E  E0                MOVX    A,@DPTR
   \   071F  25E0              ADD     A,ACC
   \   0721  24C4              ADD     A,#LOW(WsSecd)
   \   0723  F582              MOV     DPL,A
   \   0725  E4                CLR     A
   \   0726  3400              ADDC    A,#HIGH(WsSecd)
   \   0728  F583              MOV     DPH,A
   \   072A  EF                MOV     A,R7
   \   072B  F0                MOVX    @DPTR,A
   \   072C  A3                INC     DPTR
   \   072D  EE                MOV     A,R6
   \   072E  F0                MOVX    @DPTR,A
    379                  WdSecd[Second]=WdSec;
   \   072F  90000C            MOV     DPTR,#Second
   \   0732  E0                MOVX    A,@DPTR
   \   0733  25E0              ADD     A,ACC
   \   0735  244A              ADD     A,#LOW(WdSecd)
   \   0737  F582              MOV     DPL,A
   \   0739  E4                CLR     A
   \   073A  3400              ADDC    A,#HIGH(WdSecd)
   \   073C  F583              MOV     DPH,A
   \   073E  ED                MOV     A,R5
   \   073F  F0                MOVX    @DPTR,A
   \   0740  A3                INC     DPTR
   \   0741  EC                MOV     A,R4
   \   0742  F0                MOVX    @DPTR,A
   \   0743  900048            MOV     DPTR,#WdSec
   \   0746  ED                MOV     A,R5
   \   0747  F0                MOVX    @DPTR,A
   \   0748  A3                INC     DPTR
   \   0749  EC                MOV     A,R4
   \   074A  F0                MOVX    @DPTR,A
    380                  ES=1;
   \   074B  D2AC              SETB    IE.4
    381                  if(Init)
   \   074D  200803            JB      Init,$+6
   \   0750  020801            LJMP    ?0104
   \   0753            ?0103:
    382                  {
    383                          Init=0;
   \   0753  C208              CLR     Init
    384                          ES=0;
   \   0755  C2AC              CLR     IE.4
    385                          WdMin  = WdSec;
   \   0757  90013C            MOV     DPTR,#WdMin
   \   075A  CD                XCH     A,R5
   \   075B  F0                MOVX    @DPTR,A
   \   075C  A3                INC     DPTR
   \   075D  CD                XCH     A,R5
   \   075E  F0                MOVX    @DPTR,A
    386                          WdTen  = WdMin;
   \   075F  90013C            MOV     DPTR,#WdMin
   \   0762  E0                MOVX    A,@DPTR
   \   0763  FD                MOV     R5,A
   \   0764  A3                INC     DPTR
   \   0765  E0                MOVX    A,@DPTR
   \   0766  90016A            MOV     DPTR,#WdTen
   \   0769  CD                XCH     A,R5
   \   076A  F0                MOVX    @DPTR,A
   \   076B  A3                INC     DPTR
   \   076C  CD                XCH     A,R5
   \   076D  F0                MOVX    @DPTR,A
    387                          WdGmax = WdSec;
   \   076E  900048            MOV     DPTR,#WdSec
   \   0771  E0                MOVX    A,@DPTR
   \   0772  FD                MOV     R5,A
   \   0773  A3                INC     DPTR
   \   0774  E0                MOVX    A,@DPTR
   \   0775  90016E            MOV     DPTR,#WdGmax
   \   0778  CD                XCH     A,R5
   \   0779  F0                MOVX    @DPTR,A
   \   077A  A3                INC     DPTR
   \   077B  CD                XCH     A,R5
   \   077C  F0                MOVX    @DPTR,A
    388                          WdMmax = WdSec;
   \   077D  900048            MOV     DPTR,#WdSec
   \   0780  E0                MOVX    A,@DPTR
   \   0781  FD                MOV     R5,A
   \   0782  A3                INC     DPTR
   \   0783  E0                MOVX    A,@DPTR
   \   0784  900172            MOV     DPTR,#WdMmax
   \   0787  CD                XCH     A,R5
   \   0788  F0                MOVX    @DPTR,A
   \   0789  A3                INC     DPTR
   \   078A  CD                XCH     A,R5
   \   078B  F0                MOVX    @DPTR,A
    389                          WdTmax = WdSec;
   \   078C  900048            MOV     DPTR,#WdSec
   \   078F  E0                MOVX    A,@DPTR
   \   0790  FD                MOV     R5,A
   \   0791  A3                INC     DPTR
   \   0792  E0                MOVX    A,@DPTR
   \   0793  900176            MOV     DPTR,#WdTmax
   \   0796  CD                XCH     A,R5
   \   0797  F0                MOVX    @DPTR,A
   \   0798  A3                INC     DPTR
   \   0799  CD                XCH     A,R5
   \   079A  F0                MOVX    @DPTR,A
    390                          WdThvalue=WdSec;
   \   079B  900048            MOV     DPTR,#WdSec
   \   079E  E0                MOVX    A,@DPTR
   \   079F  FD                MOV     R5,A
   \   07A0  A3                INC     DPTR
   \   07A1  E0                MOVX    A,@DPTR
   \   07A2  900182            MOV     DPTR,#WdThvalue
   \   07A5  CD                XCH     A,R5
   \   07A6  F0                MOVX    @DPTR,A
   \   07A7  A3                INC     DPTR
   \   07A8  CD                XCH     A,R5
   \   07A9  F0                MOVX    @DPTR,A
    391          
    392                          WsSec  = WsSec*1.33;
   \   07AA  9000C2            MOV     DPTR,#WsSec
   \   07AD  E0                MOVX    A,@DPTR
   \   07AE  FD                MOV     R5,A
   \   07AF  A3                INC     DPTR
   \   07B0  E0                MOVX    A,@DPTR
   \   07B1  FC                MOV     R4,A
   \   07B2  ED                MOV     A,R5
   \   07B3  E4                CLR     A
   \   07B4  FE                MOV     R6,A
   \   07B5  FF                MOV     R7,A
   \   07B6  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   07B9  793D              MOV     R1,#61
   \   07BB  7B3F              MOV     R3,#63
   \   07BD  7871              MOV     R0,#113
   \   07BF  7AAA              MOV     R2,#170
   \   07C1  120000            LCALL   ?F_MUL_L02
   \   07C4  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    393                          WsMin  = WsSec;
   \   07C7  900152            MOV     DPTR,#WsMin
   \   07CA  ED                MOV     A,R5
   \   07CB  F0                MOVX    @DPTR,A
   \   07CC  A3                INC     DPTR
   \   07CD  EC                MOV     A,R4
   \   07CE  F0                MOVX    @DPTR,A
    394                          WsTen  = WsSec;
   \   07CF  900168            MOV     DPTR,#WsTen
   \   07D2  ED                MOV     A,R5
   \   07D3  F0                MOVX    @DPTR,A
   \   07D4  A3                INC     DPTR
   \   07D5  EC                MOV     A,R4
   \   07D6  F0                MOVX    @DPTR,A
    395                          WsGmax = WsSec;
   \   07D7  900170            MOV     DPTR,#WsGmax
   \   07DA  ED                MOV     A,R5
   \   07DB  F0                MOVX    @DPTR,A
   \   07DC  A3                INC     DPTR
   \   07DD  EC                MOV     A,R4
   \   07DE  F0                MOVX    @DPTR,A
    396                          WsMmax = WsSec;
   \   07DF  900174            MOV     DPTR,#WsMmax
   \   07E2  ED                MOV     A,R5
   \   07E3  F0                MOVX    @DPTR,A
   \   07E4  A3                INC     DPTR
   \   07E5  EC                MOV     A,R4
   \   07E6  F0                MOVX    @DPTR,A
    397                          WsTmax = WsSec;
   \   07E7  900178            MOV     DPTR,#WsTmax
   \   07EA  ED                MOV     A,R5
   \   07EB  F0                MOVX    @DPTR,A
   \   07EC  A3                INC     DPTR
   \   07ED  EC                MOV     A,R4
   \   07EE  F0                MOVX    @DPTR,A
    398                          WsThvalue=WsSec;
   \   07EF  900184            MOV     DPTR,#WsThvalue
   \   07F2  ED                MOV     A,R5
   \   07F3  F0                MOVX    @DPTR,A
   \   07F4  A3                INC     DPTR
   \   07F5  EC                MOV     A,R4
   \   07F6  F0                MOVX    @DPTR,A
   \   07F7  9000C2            MOV     DPTR,#WsSec
   \   07FA  ED                MOV     A,R5
   \   07FB  F0                MOVX    @DPTR,A
   \   07FC  A3                INC     DPTR
   \   07FD  EC                MOV     A,R4
   \   07FE  F0                MOVX    @DPTR,A
    399                          ES=1;
   \   07FF  D2AC              SETB    IE.4
   \   0801            ?0104:
    400                  }
    401          
    402                  if(WsSec != WsEvalue)
   \   0801  9000C2            MOV     DPTR,#WsSec
   \   0804  E0                MOVX    A,@DPTR
   \   0805  FD                MOV     R5,A
   \   0806  A3                INC     DPTR
   \   0807  E0                MOVX    A,@DPTR
   \   0808  FC                MOV     R4,A
   \   0809  90017D            MOV     DPTR,#WsEvalue+1
   \   080C  E0                MOVX    A,@DPTR
   \   080D  6C                XRL     A,R4
   \   080E  7007              JNZ     ?0383
   \   0810  90017C            MOV     DPTR,#WsEvalue
   \   0813  E0                MOVX    A,@DPTR
   \   0814  6D                XRL     A,R5
   \   0815  603A              JZ      ?0106
   \   0817            ?0383:
   \   0817            ?0105:
    403                  {
    404                          if(WdSec == WdEvalue)
   \   0817  900048            MOV     DPTR,#WdSec
   \   081A  E0                MOVX    A,@DPTR
   \   081B  FD                MOV     R5,A
   \   081C  A3                INC     DPTR
   \   081D  E0                MOVX    A,@DPTR
   \   081E  FC                MOV     R4,A
   \   081F  90017B            MOV     DPTR,#WdEvalue+1
   \   0822  E0                MOVX    A,@DPTR
   \   0823  6C                XRL     A,R4
   \   0824  7005              JNZ     ?0384
   \   0826  90017A            MOV     DPTR,#WdEvalue
   \   0829  E0                MOVX    A,@DPTR
   \   082A  6D                XRL     A,R5
   \   082B            ?0384:
   \   082B  701D              JNZ     ?0108
   \   082D            ?0107:
    405                          {
    406                                  if(WdEcount < 21600)    /* Wd = 6 Hour Fix Then Error */
   \   082D  C3                CLR     C
   \   082E  90017F            MOV     DPTR,#WdEcount+1
   \   0831  E0                MOVX    A,@DPTR
   \   0832  9460              SUBB    A,#96
   \   0834  90017E            MOV     DPTR,#WdEcount
   \   0837  E0                MOVX    A,@DPTR
   \   0838  9454              SUBB    A,#84
   \   083A  500C              JNC     ?0110
   \   083C            ?0109:
    407                                          WdEcount++;
   \   083C  A3                INC     DPTR
   \   083D  E0                MOVX    A,@DPTR
   \   083E  04                INC     A
   \   083F  F0                MOVX    @DPTR,A
   \   0840  90017E            MOV     DPTR,#WdEcount
   \   0843  7003              JNZ     ?0385
   \   0845  E0                MOVX    A,@DPTR
   \   0846  04                INC     A
   \   0847  F0                MOVX    @DPTR,A
   \   0848            ?0385:
   \   0848            ?0110:
    408                          }
    409                          else
   \   0848  8007              SJMP    ?0111
   \   084A            ?0108:
    410                                  WdEcount=0;
   \   084A  90017E            MOV     DPTR,#WdEcount
   \   084D  E4                CLR     A
   \   084E  F0                MOVX    @DPTR,A
   \   084F  A3                INC     DPTR
   \   0850  F0                MOVX    @DPTR,A
   \   0851            ?0111:
   \   0851            ?0106:
    411                  }
    412                  if(WdSec != WdEvalue)
   \   0851  900048            MOV     DPTR,#WdSec
   \   0854  E0                MOVX    A,@DPTR
   \   0855  FD                MOV     R5,A
   \   0856  A3                INC     DPTR
   \   0857  E0                MOVX    A,@DPTR
   \   0858  FC                MOV     R4,A
   \   0859  90017B            MOV     DPTR,#WdEvalue+1
   \   085C  E0                MOVX    A,@DPTR
   \   085D  6C                XRL     A,R4
   \   085E  7007              JNZ     ?0386
   \   0860  90017A            MOV     DPTR,#WdEvalue
   \   0863  E0                MOVX    A,@DPTR
   \   0864  6D                XRL     A,R5
   \   0865  603A              JZ      ?0113
   \   0867            ?0386:
   \   0867            ?0112:
    413                  {
    414                          if(WsSec == WsEvalue)
   \   0867  9000C2            MOV     DPTR,#WsSec
   \   086A  E0                MOVX    A,@DPTR
   \   086B  FD                MOV     R5,A
   \   086C  A3                INC     DPTR
   \   086D  E0                MOVX    A,@DPTR
   \   086E  FC                MOV     R4,A
   \   086F  90017D            MOV     DPTR,#WsEvalue+1
   \   0872  E0                MOVX    A,@DPTR
   \   0873  6C                XRL     A,R4
   \   0874  7005              JNZ     ?0387
   \   0876  90017C            MOV     DPTR,#WsEvalue
   \   0879  E0                MOVX    A,@DPTR
   \   087A  6D                XRL     A,R5
   \   087B            ?0387:
   \   087B  701D              JNZ     ?0115
   \   087D            ?0114:
    415                          {
    416                                  if(WsEcount < 21600)
   \   087D  C3                CLR     C
   \   087E  900181            MOV     DPTR,#WsEcount+1
   \   0881  E0                MOVX    A,@DPTR
   \   0882  9460              SUBB    A,#96
   \   0884  900180            MOV     DPTR,#WsEcount
   \   0887  E0                MOVX    A,@DPTR
   \   0888  9454              SUBB    A,#84
   \   088A  500C              JNC     ?0117
   \   088C            ?0116:
    417                                          WsEcount++;
   \   088C  A3                INC     DPTR
   \   088D  E0                MOVX    A,@DPTR
   \   088E  04                INC     A
   \   088F  F0                MOVX    @DPTR,A
   \   0890  900180            MOV     DPTR,#WsEcount
   \   0893  7003              JNZ     ?0388
   \   0895  E0                MOVX    A,@DPTR
   \   0896  04                INC     A
   \   0897  F0                MOVX    @DPTR,A
   \   0898            ?0388:
   \   0898            ?0117:
    418                          }
    419                          else
   \   0898  8007              SJMP    ?0118
   \   089A            ?0115:
    420                                  WsEcount=0;
   \   089A  900180            MOV     DPTR,#WsEcount
   \   089D  E4                CLR     A
   \   089E  F0                MOVX    @DPTR,A
   \   089F  A3                INC     DPTR
   \   08A0  F0                MOVX    @DPTR,A
   \   08A1            ?0118:
   \   08A1            ?0113:
    421                  }
    422          
    423                  if((WdSec == WdEvalue) && (WsSec == WsEvalue))
   \   08A1  900048            MOV     DPTR,#WdSec
   \   08A4  E0                MOVX    A,@DPTR
   \   08A5  FD                MOV     R5,A
   \   08A6  A3                INC     DPTR
   \   08A7  E0                MOVX    A,@DPTR
   \   08A8  FC                MOV     R4,A
   \   08A9  90017B            MOV     DPTR,#WdEvalue+1
   \   08AC  E0                MOVX    A,@DPTR
   \   08AD  6C                XRL     A,R4
   \   08AE  7005              JNZ     ?0389
   \   08B0  90017A            MOV     DPTR,#WdEvalue
   \   08B3  E0                MOVX    A,@DPTR
   \   08B4  6D                XRL     A,R5
   \   08B5            ?0389:
   \   08B5  7033              JNZ     ?0120
   \   08B7  9000C2            MOV     DPTR,#WsSec
   \   08BA  E0                MOVX    A,@DPTR
   \   08BB  FD                MOV     R5,A
   \   08BC  A3                INC     DPTR
   \   08BD  E0                MOVX    A,@DPTR
   \   08BE  FC                MOV     R4,A
   \   08BF  90017D            MOV     DPTR,#WsEvalue+1
   \   08C2  E0                MOVX    A,@DPTR
   \   08C3  6C                XRL     A,R4
   \   08C4  7005              JNZ     ?0390
   \   08C6  90017C            MOV     DPTR,#WsEvalue
   \   08C9  E0                MOVX    A,@DPTR
   \   08CA  6D                XRL     A,R5
   \   08CB            ?0390:
   \   08CB  701D              JNZ     ?0120
   \   08CD            ?0122:
   \   08CD            ?0121:
   \   08CD            ?0119:
    424                  {
    425                          if(WdsEcount < 43200)       /* All Stop Then 12 Hour */
   \   08CD  C3                CLR     C
   \   08CE  900187            MOV     DPTR,#WdsEcount+1
   \   08D1  E0                MOVX    A,@DPTR
   \   08D2  94C0              SUBB    A,#192
   \   08D4  900186            MOV     DPTR,#WdsEcount
   \   08D7  E0                MOVX    A,@DPTR
   \   08D8  94A8              SUBB    A,#168
   \   08DA  500C              JNC     ?0124
   \   08DC            ?0123:
    426                                  WdsEcount++;
   \   08DC  A3                INC     DPTR
   \   08DD  E0                MOVX    A,@DPTR
   \   08DE  04                INC     A
   \   08DF  F0                MOVX    @DPTR,A
   \   08E0  900186            MOV     DPTR,#WdsEcount
   \   08E3  7003              JNZ     ?0391
   \   08E5  E0                MOVX    A,@DPTR
   \   08E6  04                INC     A
   \   08E7  F0                MOVX    @DPTR,A
   \   08E8            ?0391:
   \   08E8            ?0124:
    427                  }
    428                  else
   \   08E8  8007              SJMP    ?0125
   \   08EA            ?0120:
    429                          WdsEcount=0;
   \   08EA  900186            MOV     DPTR,#WdsEcount
   \   08ED  E4                CLR     A
   \   08EE  F0                MOVX    @DPTR,A
   \   08EF  A3                INC     DPTR
   \   08F0  F0                MOVX    @DPTR,A
   \   08F1            ?0125:
    430          
    431                  WdEvalue=WdSec;
   \   08F1  900048            MOV     DPTR,#WdSec
   \   08F4  E0                MOVX    A,@DPTR
   \   08F5  FD                MOV     R5,A
   \   08F6  A3                INC     DPTR
   \   08F7  E0                MOVX    A,@DPTR
   \   08F8  90017A            MOV     DPTR,#WdEvalue
   \   08FB  CD                XCH     A,R5
   \   08FC  F0                MOVX    @DPTR,A
   \   08FD  A3                INC     DPTR
   \   08FE  CD                XCH     A,R5
   \   08FF  F0                MOVX    @DPTR,A
    432                  WsEvalue=WsSec;
   \   0900  9000C2            MOV     DPTR,#WsSec
   \   0903  E0                MOVX    A,@DPTR
   \   0904  FD                MOV     R5,A
   \   0905  A3                INC     DPTR
   \   0906  E0                MOVX    A,@DPTR
   \   0907  90017C            MOV     DPTR,#WsEvalue
   \   090A  CD                XCH     A,R5
   \   090B  F0                MOVX    @DPTR,A
   \   090C  A3                INC     DPTR
   \   090D  CD                XCH     A,R5
   \   090E  F0                MOVX    @DPTR,A
    433                  //*************************************************** WD VECTOR
    434                  ave     = (double)(WdSec)*(3.141592/180.);
   \   090F  900048            MOV     DPTR,#WdSec
   \   0912  E0                MOVX    A,@DPTR
   \   0913  FD                MOV     R5,A
   \   0914  A3                INC     DPTR
   \   0915  E0                MOVX    A,@DPTR
   \   0916  FC                MOV     R4,A
   \   0917  ED                MOV     A,R5
   \   0918  E4                CLR     A
   \   0919  FE                MOV     R6,A
   \   091A  FF                MOV     R7,A
   \   091B  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   091E  7833              MOV     R0,#51
   \   0920  7B3C              MOV     R3,#60
   \   0922  7A8E              MOV     R2,#142
   \   0924  79FA              MOV     R1,#250
   \   0926  120000            LCALL   ?F_MUL_L02
    435                  sinHTen += (sin(ave)*WsSec);
   \   0929  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   092B  120000            LCALL   ?STO_R4567_IR0_L20
   \   092E  120000            LCALL   $REFFN sin
   \   0931  9000C2            MOV     DPTR,#WsSec
   \   0934  E0                MOVX    A,@DPTR
   \   0935  FB                MOV     R3,A
   \   0936  A3                INC     DPTR
   \   0937  E0                MOVX    A,@DPTR
   \   0938  F8                MOV     R0,A
   \   0939  CB                XCH     A,R3
   \   093A  F9                MOV     R1,A
   \   093B  CB                XCH     A,R3
   \   093C  EB                MOV     A,R3
   \   093D  E4                CLR     A
   \   093E  FA                MOV     R2,A
   \   093F  FB                MOV     R3,A
   \   0940  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   0943  120000            LCALL   ?F_MUL_L02
   \   0946  900269            MOV     DPTR,#sinHTen
   \   0949  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    436                  cosHTen += (cos(ave)*WsSec);
   \   094C  7800              MOV     R0,#$LOCBI Sec_pros+4
   \   094E  120000            LCALL   ?LD_R4567_IR0_L20
   \   0951  120000            LCALL   $REFFN cos
   \   0954  9000C2            MOV     DPTR,#WsSec
   \   0957  E0                MOVX    A,@DPTR
   \   0958  FB                MOV     R3,A
   \   0959  A3                INC     DPTR
   \   095A  E0                MOVX    A,@DPTR
   \   095B  F8                MOV     R0,A
   \   095C  CB                XCH     A,R3
   \   095D  F9                MOV     R1,A
   \   095E  CB                XCH     A,R3
   \   095F  EB                MOV     A,R3
   \   0960  E4                CLR     A
   \   0961  FA                MOV     R2,A
   \   0962  FB                MOV     R3,A
   \   0963  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   0966  120000            LCALL   ?F_MUL_L02
   \   0969  90026D            MOV     DPTR,#cosHTen
   \   096C  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    437          }
   \   096F  22                RET
    438          
    439          
    440          void Ten_pros(void)
    441          {
   \   0970            Ten_pros:
    442                  unsigned int i;
    443                  double ave,aveH;
    444          
    445                  ave =(atan(sinTen /cosTen ))*(180./3.141592);
   \   0970  900279            MOV     DPTR,#sinTen
   \   0973  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0976  900285            MOV     DPTR,#cosTen
   \   0979  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   097C  120000            LCALL   ?F_DIV_L02
   \   097F  120000            LCALL   $REFFN atan
   \   0982  792E              MOV     R1,#46
   \   0984  7B42              MOV     R3,#66
   \   0986  7A65              MOV     R2,#101
   \   0988  78E4              MOV     R0,#228
   \   098A  120000            LCALL   ?F_MUL_L02
   \   098D  7800              MOV     R0,#$LOCBI Ten_pros+2
   \   098F  120000            LCALL   ?STO_R4567_IR0_L20
    446                  aveH=(atan(sinHTen/cosHTen))*(180./3.141592);
   \   0992  900269            MOV     DPTR,#sinHTen
   \   0995  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0998  90026D            MOV     DPTR,#cosHTen
   \   099B  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   099E  120000            LCALL   ?F_DIV_L02
   \   09A1  120000            LCALL   $REFFN atan
   \   09A4  792E              MOV     R1,#46
   \   09A6  7B42              MOV     R3,#66
   \   09A8  7A65              MOV     R2,#101
   \   09AA  78E4              MOV     R0,#228
   \   09AC  120000            LCALL   ?F_MUL_L02
   \   09AF  7800              MOV     R0,#$LOCBI Ten_pros+6
   \   09B1  120000            LCALL   ?STO_R4567_IR0_L20
    447          
    448                  if     ( sinTen <0 && cosTen >0)                                    ave +=360.;
   \   09B4  900279            MOV     DPTR,#sinTen
   \   09B7  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   09BA  EF                MOV     A,R7
   \   09BB  4E                ORL     A,R6
   \   09BC  6003              JZ      ?0392
   \   09BE  EF                MOV     A,R7
   \   09BF  5480              ANL     A,#128
   \   09C1            ?0392:
   \   09C1  B2E7              CPL     ACC.7
   \   09C3  7022              JNZ     ?0127
   \   09C5  900285            MOV     DPTR,#cosTen
   \   09C8  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   09CB  EF                MOV     A,R7
   \   09CC  4E                ORL     A,R6
   \   09CD  6005              JZ      ?0393
   \   09CF  EF                MOV     A,R7
   \   09D0  5480              ANL     A,#128
   \   09D2  B2E7              CPL     ACC.7
   \   09D4            ?0393:
   \   09D4  B2E7              CPL     ACC.7
   \   09D6  700F              JNZ     ?0127
   \   09D8            ?0129:
   \   09D8            ?0128:
   \   09D8            ?0126:
   \   09D8  7800              MOV     R0,#$LOCBI Ten_pros+2
   \   09DA  7C00              MOV     R4,#0
   \   09DC  7D00              MOV     R5,#0
   \   09DE  7EB4              MOV     R6,#180
   \   09E0  7F43              MOV     R7,#67
   \   09E2  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   09E5  8051              SJMP    ?0130
   \   09E7            ?0127:
    449                  else if((sinTen >0 && cosTen <0)||(sinTen <0 && cosTen <0)) ave +=180.;
   \   09E7  900279            MOV     DPTR,#sinTen
   \   09EA  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   09ED  EF                MOV     A,R7
   \   09EE  4E                ORL     A,R6
   \   09EF  6005              JZ      ?0394
   \   09F1  EF                MOV     A,R7
   \   09F2  5480              ANL     A,#128
   \   09F4  B2E7              CPL     ACC.7
   \   09F6            ?0394:
   \   09F6  B2E7              CPL     ACC.7
   \   09F8  700F              JNZ     ?0133
   \   09FA  900285            MOV     DPTR,#cosTen
   \   09FD  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A00  EF                MOV     A,R7
   \   0A01  4E                ORL     A,R6
   \   0A02  6003              JZ      ?0395
   \   0A04  EF                MOV     A,R7
   \   0A05  5480              ANL     A,#128
   \   0A07            ?0395:
   \   0A07  7022              JNZ     ?0131
   \   0A09            ?0134:
   \   0A09            ?0133:
   \   0A09  900279            MOV     DPTR,#sinTen
   \   0A0C  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A0F  EF                MOV     A,R7
   \   0A10  4E                ORL     A,R6
   \   0A11  6003              JZ      ?0396
   \   0A13  EF                MOV     A,R7
   \   0A14  5480              ANL     A,#128
   \   0A16            ?0396:
   \   0A16  B2E7              CPL     ACC.7
   \   0A18  701E              JNZ     ?0132
   \   0A1A  900285            MOV     DPTR,#cosTen
   \   0A1D  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A20  EF                MOV     A,R7
   \   0A21  4E                ORL     A,R6
   \   0A22  6003              JZ      ?0397
   \   0A24  EF                MOV     A,R7
   \   0A25  5480              ANL     A,#128
   \   0A27            ?0397:
   \   0A27  B2E7              CPL     ACC.7
   \   0A29  700D              JNZ     ?0132
   \   0A2B            ?0138:
   \   0A2B            ?0137:
   \   0A2B            ?0135:
   \   0A2B            ?0136:
   \   0A2B            ?0131:
   \   0A2B  7800              MOV     R0,#$LOCBI Ten_pros+2
   \   0A2D  7C00              MOV     R4,#0
   \   0A2F  7D00              MOV     R5,#0
   \   0A31  7E34              MOV     R6,#52
   \   0A33  7F43              MOV     R7,#67
   \   0A35  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0A38            ?0132:
   \   0A38            ?0130:
    450                  if     ( sinHTen<0 && cosHTen>0)                                    aveH+=360.;
   \   0A38  900269            MOV     DPTR,#sinHTen
   \   0A3B  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A3E  EF                MOV     A,R7
   \   0A3F  4E                ORL     A,R6
   \   0A40  6003              JZ      ?0398
   \   0A42  EF                MOV     A,R7
   \   0A43  5480              ANL     A,#128
   \   0A45            ?0398:
   \   0A45  B2E7              CPL     ACC.7
   \   0A47  7022              JNZ     ?0140
   \   0A49  90026D            MOV     DPTR,#cosHTen
   \   0A4C  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A4F  EF                MOV     A,R7
   \   0A50  4E                ORL     A,R6
   \   0A51  6005              JZ      ?0399
   \   0A53  EF                MOV     A,R7
   \   0A54  5480              ANL     A,#128
   \   0A56  B2E7              CPL     ACC.7
   \   0A58            ?0399:
   \   0A58  B2E7              CPL     ACC.7
   \   0A5A  700F              JNZ     ?0140
   \   0A5C            ?0142:
   \   0A5C            ?0141:
   \   0A5C            ?0139:
   \   0A5C  7800              MOV     R0,#$LOCBI Ten_pros+6
   \   0A5E  7C00              MOV     R4,#0
   \   0A60  7D00              MOV     R5,#0
   \   0A62  7EB4              MOV     R6,#180
   \   0A64  7F43              MOV     R7,#67
   \   0A66  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0A69  8051              SJMP    ?0143
   \   0A6B            ?0140:
    451                  else if((sinHTen>0 && cosHTen<0)||(sinHTen<0 && cosHTen<0)) aveH+=180.;
   \   0A6B  900269            MOV     DPTR,#sinHTen
   \   0A6E  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A71  EF                MOV     A,R7
   \   0A72  4E                ORL     A,R6
   \   0A73  6005              JZ      ?0400
   \   0A75  EF                MOV     A,R7
   \   0A76  5480              ANL     A,#128
   \   0A78  B2E7              CPL     ACC.7
   \   0A7A            ?0400:
   \   0A7A  B2E7              CPL     ACC.7
   \   0A7C  700F              JNZ     ?0146
   \   0A7E  90026D            MOV     DPTR,#cosHTen
   \   0A81  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A84  EF                MOV     A,R7
   \   0A85  4E                ORL     A,R6
   \   0A86  6003              JZ      ?0401
   \   0A88  EF                MOV     A,R7
   \   0A89  5480              ANL     A,#128
   \   0A8B            ?0401:
   \   0A8B  7022              JNZ     ?0144
   \   0A8D            ?0147:
   \   0A8D            ?0146:
   \   0A8D  900269            MOV     DPTR,#sinHTen
   \   0A90  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0A93  EF                MOV     A,R7
   \   0A94  4E                ORL     A,R6
   \   0A95  6003              JZ      ?0402
   \   0A97  EF                MOV     A,R7
   \   0A98  5480              ANL     A,#128
   \   0A9A            ?0402:
   \   0A9A  B2E7              CPL     ACC.7
   \   0A9C  701E              JNZ     ?0145
   \   0A9E  90026D            MOV     DPTR,#cosHTen
   \   0AA1  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0AA4  EF                MOV     A,R7
   \   0AA5  4E                ORL     A,R6
   \   0AA6  6003              JZ      ?0403
   \   0AA8  EF                MOV     A,R7
   \   0AA9  5480              ANL     A,#128
   \   0AAB            ?0403:
   \   0AAB  B2E7              CPL     ACC.7
   \   0AAD  700D              JNZ     ?0145
   \   0AAF            ?0151:
   \   0AAF            ?0150:
   \   0AAF            ?0148:
   \   0AAF            ?0149:
   \   0AAF            ?0144:
   \   0AAF  7800              MOV     R0,#$LOCBI Ten_pros+6
   \   0AB1  7C00              MOV     R4,#0
   \   0AB3  7D00              MOV     R5,#0
   \   0AB5  7E34              MOV     R6,#52
   \   0AB7  7F43              MOV     R7,#67
   \   0AB9  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0ABC            ?0145:
   \   0ABC            ?0143:
    452                  i      = Ws_calc(sumTen/600.);
   \   0ABC  90028F            MOV     DPTR,#sumTen
   \   0ABF  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0AC2  120000            LCALL   ?R4567_LONG_TO_FLT_L02
   \   0AC5  E4                CLR     A
   \   0AC6  F8                MOV     R0,A
   \   0AC7  F9                MOV     R1,A
   \   0AC8  7A16              MOV     R2,#22
   \   0ACA  7B44              MOV     R3,#68
   \   0ACC  120000            LCALL   ?F_DIV_L02
   \   0ACF  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0AD2  120000            LCALL   $REFFN Ws_calc
    453                  ES     = 0;
   \   0AD5  C2AC              CLR     IE.4
    454                  WsTen  = i;
   \   0AD7  900168            MOV     DPTR,#WsTen
   \   0ADA  ED                MOV     A,R5
   \   0ADB  F0                MOVX    @DPTR,A
   \   0ADC  A3                INC     DPTR
   \   0ADD  EC                MOV     A,R4
   \   0ADE  F0                MOVX    @DPTR,A
    455                  WdTen  = (double)ave *10.;
   \   0ADF  7800              MOV     R0,#$LOCBI Ten_pros
   \   0AE1  ED                MOV     A,R5
   \   0AE2  F6                MOV     @R0,A
   \   0AE3  08                INC     R0
   \   0AE4  EC                MOV     A,R4
   \   0AE5  F6                MOV     @R0,A
   \   0AE6  08                INC     R0
   \   0AE7  120000            LCALL   ?LD_R4567_IR0_L20
   \   0AEA  E4                CLR     A
   \   0AEB  F8                MOV     R0,A
   \   0AEC  F9                MOV     R1,A
   \   0AED  7A20              MOV     R2,#32
   \   0AEF  7B41              MOV     R3,#65
   \   0AF1  120000            LCALL   ?F_MUL_L02
   \   0AF4  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0AF7  90016A            MOV     DPTR,#WdTen
   \   0AFA  ED                MOV     A,R5
   \   0AFB  F0                MOVX    @DPTR,A
   \   0AFC  A3                INC     DPTR
   \   0AFD  EC                MOV     A,R4
   \   0AFE  F0                MOVX    @DPTR,A
    456                  WdHTen = (double)aveH*10.;
   \   0AFF  7800              MOV     R0,#$LOCBI Ten_pros+6
   \   0B01  120000            LCALL   ?LD_R4567_IR0_L20
   \   0B04  E4                CLR     A
   \   0B05  F8                MOV     R0,A
   \   0B06  F9                MOV     R1,A
   \   0B07  7A20              MOV     R2,#32
   \   0B09  7B41              MOV     R3,#65
   \   0B0B  120000            LCALL   ?F_MUL_L02
   \   0B0E  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0B11  90016C            MOV     DPTR,#WdHTen
   \   0B14  ED                MOV     A,R5
   \   0B15  F0                MOVX    @DPTR,A
   \   0B16  A3                INC     DPTR
   \   0B17  EC                MOV     A,R4
   \   0B18  F0                MOVX    @DPTR,A
    457                  WsTmax = 0;
   \   0B19  900178            MOV     DPTR,#WsTmax
   \   0B1C  E4                CLR     A
   \   0B1D  F0                MOVX    @DPTR,A
   \   0B1E  A3                INC     DPTR
   \   0B1F  F0                MOVX    @DPTR,A
    458                  WdTmax = 0;
   \   0B20  900176            MOV     DPTR,#WdTmax
   \   0B23  F0                MOVX    @DPTR,A
   \   0B24  A3                INC     DPTR
   \   0B25  F0                MOVX    @DPTR,A
    459                  for(i=0; i != 10; i++)
   \   0B26  7800              MOV     R0,#$LOCBI Ten_pros
   \   0B28  F6                MOV     @R0,A
   \   0B29  08                INC     R0
   \   0B2A  F6                MOV     @R0,A
   \   0B2B            ?0153:
   \   0B2B  7800              MOV     R0,#$LOCBI Ten_pros+1
   \   0B2D  E6                MOV     A,@R0
   \   0B2E  640A              XRL     A,#10
   \   0B30  7004              JNZ     ?0404
   \   0B32  18                DEC     R0
   \   0B33  E6                MOV     A,@R0
   \   0B34  6058              JZ      ?0152
   \   0B36            ?0404:
   \   0B36            ?0154:
    460                  {
    461                          if(WsMind[i] > WsTmax)
   \   0B36  7800              MOV     R0,#$LOCBI Ten_pros+1
   \   0B38  E6                MOV     A,@R0
   \   0B39  25E0              ADD     A,ACC
   \   0B3B  2454              ADD     A,#LOW(WsMind)
   \   0B3D  F582              MOV     DPL,A
   \   0B3F  E4                CLR     A
   \   0B40  3401              ADDC    A,#HIGH(WsMind)
   \   0B42  F583              MOV     DPH,A
   \   0B44  E0                MOVX    A,@DPTR
   \   0B45  FD                MOV     R5,A
   \   0B46  A3                INC     DPTR
   \   0B47  E0                MOVX    A,@DPTR
   \   0B48  FC                MOV     R4,A
   \   0B49  900179            MOV     DPTR,#WsTmax+1
   \   0B4C  E0                MOVX    A,@DPTR
   \   0B4D  C3                CLR     C
   \   0B4E  9C                SUBB    A,R4
   \   0B4F  900178            MOV     DPTR,#WsTmax
   \   0B52  E0                MOVX    A,@DPTR
   \   0B53  9D                SUBB    A,R5
   \   0B54  5030              JNC     ?0157
   \   0B56            ?0156:
    462                          {
    463                                  WdTmax=WdMind[i];
   \   0B56  E6                MOV     A,@R0
   \   0B57  25E0              ADD     A,ACC
   \   0B59  243E              ADD     A,#LOW(WdMind)
   \   0B5B  F582              MOV     DPL,A
   \   0B5D  E4                CLR     A
   \   0B5E  3401              ADDC    A,#HIGH(WdMind)
   \   0B60  F583              MOV     DPH,A
   \   0B62  E0                MOVX    A,@DPTR
   \   0B63  FD                MOV     R5,A
   \   0B64  A3                INC     DPTR
   \   0B65  E0                MOVX    A,@DPTR
   \   0B66  900176            MOV     DPTR,#WdTmax
   \   0B69  CD                XCH     A,R5
   \   0B6A  F0                MOVX    @DPTR,A
   \   0B6B  A3                INC     DPTR
   \   0B6C  CD                XCH     A,R5
   \   0B6D  F0                MOVX    @DPTR,A
    464                                  WsTmax=WsMind[i];
   \   0B6E  E6                MOV     A,@R0
   \   0B6F  25E0              ADD     A,ACC
   \   0B71  2454              ADD     A,#LOW(WsMind)
   \   0B73  F582              MOV     DPL,A
   \   0B75  E4                CLR     A
   \   0B76  3401              ADDC    A,#HIGH(WsMind)
   \   0B78  F583              MOV     DPH,A
   \   0B7A  E0                MOVX    A,@DPTR
   \   0B7B  FD                MOV     R5,A
   \   0B7C  A3                INC     DPTR
   \   0B7D  E0                MOVX    A,@DPTR
   \   0B7E  900178            MOV     DPTR,#WsTmax
   \   0B81  CD                XCH     A,R5
   \   0B82  F0                MOVX    @DPTR,A
   \   0B83  A3                INC     DPTR
   \   0B84  CD                XCH     A,R5
   \   0B85  F0                MOVX    @DPTR,A
   \   0B86            ?0157:
   \   0B86  06                INC     @R0
   \   0B87  E6                MOV     A,@R0
   \   0B88  18                DEC     R0
   \   0B89  7001              JNZ     $+3
   \   0B8B  06                INC     @R0
   \   0B8C  809D              SJMP    ?0153
   \   0B8E            ?0152:
    465                          }
    466                  }
    467                  ES=1;
   \   0B8E  D2AC              SETB    IE.4
    468                  sumTen=0;
   \   0B90  90028F            MOV     DPTR,#sumTen
   \   0B93  E4                CLR     A
   \   0B94  F0                MOVX    @DPTR,A
   \   0B95  A3                INC     DPTR
   \   0B96  F0                MOVX    @DPTR,A
   \   0B97  A3                INC     DPTR
   \   0B98  F0                MOVX    @DPTR,A
   \   0B99  A3                INC     DPTR
   \   0B9A  F0                MOVX    @DPTR,A
    469                  sinTen=0;
   \   0B9B  900279            MOV     DPTR,#sinTen
   \   0B9E  F0                MOVX    @DPTR,A
   \   0B9F  A3                INC     DPTR
   \   0BA0  F0                MOVX    @DPTR,A
    470                  cosTen=0;
   \   0BA1  900285            MOV     DPTR,#cosTen
   \   0BA4  F0                MOVX    @DPTR,A
   \   0BA5  A3                INC     DPTR
   \   0BA6  F0                MOVX    @DPTR,A
    471          
    472                  sinHTen          = 0;
   \   0BA7  900269            MOV     DPTR,#sinHTen
   \   0BAA  F0                MOVX    @DPTR,A
   \   0BAB  A3                INC     DPTR
   \   0BAC  F0                MOVX    @DPTR,A
    473                  cosHTen          = 0;
   \   0BAD  90026D            MOV     DPTR,#cosHTen
   \   0BB0  F0                MOVX    @DPTR,A
   \   0BB1  A3                INC     DPTR
   \   0BB2  F0                MOVX    @DPTR,A
    474          }
   \   0BB3  22                RET
    475          
    476          void One_pros(void)
    477          {
   \   0BB4            One_pros:
    478                  unsigned int i;
    479                  double ave;
    480          
    481                  ave=(double)(atan(sinOne/cosOne))*(180/3.141592);
   \   0BB4  900275            MOV     DPTR,#sinOne
   \   0BB7  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0BBA  900281            MOV     DPTR,#cosOne
   \   0BBD  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   0BC0  120000            LCALL   ?F_DIV_L02
   \   0BC3  120000            LCALL   $REFFN atan
   \   0BC6  792E              MOV     R1,#46
   \   0BC8  7B42              MOV     R3,#66
   \   0BCA  7A65              MOV     R2,#101
   \   0BCC  78E4              MOV     R0,#228
   \   0BCE  120000            LCALL   ?F_MUL_L02
   \   0BD1  7800              MOV     R0,#$LOCBI One_pros+2
   \   0BD3  120000            LCALL   ?STO_R4567_IR0_L20
    482                  if(sinOne < 0 && cosOne > 0)
   \   0BD6  900275            MOV     DPTR,#sinOne
   \   0BD9  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0BDC  EF                MOV     A,R7
   \   0BDD  4E                ORL     A,R6
   \   0BDE  6003              JZ      ?0405
   \   0BE0  EF                MOV     A,R7
   \   0BE1  5480              ANL     A,#128
   \   0BE3            ?0405:
   \   0BE3  B2E7              CPL     ACC.7
   \   0BE5  7022              JNZ     ?0159
   \   0BE7  900281            MOV     DPTR,#cosOne
   \   0BEA  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0BED  EF                MOV     A,R7
   \   0BEE  4E                ORL     A,R6
   \   0BEF  6005              JZ      ?0406
   \   0BF1  EF                MOV     A,R7
   \   0BF2  5480              ANL     A,#128
   \   0BF4  B2E7              CPL     ACC.7
   \   0BF6            ?0406:
   \   0BF6  B2E7              CPL     ACC.7
   \   0BF8  700F              JNZ     ?0159
   \   0BFA            ?0161:
   \   0BFA            ?0160:
   \   0BFA            ?0158:
    483                          ave+=360.;
   \   0BFA  7800              MOV     R0,#$LOCBI One_pros+2
   \   0BFC  7C00              MOV     R4,#0
   \   0BFE  7D00              MOV     R5,#0
   \   0C00  7EB4              MOV     R6,#180
   \   0C02  7F43              MOV     R7,#67
   \   0C04  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0C07  8051              SJMP    ?0162
   \   0C09            ?0159:
    484                  else if((sinOne > 0 && cosOne < 0) || (sinOne < 0 && cosOne < 0))
   \   0C09  900275            MOV     DPTR,#sinOne
   \   0C0C  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C0F  EF                MOV     A,R7
   \   0C10  4E                ORL     A,R6
   \   0C11  6005              JZ      ?0407
   \   0C13  EF                MOV     A,R7
   \   0C14  5480              ANL     A,#128
   \   0C16  B2E7              CPL     ACC.7
   \   0C18            ?0407:
   \   0C18  B2E7              CPL     ACC.7
   \   0C1A  700F              JNZ     ?0165
   \   0C1C  900281            MOV     DPTR,#cosOne
   \   0C1F  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C22  EF                MOV     A,R7
   \   0C23  4E                ORL     A,R6
   \   0C24  6003              JZ      ?0408
   \   0C26  EF                MOV     A,R7
   \   0C27  5480              ANL     A,#128
   \   0C29            ?0408:
   \   0C29  7022              JNZ     ?0163
   \   0C2B            ?0166:
   \   0C2B            ?0165:
   \   0C2B  900275            MOV     DPTR,#sinOne
   \   0C2E  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C31  EF                MOV     A,R7
   \   0C32  4E                ORL     A,R6
   \   0C33  6003              JZ      ?0409
   \   0C35  EF                MOV     A,R7
   \   0C36  5480              ANL     A,#128
   \   0C38            ?0409:
   \   0C38  B2E7              CPL     ACC.7
   \   0C3A  701E              JNZ     ?0164
   \   0C3C  900281            MOV     DPTR,#cosOne
   \   0C3F  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C42  EF                MOV     A,R7
   \   0C43  4E                ORL     A,R6
   \   0C44  6003              JZ      ?0410
   \   0C46  EF                MOV     A,R7
   \   0C47  5480              ANL     A,#128
   \   0C49            ?0410:
   \   0C49  B2E7              CPL     ACC.7
   \   0C4B  700D              JNZ     ?0164
   \   0C4D            ?0170:
   \   0C4D            ?0169:
   \   0C4D            ?0167:
   \   0C4D            ?0168:
   \   0C4D            ?0163:
    485                          ave+=180.;
   \   0C4D  7800              MOV     R0,#$LOCBI One_pros+2
   \   0C4F  7C00              MOV     R4,#0
   \   0C51  7D00              MOV     R5,#0
   \   0C53  7E34              MOV     R6,#52
   \   0C55  7F43              MOV     R7,#67
   \   0C57  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0C5A            ?0164:
   \   0C5A            ?0162:
    486                  i=Ws_calc(sumOne/60);
   \   0C5A  90028B            MOV     DPTR,#sumOne
   \   0C5D  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C60  E4                CLR     A
   \   0C61  F9                MOV     R1,A
   \   0C62  FA                MOV     R2,A
   \   0C63  FB                MOV     R3,A
   \   0C64  783C              MOV     R0,#60
   \   0C66  120000            LCALL   ?SL_DIV_L01
   \   0C69  120000            LCALL   $REFFN Ws_calc
    487                  ES=0;
   \   0C6C  C2AC              CLR     IE.4
    488                  WsMin=i;
   \   0C6E  900152            MOV     DPTR,#WsMin
   \   0C71  ED                MOV     A,R5
   \   0C72  F0                MOVX    @DPTR,A
   \   0C73  A3                INC     DPTR
   \   0C74  EC                MOV     A,R4
   \   0C75  F0                MOVX    @DPTR,A
    489              WdMin=(double)ave*10.;
   \   0C76  7800              MOV     R0,#$LOCBI One_pros
   \   0C78  ED                MOV     A,R5
   \   0C79  F6                MOV     @R0,A
   \   0C7A  08                INC     R0
   \   0C7B  EC                MOV     A,R4
   \   0C7C  F6                MOV     @R0,A
   \   0C7D  08                INC     R0
   \   0C7E  120000            LCALL   ?LD_R4567_IR0_L20
   \   0C81  E4                CLR     A
   \   0C82  F8                MOV     R0,A
   \   0C83  F9                MOV     R1,A
   \   0C84  7A20              MOV     R2,#32
   \   0C86  7B41              MOV     R3,#65
   \   0C88  120000            LCALL   ?F_MUL_L02
   \   0C8B  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    490              ES=1;
   \   0C8E  D2AC              SETB    IE.4
    491          
    492              WsMind[Minute]=WsMin;
   \   0C90  900152            MOV     DPTR,#WsMin
   \   0C93  E0                MOVX    A,@DPTR
   \   0C94  FF                MOV     R7,A
   \   0C95  A3                INC     DPTR
   \   0C96  E0                MOVX    A,@DPTR
   \   0C97  FE                MOV     R6,A
   \   0C98  90000B            MOV     DPTR,#Minute
   \   0C9B  E0                MOVX    A,@DPTR
   \   0C9C  25E0              ADD     A,ACC
   \   0C9E  2454              ADD     A,#LOW(WsMind)
   \   0CA0  F582              MOV     DPL,A
   \   0CA2  E4                CLR     A
   \   0CA3  3401              ADDC    A,#HIGH(WsMind)
   \   0CA5  F583              MOV     DPH,A
   \   0CA7  EF                MOV     A,R7
   \   0CA8  F0                MOVX    @DPTR,A
   \   0CA9  A3                INC     DPTR
   \   0CAA  EE                MOV     A,R6
   \   0CAB  F0                MOVX    @DPTR,A
    493              WdMind[Minute]=WdMin;
   \   0CAC  90000B            MOV     DPTR,#Minute
   \   0CAF  E0                MOVX    A,@DPTR
   \   0CB0  25E0              ADD     A,ACC
   \   0CB2  243E              ADD     A,#LOW(WdMind)
   \   0CB4  F582              MOV     DPL,A
   \   0CB6  E4                CLR     A
   \   0CB7  3401              ADDC    A,#HIGH(WdMind)
   \   0CB9  F583              MOV     DPH,A
   \   0CBB  ED                MOV     A,R5
   \   0CBC  F0                MOVX    @DPTR,A
   \   0CBD  A3                INC     DPTR
   \   0CBE  EC                MOV     A,R4
   \   0CBF  F0                MOVX    @DPTR,A
   \   0CC0  90013C            MOV     DPTR,#WdMin
   \   0CC3  ED                MOV     A,R5
   \   0CC4  F0                MOVX    @DPTR,A
   \   0CC5  A3                INC     DPTR
   \   0CC6  EC                MOV     A,R4
   \   0CC7  F0                MOVX    @DPTR,A
    494          
    495              ES=0;
   \   0CC8  C2AC              CLR     IE.4
    496              WsMmax=0;
   \   0CCA  900174            MOV     DPTR,#WsMmax
   \   0CCD  E4                CLR     A
   \   0CCE  F0                MOVX    @DPTR,A
   \   0CCF  A3                INC     DPTR
   \   0CD0  F0                MOVX    @DPTR,A
    497              WdMmax=0;
   \   0CD1  900172            MOV     DPTR,#WdMmax
   \   0CD4  F0                MOVX    @DPTR,A
   \   0CD5  A3                INC     DPTR
   \   0CD6  F0                MOVX    @DPTR,A
    498                  for(i=0;i != 60; i++)
   \   0CD7  7800              MOV     R0,#$LOCBI One_pros
   \   0CD9  F6                MOV     @R0,A
   \   0CDA  08                INC     R0
   \   0CDB  F6                MOV     @R0,A
   \   0CDC            ?0172:
   \   0CDC  7800              MOV     R0,#$LOCBI One_pros+1
   \   0CDE  E6                MOV     A,@R0
   \   0CDF  643C              XRL     A,#60
   \   0CE1  7004              JNZ     ?0411
   \   0CE3  18                DEC     R0
   \   0CE4  E6                MOV     A,@R0
   \   0CE5  6068              JZ      ?0171
   \   0CE7            ?0411:
   \   0CE7            ?0173:
    499                  {
    500                          if(WsSecd[i] > WsMmax)
   \   0CE7  7800              MOV     R0,#$LOCBI One_pros+1
   \   0CE9  E6                MOV     A,@R0
   \   0CEA  25E0              ADD     A,ACC
   \   0CEC  24C4              ADD     A,#LOW(WsSecd)
   \   0CEE  F582              MOV     DPL,A
   \   0CF0  E4                CLR     A
   \   0CF1  3400              ADDC    A,#HIGH(WsSecd)
   \   0CF3  F583              MOV     DPH,A
   \   0CF5  E0                MOVX    A,@DPTR
   \   0CF6  FD                MOV     R5,A
   \   0CF7  A3                INC     DPTR
   \   0CF8  E0                MOVX    A,@DPTR
   \   0CF9  FC                MOV     R4,A
   \   0CFA  900175            MOV     DPTR,#WsMmax+1
   \   0CFD  E0                MOVX    A,@DPTR
   \   0CFE  C3                CLR     C
   \   0CFF  9C                SUBB    A,R4
   \   0D00  900174            MOV     DPTR,#WsMmax
   \   0D03  E0                MOVX    A,@DPTR
   \   0D04  9D                SUBB    A,R5
   \   0D05  5030              JNC     ?0176
   \   0D07            ?0175:
    501                          {
    502                                  WdMmax=WdSecd[i];
   \   0D07  E6                MOV     A,@R0
   \   0D08  25E0              ADD     A,ACC
   \   0D0A  244A              ADD     A,#LOW(WdSecd)
   \   0D0C  F582              MOV     DPL,A
   \   0D0E  E4                CLR     A
   \   0D0F  3400              ADDC    A,#HIGH(WdSecd)
   \   0D11  F583              MOV     DPH,A
   \   0D13  E0                MOVX    A,@DPTR
   \   0D14  FD                MOV     R5,A
   \   0D15  A3                INC     DPTR
   \   0D16  E0                MOVX    A,@DPTR
   \   0D17  900172            MOV     DPTR,#WdMmax
   \   0D1A  CD                XCH     A,R5
   \   0D1B  F0                MOVX    @DPTR,A
   \   0D1C  A3                INC     DPTR
   \   0D1D  CD                XCH     A,R5
   \   0D1E  F0                MOVX    @DPTR,A
    503                                  WsMmax=WsSecd[i];
   \   0D1F  E6                MOV     A,@R0
   \   0D20  25E0              ADD     A,ACC
   \   0D22  24C4              ADD     A,#LOW(WsSecd)
   \   0D24  F582              MOV     DPL,A
   \   0D26  E4                CLR     A
   \   0D27  3400              ADDC    A,#HIGH(WsSecd)
   \   0D29  F583              MOV     DPH,A
   \   0D2B  E0                MOVX    A,@DPTR
   \   0D2C  FD                MOV     R5,A
   \   0D2D  A3                INC     DPTR
   \   0D2E  E0                MOVX    A,@DPTR
   \   0D2F  900174            MOV     DPTR,#WsMmax
   \   0D32  CD                XCH     A,R5
   \   0D33  F0                MOVX    @DPTR,A
   \   0D34  A3                INC     DPTR
   \   0D35  CD                XCH     A,R5
   \   0D36  F0                MOVX    @DPTR,A
   \   0D37            ?0176:
    504                          }
    505                          WsSecd[i]=0;
   \   0D37  E6                MOV     A,@R0
   \   0D38  25E0              ADD     A,ACC
   \   0D3A  24C4              ADD     A,#LOW(WsSecd)
   \   0D3C  F582              MOV     DPL,A
   \   0D3E  E4                CLR     A
   \   0D3F  3400              ADDC    A,#HIGH(WsSecd)
   \   0D41  F583              MOV     DPH,A
   \   0D43  E4                CLR     A
   \   0D44  F0                MOVX    @DPTR,A
   \   0D45  A3                INC     DPTR
   \   0D46  F0                MOVX    @DPTR,A
   \   0D47  06                INC     @R0
   \   0D48  E6                MOV     A,@R0
   \   0D49  18                DEC     R0
   \   0D4A  7001              JNZ     $+3
   \   0D4C  06                INC     @R0
   \   0D4D  808D              SJMP    ?0172
   \   0D4F            ?0171:
    506                  }
    507                  ES=1;
   \   0D4F  D2AC              SETB    IE.4
    508          
    509                  sumOne=0;
   \   0D51  90028B            MOV     DPTR,#sumOne
   \   0D54  E4                CLR     A
   \   0D55  F0                MOVX    @DPTR,A
   \   0D56  A3                INC     DPTR
   \   0D57  F0                MOVX    @DPTR,A
   \   0D58  A3                INC     DPTR
   \   0D59  F0                MOVX    @DPTR,A
   \   0D5A  A3                INC     DPTR
   \   0D5B  F0                MOVX    @DPTR,A
    510                  sinOne=0;
   \   0D5C  900275            MOV     DPTR,#sinOne
   \   0D5F  F0                MOVX    @DPTR,A
   \   0D60  A3                INC     DPTR
   \   0D61  F0                MOVX    @DPTR,A
    511                  cosOne=0;
   \   0D62  900281            MOV     DPTR,#cosOne
   \   0D65  F0                MOVX    @DPTR,A
   \   0D66  A3                INC     DPTR
   \   0D67  F0                MOVX    @DPTR,A
    512                  for(i=8;i != 11; i++)
   \   0D68  7800              MOV     R0,#$LOCBI One_pros
   \   0D6A  F6                MOV     @R0,A
   \   0D6B  08                INC     R0
   \   0D6C  7608              MOV     @R0,#8
   \   0D6E            ?0178:
   \   0D6E  7800              MOV     R0,#$LOCBI One_pros+1
   \   0D70  E6                MOV     A,@R0
   \   0D71  640B              XRL     A,#11
   \   0D73  7007              JNZ     ?0412
   \   0D75  18                DEC     R0
   \   0D76  E6                MOV     A,@R0
   \   0D77  7003              JNZ     $+5
   \   0D79  020E1D            LJMP    ?0177
   \   0D7C            ?0412:
   \   0D7C            ?0179:
    513                  {
    514                          sumOne+=WsMind[(Minute+i)%10];
   \   0D7C  90000B            MOV     DPTR,#Minute
   \   0D7F  E0                MOVX    A,@DPTR
   \   0D80  7D00              MOV     R5,#0
   \   0D82  7800              MOV     R0,#$LOCBI One_pros+1
   \   0D84  26                ADD     A,@R0
   \   0D85  FC                MOV     R4,A
   \   0D86  18                DEC     R0
   \   0D87  ED                MOV     A,R5
   \   0D88  36                ADDC    A,@R0
   \   0D89  FD                MOV     R5,A
   \   0D8A  E4                CLR     A
   \   0D8B  FB                MOV     R3,A
   \   0D8C  7A0A              MOV     R2,#10
   \   0D8E  EC                MOV     A,R4
   \   0D8F  F8                MOV     R0,A
   \   0D90  ED                MOV     A,R5
   \   0D91  F9                MOV     R1,A
   \   0D92  120000            LCALL   ?UI_MOD_L00
   \   0D95  E8                MOV     A,R0
   \   0D96  25E0              ADD     A,ACC
   \   0D98  2454              ADD     A,#LOW(WsMind)
   \   0D9A  F582              MOV     DPL,A
   \   0D9C  E4                CLR     A
   \   0D9D  3401              ADDC    A,#HIGH(WsMind)
   \   0D9F  F583              MOV     DPH,A
   \   0DA1  E0                MOVX    A,@DPTR
   \   0DA2  FD                MOV     R5,A
   \   0DA3  A3                INC     DPTR
   \   0DA4  E0                MOVX    A,@DPTR
   \   0DA5  FC                MOV     R4,A
   \   0DA6  7E00              MOV     R6,#0
   \   0DA8  7F00              MOV     R7,#0
   \   0DAA  90028B            MOV     DPTR,#sumOne
   \   0DAD  120000            LCALL   ?L_ADD_ASG_DPTR_R4567_L01
    515                          ave=(double)(WdMind[(Minute+i)%10]/10.)*(3.141592/180.);
   \   0DB0  90000B            MOV     DPTR,#Minute
   \   0DB3  E0                MOVX    A,@DPTR
   \   0DB4  7D00              MOV     R5,#0
   \   0DB6  7800              MOV     R0,#$LOCBI One_pros+1
   \   0DB8  26                ADD     A,@R0
   \   0DB9  FC                MOV     R4,A
   \   0DBA  18                DEC     R0
   \   0DBB  ED                MOV     A,R5
   \   0DBC  36                ADDC    A,@R0
   \   0DBD  FD                MOV     R5,A
   \   0DBE  E4                CLR     A
   \   0DBF  FB                MOV     R3,A
   \   0DC0  7A0A              MOV     R2,#10
   \   0DC2  EC                MOV     A,R4
   \   0DC3  F8                MOV     R0,A
   \   0DC4  ED                MOV     A,R5
   \   0DC5  F9                MOV     R1,A
   \   0DC6  120000            LCALL   ?UI_MOD_L00
   \   0DC9  E8                MOV     A,R0
   \   0DCA  25E0              ADD     A,ACC
   \   0DCC  243E              ADD     A,#LOW(WdMind)
   \   0DCE  F582              MOV     DPL,A
   \   0DD0  E4                CLR     A
   \   0DD1  3401              ADDC    A,#HIGH(WdMind)
   \   0DD3  F583              MOV     DPH,A
   \   0DD5  E0                MOVX    A,@DPTR
   \   0DD6  FD                MOV     R5,A
   \   0DD7  A3                INC     DPTR
   \   0DD8  E0                MOVX    A,@DPTR
   \   0DD9  FC                MOV     R4,A
   \   0DDA  ED                MOV     A,R5
   \   0DDB  E4                CLR     A
   \   0DDC  FE                MOV     R6,A
   \   0DDD  FF                MOV     R7,A
   \   0DDE  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   0DE1  E4                CLR     A
   \   0DE2  F8                MOV     R0,A
   \   0DE3  F9                MOV     R1,A
   \   0DE4  7A20              MOV     R2,#32
   \   0DE6  7B41              MOV     R3,#65
   \   0DE8  120000            LCALL   ?F_DIV_L02
   \   0DEB  7833              MOV     R0,#51
   \   0DED  7B3C              MOV     R3,#60
   \   0DEF  7A8E              MOV     R2,#142
   \   0DF1  79FA              MOV     R1,#250
   \   0DF3  120000            LCALL   ?F_MUL_L02
    516                          sinOne += sin(ave);
   \   0DF6  7800              MOV     R0,#$LOCBI One_pros+2
   \   0DF8  120000            LCALL   ?STO_R4567_IR0_L20
   \   0DFB  120000            LCALL   $REFFN sin
   \   0DFE  900275            MOV     DPTR,#sinOne
   \   0E01  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    517                          cosOne += cos(ave);
   \   0E04  7800              MOV     R0,#$LOCBI One_pros+2
   \   0E06  120000            LCALL   ?LD_R4567_IR0_L20
   \   0E09  120000            LCALL   $REFFN cos
   \   0E0C  900281            MOV     DPTR,#cosOne
   \   0E0F  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0E12  7800              MOV     R0,#$LOCBI One_pros+1
   \   0E14  06                INC     @R0
   \   0E15  E6                MOV     A,@R0
   \   0E16  18                DEC     R0
   \   0E17  7001              JNZ     $+3
   \   0E19  06                INC     @R0
   \   0E1A  020D6E            LJMP    ?0178
   \   0E1D            ?0177:
    518                  }
    519                  ave=(double)(atan(sinOne/cosOne))*(180./3.141592);
   \   0E1D  900275            MOV     DPTR,#sinOne
   \   0E20  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0E23  900281            MOV     DPTR,#cosOne
   \   0E26  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   0E29  120000            LCALL   ?F_DIV_L02
   \   0E2C  120000            LCALL   $REFFN atan
   \   0E2F  792E              MOV     R1,#46
   \   0E31  7B42              MOV     R3,#66
   \   0E33  7A65              MOV     R2,#101
   \   0E35  78E4              MOV     R0,#228
   \   0E37  120000            LCALL   ?F_MUL_L02
   \   0E3A  7800              MOV     R0,#$LOCBI One_pros+2
   \   0E3C  120000            LCALL   ?STO_R4567_IR0_L20
    520                  if(sinOne < 0 && cosOne > 0)
   \   0E3F  900275            MOV     DPTR,#sinOne
   \   0E42  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0E45  EF                MOV     A,R7
   \   0E46  4E                ORL     A,R6
   \   0E47  6003              JZ      ?0413
   \   0E49  EF                MOV     A,R7
   \   0E4A  5480              ANL     A,#128
   \   0E4C            ?0413:
   \   0E4C  B2E7              CPL     ACC.7
   \   0E4E  7022              JNZ     ?0182
   \   0E50  900281            MOV     DPTR,#cosOne
   \   0E53  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0E56  EF                MOV     A,R7
   \   0E57  4E                ORL     A,R6
   \   0E58  6005              JZ      ?0414
   \   0E5A  EF                MOV     A,R7
   \   0E5B  5480              ANL     A,#128
   \   0E5D  B2E7              CPL     ACC.7
   \   0E5F            ?0414:
   \   0E5F  B2E7              CPL     ACC.7
   \   0E61  700F              JNZ     ?0182
   \   0E63            ?0184:
   \   0E63            ?0183:
   \   0E63            ?0181:
    521                          ave+=360.;
   \   0E63  7800              MOV     R0,#$LOCBI One_pros+2
   \   0E65  7C00              MOV     R4,#0
   \   0E67  7D00              MOV     R5,#0
   \   0E69  7EB4              MOV     R6,#180
   \   0E6B  7F43              MOV     R7,#67
   \   0E6D  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0E70  8051              SJMP    ?0185
   \   0E72            ?0182:
    522                  else if((sinOne > 0 && cosOne < 0) || (sinOne < 0 && cosOne < 0))
   \   0E72  900275            MOV     DPTR,#sinOne
   \   0E75  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0E78  EF                MOV     A,R7
   \   0E79  4E                ORL     A,R6
   \   0E7A  6005              JZ      ?0415
   \   0E7C  EF                MOV     A,R7
   \   0E7D  5480              ANL     A,#128
   \   0E7F  B2E7              CPL     ACC.7
   \   0E81            ?0415:
   \   0E81  B2E7              CPL     ACC.7
   \   0E83  700F              JNZ     ?0188
   \   0E85  900281            MOV     DPTR,#cosOne
   \   0E88  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0E8B  EF                MOV     A,R7
   \   0E8C  4E                ORL     A,R6
   \   0E8D  6003              JZ      ?0416
   \   0E8F  EF                MOV     A,R7
   \   0E90  5480              ANL     A,#128
   \   0E92            ?0416:
   \   0E92  7022              JNZ     ?0186
   \   0E94            ?0189:
   \   0E94            ?0188:
   \   0E94  900275            MOV     DPTR,#sinOne
   \   0E97  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0E9A  EF                MOV     A,R7
   \   0E9B  4E                ORL     A,R6
   \   0E9C  6003              JZ      ?0417
   \   0E9E  EF                MOV     A,R7
   \   0E9F  5480              ANL     A,#128
   \   0EA1            ?0417:
   \   0EA1  B2E7              CPL     ACC.7
   \   0EA3  701E              JNZ     ?0187
   \   0EA5  900281            MOV     DPTR,#cosOne
   \   0EA8  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0EAB  EF                MOV     A,R7
   \   0EAC  4E                ORL     A,R6
   \   0EAD  6003              JZ      ?0418
   \   0EAF  EF                MOV     A,R7
   \   0EB0  5480              ANL     A,#128
   \   0EB2            ?0418:
   \   0EB2  B2E7              CPL     ACC.7
   \   0EB4  700D              JNZ     ?0187
   \   0EB6            ?0193:
   \   0EB6            ?0192:
   \   0EB6            ?0190:
   \   0EB6            ?0191:
   \   0EB6            ?0186:
    523                          ave+=180.;
   \   0EB6  7800              MOV     R0,#$LOCBI One_pros+2
   \   0EB8  7C00              MOV     R4,#0
   \   0EBA  7D00              MOV     R5,#0
   \   0EBC  7E34              MOV     R6,#52
   \   0EBE  7F43              MOV     R7,#67
   \   0EC0  120000            LCALL   ?F_ADD_ASG_R0_R4567_L02
   \   0EC3            ?0187:
   \   0EC3            ?0185:
    524          
    525                  ES=0;
   \   0EC3  C2AC              CLR     IE.4
    526                  WsThvalue=sumOne/3.;
   \   0EC5  90028B            MOV     DPTR,#sumOne
   \   0EC8  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0ECB  120000            LCALL   ?R4567_LONG_TO_FLT_L02
   \   0ECE  E4                CLR     A
   \   0ECF  F8                MOV     R0,A
   \   0ED0  F9                MOV     R1,A
   \   0ED1  7440              MOV     A,#64
   \   0ED3  FA                MOV     R2,A
   \   0ED4  FB                MOV     R3,A
   \   0ED5  120000            LCALL   ?F_DIV_L02
   \   0ED8  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0EDB  900184            MOV     DPTR,#WsThvalue
   \   0EDE  ED                MOV     A,R5
   \   0EDF  F0                MOVX    @DPTR,A
   \   0EE0  A3                INC     DPTR
   \   0EE1  EC                MOV     A,R4
   \   0EE2  F0                MOVX    @DPTR,A
    527                  WdThvalue=(double)ave*10.;
   \   0EE3  7800              MOV     R0,#$LOCBI One_pros+2
   \   0EE5  120000            LCALL   ?LD_R4567_IR0_L20
   \   0EE8  E4                CLR     A
   \   0EE9  F8                MOV     R0,A
   \   0EEA  F9                MOV     R1,A
   \   0EEB  7A20              MOV     R2,#32
   \   0EED  7B41              MOV     R3,#65
   \   0EEF  120000            LCALL   ?F_MUL_L02
   \   0EF2  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0EF5  900182            MOV     DPTR,#WdThvalue
   \   0EF8  ED                MOV     A,R5
   \   0EF9  F0                MOVX    @DPTR,A
   \   0EFA  A3                INC     DPTR
   \   0EFB  EC                MOV     A,R4
   \   0EFC  F0                MOVX    @DPTR,A
    528                  ES=1;
   \   0EFD  D2AC              SETB    IE.4
    529          
    530                  sumOne=0;
   \   0EFF  90028B            MOV     DPTR,#sumOne
   \   0F02  E4                CLR     A
   \   0F03  F0                MOVX    @DPTR,A
   \   0F04  A3                INC     DPTR
   \   0F05  F0                MOVX    @DPTR,A
   \   0F06  A3                INC     DPTR
   \   0F07  F0                MOVX    @DPTR,A
   \   0F08  A3                INC     DPTR
   \   0F09  F0                MOVX    @DPTR,A
    531                  sinOne=0;
   \   0F0A  900275            MOV     DPTR,#sinOne
   \   0F0D  F0                MOVX    @DPTR,A
   \   0F0E  A3                INC     DPTR
   \   0F0F  F0                MOVX    @DPTR,A
    532                  cosOne=0;
   \   0F10  900281            MOV     DPTR,#cosOne
   \   0F13  F0                MOVX    @DPTR,A
   \   0F14  A3                INC     DPTR
   \   0F15  F0                MOVX    @DPTR,A
    533          }
   \   0F16  22                RET
    534          
    535          interrupt void T0_int(void)
    536          {
   \   0F17            T0_int:
    537          
    538          }
   \   0F17  32                RETI
    539          
    540          interrupt void T2_int(void)
    541          {
   \   0F18            T2_int:
   \   0F18  C0E0              PUSH    ACC
   \   0F1A  C082              PUSH    DPL
   \   0F1C  C083              PUSH    DPH
   \   0F1E  C0D0              PUSH    PSW
    542                  TR2=0;          /* Timer 2 Stop */
   \   0F20  C2CA              CLR     T2CON.2
    543                  TH2=0x00;
   \   0F22  75CD00            MOV     205,#0
    544                  TL2=0x00;
   \   0F25  75CC00            MOV     204,#0
    545          
    546              if(TEcount > 20)
   \   0F28  D3                SETB    C
   \   0F29  900189            MOV     DPTR,#TEcount+1
   \   0F2C  E0                MOVX    A,@DPTR
   \   0F2D  9414              SUBB    A,#20
   \   0F2F  900188            MOV     DPTR,#TEcount
   \   0F32  E0                MOVX    A,@DPTR
   \   0F33  9400              SUBB    A,#0
   \   0F35  4004              JC      ?0195
   \   0F37            ?0194:
    547                  Terror=1;
   \   0F37  D20D              SETB    Terror
    548              else
   \   0F39  800E              SJMP    ?0196
   \   0F3B            ?0195:
    549              {
    550                  Terror=0;
   \   0F3B  C20D              CLR     Terror
    551                  TEcount++;
   \   0F3D  A3                INC     DPTR
   \   0F3E  E0                MOVX    A,@DPTR
   \   0F3F  04                INC     A
   \   0F40  F0                MOVX    @DPTR,A
   \   0F41  900188            MOV     DPTR,#TEcount
   \   0F44  7003              JNZ     ?0419
   \   0F46  E0                MOVX    A,@DPTR
   \   0F47  04                INC     A
   \   0F48  F0                MOVX    @DPTR,A
   \   0F49            ?0419:
   \   0F49            ?0196:
    552              }
    553          
    554              RCAP2L=0x00;
   \   0F49  75CA00            MOV     202,#0
    555              RCAP2H=0x00;
   \   0F4C  75CB00            MOV     203,#0
    556              TR2=1;          /* Timer 2 Run */
   \   0F4F  D2CA              SETB    T2CON.2
    557              TF2=0;
   \   0F51  C2CF              CLR     T2CON.7
    558          }
   \   0F53  D0D0              POP     PSW
   \   0F55  D083              POP     DPH
   \   0F57  D082              POP     DPL
   \   0F59  D0E0              POP     ACC
   \   0F5B  32                RETI
    559          
    560          interrupt void EX0_int(void)
    561          {
   \   0F5C            EX0_int:
   \   0F5C  C0E0              PUSH    ACC
   \   0F5E  C0F0              PUSH    B
   \   0F60  C082              PUSH    DPL
   \   0F62  C083              PUSH    DPH
   \   0F64  C0D0              PUSH    PSW
   \   0F66  E8                MOV     A,R0
   \   0F67  C0E0              PUSH    ACC
   \   0F69  E9                MOV     A,R1
   \   0F6A  C0E0              PUSH    ACC
   \   0F6C  EA                MOV     A,R2
   \   0F6D  C0E0              PUSH    ACC
   \   0F6F  EB                MOV     A,R3
   \   0F70  C0E0              PUSH    ACC
   \   0F72  EC                MOV     A,R4
   \   0F73  C0E0              PUSH    ACC
   \   0F75  ED                MOV     A,R5
   \   0F76  C0E0              PUSH    ACC
   \   0F78  EE                MOV     A,R6
   \   0F79  C0E0              PUSH    ACC
   \   0F7B  EF                MOV     A,R7
   \   0F7C  C0E0              PUSH    ACC
    562              unsigned int i;
    563          
    564              if(Quad++ == 3)
   \   0F7E  90000A            MOV     DPTR,#Quad
   \   0F81  E0                MOVX    A,@DPTR
   \   0F82  FC                MOV     R4,A
   \   0F83  04                INC     A
   \   0F84  F0                MOVX    @DPTR,A
   \   0F85  EC                MOV     A,R4
   \   0F86  B4031F            CJNE    A,#3,?0198
   \   0F89            ?0197:
    565              {
    566                  Quad=0;
   \   0F89  E4                CLR     A
   \   0F8A  F0                MOVX    @DPTR,A
    567                  ES=0;
   \   0F8B  C2AC              CLR     IE.4
    568                  if(++Second == 60)
   \   0F8D  90000C            MOV     DPTR,#Second
   \   0F90  E0                MOVX    A,@DPTR
   \   0F91  04                INC     A
   \   0F92  F0                MOVX    @DPTR,A
   \   0F93  B43C10            CJNE    A,#60,?0200
   \   0F96            ?0199:
    569                  {
    570                      Second=0;
   \   0F96  E4                CLR     A
   \   0F97  F0                MOVX    @DPTR,A
    571                      Minute=++Minute%10;
   \   0F98  90000B            MOV     DPTR,#Minute
   \   0F9B  E0                MOVX    A,@DPTR
   \   0F9C  FF                MOV     R7,A
   \   0F9D  0F                INC     R7
   \   0F9E  EF                MOV     A,R7
   \   0F9F  75F00A            MOV     B,#10
   \   0FA2  84                DIV     AB
   \   0FA3  E5F0              MOV     A,B
   \   0FA5  F0                MOVX    @DPTR,A
   \   0FA6            ?0200:
    572                  }
    573                  ES=1;
   \   0FA6  D2AC              SETB    IE.4
   \   0FA8            ?0198:
    574              }
    575              P3.5 = 0;                               // Holding
   \   0FA8  C2B5              CLR     P3.5
    576              for(i=0; i < 15; i++)
   \   0FAA  7800              MOV     R0,#$LOCBI EX0_int
   \   0FAC  E4                CLR     A
   \   0FAD  F6                MOV     @R0,A
   \   0FAE  08                INC     R0
   \   0FAF  F6                MOV     @R0,A
   \   0FB0            ?0202:
   \   0FB0  C3                CLR     C
   \   0FB1  7800              MOV     R0,#$LOCBI EX0_int+1
   \   0FB3  E6                MOV     A,@R0
   \   0FB4  940F              SUBB    A,#15
   \   0FB6  18                DEC     R0
   \   0FB7  E6                MOV     A,@R0
   \   0FB8  9400              SUBB    A,#0
   \   0FBA  5017              JNC     ?0201
   \   0FBC            ?0203:
    577              {
    578                  i++;
   \   0FBC  08                INC     R0
   \   0FBD  06                INC     @R0
   \   0FBE  E6                MOV     A,@R0
   \   0FBF  18                DEC     R0
   \   0FC0  7001              JNZ     $+3
   \   0FC2  06                INC     @R0
    579                  i--;
   \   0FC3  08                INC     R0
   \   0FC4  E6                MOV     A,@R0
   \   0FC5  16                DEC     @R0
   \   0FC6  18                DEC     R0
   \   0FC7  7001              JNZ     $+3
   \   0FC9  16                DEC     @R0
   \   0FCA  08                INC     R0
   \   0FCB  06                INC     @R0
   \   0FCC  E6                MOV     A,@R0
   \   0FCD  18                DEC     R0
   \   0FCE  7001              JNZ     $+3
   \   0FD0  06                INC     @R0
   \   0FD1  80DD              SJMP    ?0202
   \   0FD3            ?0201:
    580              }                                       // Delay
    581              write_XDATA(ADCMSB,0xff);               // Converting Start
   \   0FD3  74FF              MOV     A,#255
   \   0FD5  90C000            MOV     DPTR,#49152
   \   0FD8  F0                MOVX    @DPTR,A
    582                  for(i=0; i < 10; i++)
   \   0FD9  E4                CLR     A
   \   0FDA  F6                MOV     @R0,A
   \   0FDB  08                INC     R0
   \   0FDC  F6                MOV     @R0,A
   \   0FDD            ?0206:
   \   0FDD  C3                CLR     C
   \   0FDE  7800              MOV     R0,#$LOCBI EX0_int+1
   \   0FE0  E6                MOV     A,@R0
   \   0FE1  940A              SUBB    A,#10
   \   0FE3  18                DEC     R0
   \   0FE4  E6                MOV     A,@R0
   \   0FE5  9400              SUBB    A,#0
   \   0FE7  5017              JNC     ?0205
   \   0FE9            ?0207:
    583              {
    584                  i++;
   \   0FE9  08                INC     R0
   \   0FEA  06                INC     @R0
   \   0FEB  E6                MOV     A,@R0
   \   0FEC  18                DEC     R0
   \   0FED  7001              JNZ     $+3
   \   0FEF  06                INC     @R0
    585                  i--;
   \   0FF0  08                INC     R0
   \   0FF1  E6                MOV     A,@R0
   \   0FF2  16                DEC     @R0
   \   0FF3  18                DEC     R0
   \   0FF4  7001              JNZ     $+3
   \   0FF6  16                DEC     @R0
   \   0FF7  08                INC     R0
   \   0FF8  06                INC     @R0
   \   0FF9  E6                MOV     A,@R0
   \   0FFA  18                DEC     R0
   \   0FFB  7001              JNZ     $+3
   \   0FFD  06                INC     @R0
   \   0FFE  80DD              SJMP    ?0206
   \   1000            ?0205:
    586              }
    587              i=0;                                    // Delay
   \   1000  E4                CLR     A
   \   1001  F6                MOV     @R0,A
   \   1002  08                INC     R0
   \   1003  F6                MOV     @R0,A
   \   1004            ?0210:
    588              while(P3.3 == 1)                        // Converting Delay
   \   1004  30B31A            JNB     P3.3,?0209
   \   1007            ?0211:
    589              {
    590                  if(i++ > 100)
   \   1007  7800              MOV     R0,#$LOCBI EX0_int
   \   1009  E6                MOV     A,@R0
   \   100A  FD                MOV     R5,A
   \   100B  08                INC     R0
   \   100C  E6                MOV     A,@R0
   \   100D  FC                MOV     R4,A
   \   100E  06                INC     @R0
   \   100F  E6                MOV     A,@R0
   \   1010  18                DEC     R0
   \   1011  7001              JNZ     $+3
   \   1013  06                INC     @R0
   \   1014  D3                SETB    C
   \   1015  EC                MOV     A,R4
   \   1016  9464              SUBB    A,#100
   \   1018  ED                MOV     A,R5
   \   1019  9400              SUBB    A,#0
   \   101B  4002              JC      ?0213
   \   101D            ?0212:
    591                      break;
   \   101D  8002              SJMP    ?0209
   \   101F            ?0213:
   \   101F  80E3              SJMP    ?0210
   \   1021            ?0209:
    592              }
    593              if(i > 100)
   \   1021  D3                SETB    C
   \   1022  7800              MOV     R0,#$LOCBI EX0_int+1
   \   1024  E6                MOV     A,@R0
   \   1025  9464              SUBB    A,#100
   \   1027  18                DEC     R0
   \   1028  E6                MOV     A,@R0
   \   1029  9400              SUBB    A,#0
   \   102B  4004              JC      ?0215
   \   102D            ?0214:
    594                  Aderr=1;
   \   102D  D20A              SETB    Aderr
    595              else
   \   102F  8002              SJMP    ?0216
   \   1031            ?0215:
    596                  Aderr=0;
   \   1031  C20A              CLR     Aderr
   \   1033            ?0216:
    597          
    598              ES=0;
   \   1033  C2AC              CLR     IE.4
    599              Wdreal  = read_XDATA(ADCLSB) >> 4;
   \   1035  90C001            MOV     DPTR,#49153
   \   1038  E0                MOVX    A,@DPTR
   \   1039  C4                SWAP    A
   \   103A  540F              ANL     A,#15
   \   103C  7D00              MOV     R5,#0
    600              Wdreal |= read_XDATA(ADCMSB) << 4;      // Measuring Wind Direction
   \   103E  FC                MOV     R4,A
   \   103F  8D82              MOV     DPL,R5
   \   1041  E0                MOVX    A,@DPTR
   \   1042  7F00              MOV     R7,#0
   \   1044  7E04              MOV     R6,#4
   \   1046            ?0420:
   \   1046  25E0              ADD     A,ACC
   \   1048  CF                XCH     A,R7
   \   1049  33                RLC     A
   \   104A  CF                XCH     A,R7
   \   104B  DEF9              DJNZ    R6,?0420
   \   104D  FE                MOV     R6,A
   \   104E  EC                MOV     A,R4
   \   104F  4E                ORL     A,R6
   \   1050  FC                MOV     R4,A
   \   1051  ED                MOV     A,R5
   \   1052  4F                ORL     A,R7
   \   1053  90000D            MOV     DPTR,#Wdreal
   \   1056  F0                MOVX    @DPTR,A
   \   1057  A3                INC     DPTR
   \   1058  CC                XCH     A,R4
   \   1059  F0                MOVX    @DPTR,A
   \   105A  CC                XCH     A,R4
    601              ES=1;
   \   105B  D2AC              SETB    IE.4
    602              P3.5 = 1;                               // Sampling
   \   105D  D2B5              SETB    P3.5
    603          
    604              TR0=0;                                  // Timer Stop
   \   105F  C28C              CLR     TCON.4
    605              Nws  = TH0 << 8;                        // Capturing Wind Speed
   \   1061  E58C              MOV     A,TH0
   \   1063  7D00              MOV     R5,#0
   \   1065  7C00              MOV     R4,#0
   \   1067  FD                MOV     R5,A
   \   1068  EC                MOV     A,R4
   \   1069  ED                MOV     A,R5
   \   106A  33                RLC     A
   \   106B  95E0              SUBB    A,ACC
   \   106D  FE                MOV     R6,A
   \   106E  FF                MOV     R7,A
   \   106F  900002            MOV     DPTR,#Nws
   \   1072  120000            LCALL   ?STO_R4567_DPTR_L20
    606              Nws |= TL0;
   \   1075  E58A              MOV     A,TL0
   \   1077  FC                MOV     R4,A
   \   1078  7D00              MOV     R5,#0
   \   107A  7E00              MOV     R6,#0
   \   107C  7F00              MOV     R7,#0
   \   107E  900002            MOV     DPTR,#Nws
   \   1081  120000            LCALL   ?L_OR_ASG_DPTR_R4567_L01
    607              TR0=1;                                  // Timer Run
   \   1084  D28C              SETB    TCON.4
    608              if(Ows > Nws)
   \   1086  900006            MOV     DPTR,#Ows
   \   1089  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   108C  900002            MOV     DPTR,#Nws
   \   108F  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   1092  7407              MOV     A,#7
   \   1094  120000            LCALL   ?L_CMP_L01
   \   1097  701E              JNZ     ?0218
   \   1099            ?0217:
    609                  Wsabs=(Nws+0x10000)-Ows;
   \   1099  E8                MOV     A,R0
   \   109A  FC                MOV     R4,A
   \   109B  E9                MOV     A,R1
   \   109C  FD                MOV     R5,A
   \   109D  C3                CLR     C
   \   109E  900009            MOV     DPTR,#Ows+3
   \   10A1  E0                MOVX    A,@DPTR
   \   10A2  FE                MOV     R6,A
   \   10A3  EC                MOV     A,R4
   \   10A4  9E                SUBB    A,R6
   \   10A5  FC                MOV     R4,A
   \   10A6  900008            MOV     DPTR,#Ows+2
   \   10A9  E0                MOVX    A,@DPTR
   \   10AA  FE                MOV     R6,A
   \   10AB  ED                MOV     A,R5
   \   10AC  9E                SUBB    A,R6
   \   10AD  900011            MOV     DPTR,#Wsabs
   \   10B0  F0                MOVX    @DPTR,A
   \   10B1  A3                INC     DPTR
   \   10B2  CC                XCH     A,R4
   \   10B3  F0                MOVX    @DPTR,A
   \   10B4  CC                XCH     A,R4
    610              else
   \   10B5  801C              SJMP    ?0219
   \   10B7            ?0218:
    611                  Wsabs=Nws-Ows;
   \   10B7  E8                MOV     A,R0
   \   10B8  FC                MOV     R4,A
   \   10B9  E9                MOV     A,R1
   \   10BA  FD                MOV     R5,A
   \   10BB  C3                CLR     C
   \   10BC  900009            MOV     DPTR,#Ows+3
   \   10BF  E0                MOVX    A,@DPTR
   \   10C0  FE                MOV     R6,A
   \   10C1  EC                MOV     A,R4
   \   10C2  9E                SUBB    A,R6
   \   10C3  FC                MOV     R4,A
   \   10C4  900008            MOV     DPTR,#Ows+2
   \   10C7  E0                MOVX    A,@DPTR
   \   10C8  FE                MOV     R6,A
   \   10C9  ED                MOV     A,R5
   \   10CA  9E                SUBB    A,R6
   \   10CB  900011            MOV     DPTR,#Wsabs
   \   10CE  F0                MOVX    @DPTR,A
   \   10CF  A3                INC     DPTR
   \   10D0  CC                XCH     A,R4
   \   10D1  F0                MOVX    @DPTR,A
   \   10D2  CC                XCH     A,R4
   \   10D3            ?0219:
    612              Ows=Nws;
   \   10D3  900006            MOV     DPTR,#Ows
   \   10D6  120000            LCALL   ?STO_R0123_DPTR_L20
    613                                                      // Calculation W_D
    614              oldv=0;
   \   10D9  90025D            MOV     DPTR,#oldv
   \   10DC  E4                CLR     A
   \   10DD  F0                MOVX    @DPTR,A
   \   10DE  A3                INC     DPTR
   \   10DF  F0                MOVX    @DPTR,A
    615              flag=0;
   \   10E0  900261            MOV     DPTR,#flag
   \   10E3  F0                MOVX    @DPTR,A
   \   10E4  A3                INC     DPTR
   \   10E5  F0                MOVX    @DPTR,A
    616              Sens=0;
   \   10E6  C206              CLR     Sens
    617              for(i=0; i != 16; i++)
   \   10E8  7800              MOV     R0,#$LOCBI EX0_int
   \   10EA  F6                MOV     @R0,A
   \   10EB  08                INC     R0
   \   10EC  F6                MOV     @R0,A
   \   10ED            ?0221:
   \   10ED  7800              MOV     R0,#$LOCBI EX0_int+1
   \   10EF  E6                MOV     A,@R0
   \   10F0  6410              XRL     A,#16
   \   10F2  7007              JNZ     ?0421
   \   10F4  18                DEC     R0
   \   10F5  E6                MOV     A,@R0
   \   10F6  7003              JNZ     $+5
   \   10F8  021233            LJMP    ?0220
   \   10FB            ?0421:
   \   10FB            ?0222:
    618              {
    619                  flag += 22.5;
   \   10FB  900261            MOV     DPTR,#flag
   \   10FE  7C00              MOV     R4,#0
   \   1100  7D00              MOV     R5,#0
   \   1102  7EB4              MOV     R6,#180
   \   1104  7F41              MOV     R7,#65
   \   1106  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    620                  newv=Adirection[i];
   \   1109  7800              MOV     R0,#$LOCBI EX0_int+1
   \   110B  E6                MOV     A,@R0
   \   110C  25E0              ADD     A,ACC
   \   110E  90028A            MOV     DPTR,#Adirection
   \   1111  FB                MOV     R3,A
   \   1112  93                MOVC    A,@A+DPTR
   \   1113  CB                XCH     A,R3
   \   1114  04                INC     A
   \   1115  93                MOVC    A,@A+DPTR
    621                  if( Wdreal < newv && Wdreal >= oldv)
   \   1116  90025F            MOV     DPTR,#newv
   \   1119  CB                XCH     A,R3
   \   111A  F0                MOVX    @DPTR,A
   \   111B  A3                INC     DPTR
   \   111C  CB                XCH     A,R3
   \   111D  F0                MOVX    @DPTR,A
   \   111E  FA                MOV     R2,A
   \   111F  90000E            MOV     DPTR,#Wdreal+1
   \   1122  E0                MOVX    A,@DPTR
   \   1123  C3                CLR     C
   \   1124  9A                SUBB    A,R2
   \   1125  90000D            MOV     DPTR,#Wdreal
   \   1128  E0                MOVX    A,@DPTR
   \   1129  9B                SUBB    A,R3
   \   112A  4003              JC      $+5
   \   112C  02121B            LJMP    ?0225
   \   112F  E0                MOVX    A,@DPTR
   \   1130  FB                MOV     R3,A
   \   1131  A3                INC     DPTR
   \   1132  E0                MOVX    A,@DPTR
   \   1133  FA                MOV     R2,A
   \   1134  90025E            MOV     DPTR,#oldv+1
   \   1137  E0                MOVX    A,@DPTR
   \   1138  D3                SETB    C
   \   1139  9A                SUBB    A,R2
   \   113A  90025D            MOV     DPTR,#oldv
   \   113D  E0                MOVX    A,@DPTR
   \   113E  9B                SUBB    A,R3
   \   113F  4003              JC      $+5
   \   1141  02121B            LJMP    ?0225
   \   1144            ?0227:
   \   1144            ?0226:
   \   1144            ?0224:
    622                  {
    623                      Sens=1;
   \   1144  D206              SETB    Sens
    624                      value=(flag-(flag-22.5))/(newv-oldv);
   \   1146  E4                CLR     A
   \   1147  F8                MOV     R0,A
   \   1148  F9                MOV     R1,A
   \   1149  7AB4              MOV     R2,#180
   \   114B  7BC1              MOV     R3,#193
   \   114D  120000            LCALL   ?F_ADD_L02
   \   1150  EE                MOV     A,R6
   \   1151  4F                ORL     A,R7
   \   1152  6004              JZ      $+6
   \   1154  EF                MOV     A,R7
   \   1155  6480              XRL     A,#128
   \   1157  FF                MOV     R7,A
   \   1158  900261            MOV     DPTR,#flag
   \   115B  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   115E  120000            LCALL   ?F_ADD_L02
   \   1161  90025F            MOV     DPTR,#newv
   \   1164  E0                MOVX    A,@DPTR
   \   1165  FB                MOV     R3,A
   \   1166  A3                INC     DPTR
   \   1167  E0                MOVX    A,@DPTR
   \   1168  C3                CLR     C
   \   1169  90025E            MOV     DPTR,#oldv+1
   \   116C  F9                MOV     R1,A
   \   116D  E0                MOVX    A,@DPTR
   \   116E  C9                XCH     A,R1
   \   116F  99                SUBB    A,R1
   \   1170  FA                MOV     R2,A
   \   1171  90025D            MOV     DPTR,#oldv
   \   1174  E0                MOVX    A,@DPTR
   \   1175  F9                MOV     R1,A
   \   1176  EB                MOV     A,R3
   \   1177  99                SUBB    A,R1
   \   1178  FB                MOV     R3,A
   \   1179  EA                MOV     A,R2
   \   117A  F8                MOV     R0,A
   \   117B  CB                XCH     A,R3
   \   117C  F9                MOV     R1,A
   \   117D  CB                XCH     A,R3
   \   117E  EB                MOV     A,R3
   \   117F  E4                CLR     A
   \   1180  FA                MOV     R2,A
   \   1181  FB                MOV     R3,A
   \   1182  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1185  120000            LCALL   ?F_DIV_L02
    625                      Wdvalue=(float)((value*Wdreal)-(value*oldv)+(flag-22.5)) * 10.;
   \   1188  90000D            MOV     DPTR,#Wdreal
   \   118B  E0                MOVX    A,@DPTR
   \   118C  FB                MOV     R3,A
   \   118D  A3                INC     DPTR
   \   118E  E0                MOVX    A,@DPTR
   \   118F  F8                MOV     R0,A
   \   1190  CB                XCH     A,R3
   \   1191  F9                MOV     R1,A
   \   1192  CB                XCH     A,R3
   \   1193  EB                MOV     A,R3
   \   1194  E4                CLR     A
   \   1195  FA                MOV     R2,A
   \   1196  FB                MOV     R3,A
   \   1197  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   119A  900265            MOV     DPTR,#value
   \   119D  120000            LCALL   ?STO_R4567_DPTR_L20
   \   11A0  120000            LCALL   ?F_MUL_L02
   \   11A3  EF                MOV     A,R7
   \   11A4  C0E0              PUSH    ACC
   \   11A6  EE                MOV     A,R6
   \   11A7  C0E0              PUSH    ACC
   \   11A9  ED                MOV     A,R5
   \   11AA  C0E0              PUSH    ACC
   \   11AC  EC                MOV     A,R4
   \   11AD  C0E0              PUSH    ACC
   \   11AF  900261            MOV     DPTR,#flag
   \   11B2  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   11B5  E4                CLR     A
   \   11B6  F8                MOV     R0,A
   \   11B7  F9                MOV     R1,A
   \   11B8  7AB4              MOV     R2,#180
   \   11BA  7BC1              MOV     R3,#193
   \   11BC  120000            LCALL   ?F_ADD_L02
   \   11BF  D0E0              POP     ACC
   \   11C1  F8                MOV     R0,A
   \   11C2  D0E0              POP     ACC
   \   11C4  F9                MOV     R1,A
   \   11C5  D0E0              POP     ACC
   \   11C7  FA                MOV     R2,A
   \   11C8  D0E0              POP     ACC
   \   11CA  FB                MOV     R3,A
   \   11CB  120000            LCALL   ?F_ADD_L02
   \   11CE  90025D            MOV     DPTR,#oldv
   \   11D1  E0                MOVX    A,@DPTR
   \   11D2  FB                MOV     R3,A
   \   11D3  A3                INC     DPTR
   \   11D4  E0                MOVX    A,@DPTR
   \   11D5  F8                MOV     R0,A
   \   11D6  CB                XCH     A,R3
   \   11D7  F9                MOV     R1,A
   \   11D8  CB                XCH     A,R3
   \   11D9  EB                MOV     A,R3
   \   11DA  E4                CLR     A
   \   11DB  FA                MOV     R2,A
   \   11DC  FB                MOV     R3,A
   \   11DD  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   11E0  EF                MOV     A,R7
   \   11E1  C0E0              PUSH    ACC
   \   11E3  EE                MOV     A,R6
   \   11E4  C0E0              PUSH    ACC
   \   11E6  ED                MOV     A,R5
   \   11E7  C0E0              PUSH    ACC
   \   11E9  EC                MOV     A,R4
   \   11EA  C0E0              PUSH    ACC
   \   11EC  900265            MOV     DPTR,#value
   \   11EF  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   11F2  120000            LCALL   ?F_MUL_L02
   \   11F5  D0E0              POP     ACC
   \   11F7  F8                MOV     R0,A
   \   11F8  D0E0              POP     ACC
   \   11FA  F9                MOV     R1,A
   \   11FB  D0E0              POP     ACC
   \   11FD  FA                MOV     R2,A
   \   11FE  D0E0              POP     ACC
   \   1200  FB                MOV     R3,A
   \   1201  120000            LCALL   ?F_SUB_R_L02
   \   1204  E4                CLR     A
   \   1205  F8                MOV     R0,A
   \   1206  F9                MOV     R1,A
   \   1207  7A20              MOV     R2,#32
   \   1209  7B41              MOV     R3,#65
   \   120B  120000            LCALL   ?F_MUL_L02
   \   120E  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1211  900013            MOV     DPTR,#Wdvalue
   \   1214  ED                MOV     A,R5
   \   1215  F0                MOVX    @DPTR,A
   \   1216  A3                INC     DPTR
   \   1217  EC                MOV     A,R4
   \   1218  F0                MOVX    @DPTR,A
    626                      break;
   \   1219  8018              SJMP    ?0220
   \   121B            ?0225:
    627                  }
    628                  else
    629                      oldv=newv;
   \   121B  90025F            MOV     DPTR,#newv
   \   121E  E0                MOVX    A,@DPTR
   \   121F  FD                MOV     R5,A
   \   1220  A3                INC     DPTR
   \   1221  E0                MOVX    A,@DPTR
   \   1222  90025D            MOV     DPTR,#oldv
   \   1225  CD                XCH     A,R5
   \   1226  F0                MOVX    @DPTR,A
   \   1227  A3                INC     DPTR
   \   1228  CD                XCH     A,R5
   \   1229  F0                MOVX    @DPTR,A
   \   122A  06                INC     @R0
   \   122B  E6                MOV     A,@R0
   \   122C  18                DEC     R0
   \   122D  7001              JNZ     $+3
   \   122F  06                INC     @R0
   \   1230  0210ED            LJMP    ?0221
   \   1233            ?0220:
    630              }
    631              if(!Sens)
   \   1233  200609            JB      Sens,?0229
   \   1236            ?0228:
    632                  Wdvalue=3599;
   \   1236  900013            MOV     DPTR,#Wdvalue
   \   1239  740E              MOV     A,#14
   \   123B  F0                MOVX    @DPTR,A
   \   123C  A3                INC     DPTR
   \   123D  04                INC     A
   \   123E  F0                MOVX    @DPTR,A
   \   123F            ?0229:
    633                                      // Data Store
    634              Wpoint = ++Wpoint%12;
   \   123F  900047            MOV     DPTR,#Wpoint
   \   1242  E0                MOVX    A,@DPTR
   \   1243  FF                MOV     R7,A
   \   1244  0F                INC     R7
   \   1245  EF                MOV     A,R7
   \   1246  75F00C            MOV     B,#12
   \   1249  84                DIV     AB
   \   124A  E5F0              MOV     A,B
    635              Wddata[Wpoint]=Wdvalue;
   \   124C  FC                MOV     R4,A
   \   124D  900013            MOV     DPTR,#Wdvalue
   \   1250  E0                MOVX    A,@DPTR
   \   1251  FF                MOV     R7,A
   \   1252  A3                INC     DPTR
   \   1253  E0                MOVX    A,@DPTR
   \   1254  FE                MOV     R6,A
   \   1255  EC                MOV     A,R4
   \   1256  900047            MOV     DPTR,#Wpoint
   \   1259  F0                MOVX    @DPTR,A
   \   125A  25E0              ADD     A,ACC
   \   125C  2417              ADD     A,#LOW(Wddata)
   \   125E  F582              MOV     DPL,A
   \   1260  E4                CLR     A
   \   1261  3400              ADDC    A,#HIGH(Wddata)
   \   1263  F583              MOV     DPH,A
   \   1265  EF                MOV     A,R7
   \   1266  F0                MOVX    @DPTR,A
   \   1267  A3                INC     DPTR
   \   1268  EE                MOV     A,R6
   \   1269  F0                MOVX    @DPTR,A
    636              Wsdata[Wpoint]=Wsabs;
   \   126A  900011            MOV     DPTR,#Wsabs
   \   126D  E0                MOVX    A,@DPTR
   \   126E  FF                MOV     R7,A
   \   126F  A3                INC     DPTR
   \   1270  E0                MOVX    A,@DPTR
   \   1271  FE                MOV     R6,A
   \   1272  EC                MOV     A,R4
   \   1273  25E0              ADD     A,ACC
   \   1275  242F              ADD     A,#LOW(Wsdata)
   \   1277  F582              MOV     DPL,A
   \   1279  E4                CLR     A
   \   127A  3400              ADDC    A,#HIGH(Wsdata)
   \   127C  F583              MOV     DPH,A
   \   127E  EF                MOV     A,R7
   \   127F  F0                MOVX    @DPTR,A
   \   1280  A3                INC     DPTR
   \   1281  EE                MOV     A,R6
   \   1282  F0                MOVX    @DPTR,A
    637              MeasQ=1;
   \   1283  D207              SETB    MeasQ
    638          }
   \   1285  D0E0              POP     ACC
   \   1287  FF                MOV     R7,A
   \   1288  D0E0              POP     ACC
   \   128A  FE                MOV     R6,A
   \   128B  D0E0              POP     ACC
   \   128D  FD                MOV     R5,A
   \   128E  D0E0              POP     ACC
   \   1290  FC                MOV     R4,A
   \   1291  D0E0              POP     ACC
   \   1293  FB                MOV     R3,A
   \   1294  D0E0              POP     ACC
   \   1296  FA                MOV     R2,A
   \   1297  D0E0              POP     ACC
   \   1299  F9                MOV     R1,A
   \   129A  D0E0              POP     ACC
   \   129C  F8                MOV     R0,A
   \   129D  D0D0              POP     PSW
   \   129F  D083              POP     DPH
   \   12A1  D082              POP     DPL
   \   12A3  D0F0              POP     B
   \   12A5  D0E0              POP     ACC
   \   12A7  32                RETI
    639          
    640          interrupt void SCON_int(void)
    641          {
   \   12A8            SCON_int:
   \   12A8  C0E0              PUSH    ACC
   \   12AA  C082              PUSH    DPL
   \   12AC  C083              PUSH    DPH
   \   12AE  C0D0              PUSH    PSW
   \   12B0  E8                MOV     A,R0
   \   12B1  C0E0              PUSH    ACC
   \   12B3  E9                MOV     A,R1
   \   12B4  C0E0              PUSH    ACC
   \   12B6  EA                MOV     A,R2
   \   12B7  C0E0              PUSH    ACC
   \   12B9  EB                MOV     A,R3
   \   12BA  C0E0              PUSH    ACC
   \   12BC  EC                MOV     A,R4
   \   12BD  C0E0              PUSH    ACC
   \   12BF  ED                MOV     A,R5
   \   12C0  C0E0              PUSH    ACC
   \   12C2  EE                MOV     A,R6
   \   12C3  C0E0              PUSH    ACC
   \   12C5  EF                MOV     A,R7
   \   12C6  C0E0              PUSH    ACC
    642              unsigned char i,j;
    643          
    644              if(RI == 1)
   \   12C8  209803            JB      SCON.0,$+6
   \   12CB  021B05            LJMP    ?0231
   \   12CE            ?0230:
    645                  {
    646                          RI=0;
   \   12CE  C298              CLR     SCON.0
    647                          Receve=1;
   \   12D0  D204              SETB    Receve
    648                          BlueL=1;
   \   12D2  D296              SETB    P1.6
    649                          Blueb=LightL;
   \   12D4  900257            MOV     DPTR,#Blueb
   \   12D7  7408              MOV     A,#8
   \   12D9  F0                MOVX    @DPTR,A
   \   12DA  A3                INC     DPTR
   \   12DB  E4                CLR     A
   \   12DC  F0                MOVX    @DPTR,A
    650                          Rbuf[Rpoint++]=SBUF;
   \   12DD  E599              MOV     A,SBUF
   \   12DF  9001EE            MOV     DPTR,#Rpoint
   \   12E2  FE                MOV     R6,A
   \   12E3  E0                MOVX    A,@DPTR
   \   12E4  FD                MOV     R5,A
   \   12E5  A3                INC     DPTR
   \   12E6  E0                MOVX    A,@DPTR
   \   12E7  FC                MOV     R4,A
   \   12E8  E0                MOVX    A,@DPTR
   \   12E9  04                INC     A
   \   12EA  F0                MOVX    @DPTR,A
   \   12EB  9001EE            MOV     DPTR,#Rpoint
   \   12EE  7003              JNZ     ?0422
   \   12F0  E0                MOVX    A,@DPTR
   \   12F1  04                INC     A
   \   12F2  F0                MOVX    @DPTR,A
   \   12F3            ?0422:
   \   12F3  EC                MOV     A,R4
   \   12F4  248A              ADD     A,#LOW(Rbuf)
   \   12F6  F582              MOV     DPL,A
   \   12F8  E4                CLR     A
   \   12F9  3401              ADDC    A,#HIGH(Rbuf)
   \   12FB  F583              MOV     DPH,A
   \   12FD  EE                MOV     A,R6
   \   12FE  F0                MOVX    @DPTR,A
    651          
    652                          if( Rbuf[Rpoint-1]  == 0xfe && Rbuf[Rpoint-2]  == 0xff
    653                           && Rbuf[Rpoint-10] == 0xff && Rbuf[Rpoint-11] == 0xff)
   \   12FF  9001EF            MOV     DPTR,#Rpoint+1
   \   1302  E0                MOVX    A,@DPTR
   \   1303  14                DEC     A
   \   1304  248A              ADD     A,#LOW(Rbuf)
   \   1306  F582              MOV     DPL,A
   \   1308  E4                CLR     A
   \   1309  3401              ADDC    A,#HIGH(Rbuf)
   \   130B  F583              MOV     DPH,A
   \   130D  E0                MOVX    A,@DPTR
   \   130E  B4FE02            CJNE    A,#254,$+5
   \   1311  8003              SJMP    $+5
   \   1313  021AF2            LJMP    ?0233
   \   1316  9001EF            MOV     DPTR,#Rpoint+1
   \   1319  E0                MOVX    A,@DPTR
   \   131A  24FE              ADD     A,#254
   \   131C  248A              ADD     A,#LOW(Rbuf)
   \   131E  F582              MOV     DPL,A
   \   1320  E4                CLR     A
   \   1321  3401              ADDC    A,#HIGH(Rbuf)
   \   1323  F583              MOV     DPH,A
   \   1325  E0                MOVX    A,@DPTR
   \   1326  04                INC     A
   \   1327  6003              JZ      $+5
   \   1329  021AF2            LJMP    ?0233
   \   132C  9001EF            MOV     DPTR,#Rpoint+1
   \   132F  E0                MOVX    A,@DPTR
   \   1330  24F6              ADD     A,#246
   \   1332  248A              ADD     A,#LOW(Rbuf)
   \   1334  F582              MOV     DPL,A
   \   1336  E4                CLR     A
   \   1337  3401              ADDC    A,#HIGH(Rbuf)
   \   1339  F583              MOV     DPH,A
   \   133B  E0                MOVX    A,@DPTR
   \   133C  04                INC     A
   \   133D  6003              JZ      $+5
   \   133F  021AF2            LJMP    ?0233
   \   1342  9001EF            MOV     DPTR,#Rpoint+1
   \   1345  E0                MOVX    A,@DPTR
   \   1346  24F5              ADD     A,#245
   \   1348  248A              ADD     A,#LOW(Rbuf)
   \   134A  F582              MOV     DPL,A
   \   134C  E4                CLR     A
   \   134D  3401              ADDC    A,#HIGH(Rbuf)
   \   134F  F583              MOV     DPH,A
   \   1351  E0                MOVX    A,@DPTR
   \   1352  04                INC     A
   \   1353  6003              JZ      $+5
   \   1355  021AF2            LJMP    ?0233
   \   1358            ?0235:
   \   1358            ?0234:
   \   1358            ?0232:
    654                          {
    655                                  j=0;
   \   1358  7800              MOV     R0,#$LOCBI SCON_int+1
   \   135A  7600              MOV     @R0,#0
    656                                  for(i=9; i != 3; i--)
   \   135C  18                DEC     R0
   \   135D  7609              MOV     @R0,#9
   \   135F            ?0237:
   \   135F  7800              MOV     R0,#$LOCBI SCON_int
   \   1361  E6                MOV     A,@R0
   \   1362  6403              XRL     A,#3
   \   1364  601B              JZ      ?0236
   \   1366            ?0238:
    657                                          j ^= Rbuf[Rpoint-i];
   \   1366  9001EF            MOV     DPTR,#Rpoint+1
   \   1369  E0                MOVX    A,@DPTR
   \   136A  C3                CLR     C
   \   136B  96                SUBB    A,@R0
   \   136C  248A              ADD     A,#LOW(Rbuf)
   \   136E  F582              MOV     DPL,A
   \   1370  E4                CLR     A
   \   1371  3401              ADDC    A,#HIGH(Rbuf)
   \   1373  F583              MOV     DPH,A
   \   1375  E0                MOVX    A,@DPTR
   \   1376  7900              MOV     R1,#$LOCBI SCON_int+1
   \   1378  FC                MOV     R4,A
   \   1379  E7                MOV     A,@R1
   \   137A  6C                XRL     A,R4
   \   137B  08                INC     R0
   \   137C  F6                MOV     @R0,A
   \   137D  18                DEC     R0
   \   137E  16                DEC     @R0
   \   137F  80DE              SJMP    ?0237
   \   1381            ?0236:
    658                                  if(j == Rbuf[Rpoint-3])
   \   1381  9001EF            MOV     DPTR,#Rpoint+1
   \   1384  E0                MOVX    A,@DPTR
   \   1385  24FD              ADD     A,#253
   \   1387  248A              ADD     A,#LOW(Rbuf)
   \   1389  F582              MOV     DPL,A
   \   138B  E4                CLR     A
   \   138C  3401              ADDC    A,#HIGH(Rbuf)
   \   138E  F583              MOV     DPH,A
   \   1390  E0                MOVX    A,@DPTR
   \   1391  08                INC     R0
   \   1392  66                XRL     A,@R0
   \   1393  6003              JZ      $+5
   \   1395  021AEB            LJMP    ?0241
   \   1398            ?0240:
    659                                  {
    660                                          if(Rbuf[Rpoint-8] == ID)            // Temp 1 Call
   \   1398  9001EF            MOV     DPTR,#Rpoint+1
   \   139B  E0                MOVX    A,@DPTR
   \   139C  24F8              ADD     A,#248
   \   139E  248A              ADD     A,#LOW(Rbuf)
   \   13A0  F582              MOV     DPL,A
   \   13A2  E4                CLR     A
   \   13A3  3401              ADDC    A,#HIGH(Rbuf)
   \   13A5  F583              MOV     DPH,A
   \   13A7  E0                MOVX    A,@DPTR
   \   13A8  FC                MOV     R4,A
   \   13A9  900256            MOV     DPTR,#ID
   \   13AC  E0                MOVX    A,@DPTR
   \   13AD  6C                XRL     A,R4
   \   13AE  6003              JZ      $+5
   \   13B0  021727            LJMP    ?0243
   \   13B3            ?0242:
    661                                          {
    662                                                  switch(Rbuf[Rpoint-9])
   \   13B3  9001EF            MOV     DPTR,#Rpoint+1
   \   13B6  E0                MOVX    A,@DPTR
   \   13B7  24F7              ADD     A,#247
   \   13B9  248A              ADD     A,#LOW(Rbuf)
   \   13BB  F582              MOV     DPL,A
   \   13BD  E4                CLR     A
   \   13BE  3401              ADDC    A,#HIGH(Rbuf)
   \   13C0  F583              MOV     DPH,A
   \   13C2  E0                MOVX    A,@DPTR
   \   13C3  B44D02            CJNE    A,#77,$+5
   \   13C6  8003              SJMP    $+5
   \   13C8  021473            LJMP    ?0250
   \   13CB            ?0245:
    663                                                  {
    664                                                          case 'M':
    665                                                                  Rpoint=0;
   \   13CB  9001EE            MOV     DPTR,#Rpoint
   \   13CE  E4                CLR     A
   \   13CF  F0                MOVX    @DPTR,A
   \   13D0  A3                INC     DPTR
   \   13D1  F0                MOVX    @DPTR,A
    666                                                                  Sbuf[16]= 0xff;          // Head
   \   13D2  14                DEC     A
   \   13D3  900200            MOV     DPTR,#Sbuf+16
   \   13D6  F0                MOVX    @DPTR,A
    667                                                                  Sbuf[15]= 0xff;
   \   13D7  9001FF            MOV     DPTR,#Sbuf+15
   \   13DA  F0                MOVX    @DPTR,A
    668                                                                  Sbuf[14]= 'M';
   \   13DB  744D              MOV     A,#77
   \   13DD  9001FE            MOV     DPTR,#Sbuf+14
   \   13E0  F0                MOVX    @DPTR,A
    669                                                                  // Sbuf[13]= Wdsta;
    670                                                                  Sbuf[13]= 0;
   \   13E1  E4                CLR     A
   \   13E2  9001FD            MOV     DPTR,#Sbuf+13
   \   13E5  F0                MOVX    @DPTR,A
    671                                                                  Sbuf[12]= 0;            // Sensor Code
   \   13E6  9001FC            MOV     DPTR,#Sbuf+12
   \   13E9  F0                MOVX    @DPTR,A
    672                                                                  Sbuf[11]= ID;           // sensor code & ID
   \   13EA  900256            MOV     DPTR,#ID
   \   13ED  E0                MOVX    A,@DPTR
   \   13EE  9001FB            MOV     DPTR,#Sbuf+11
   \   13F1  F0                MOVX    @DPTR,A
    673                                                                  Sbuf[10]= WdSec >> 8;
   \   13F2  900048            MOV     DPTR,#WdSec
   \   13F5  E0                MOVX    A,@DPTR
   \   13F6  FD                MOV     R5,A
   \   13F7  A3                INC     DPTR
   \   13F8  E0                MOVX    A,@DPTR
   \   13F9  ED                MOV     A,R5
   \   13FA  7D00              MOV     R5,#0
   \   13FC  9001FA            MOV     DPTR,#Sbuf+10
   \   13FF  F0                MOVX    @DPTR,A
    674                                                                  Sbuf[9] = WdSec;
   \   1400  900049            MOV     DPTR,#WdSec+1
   \   1403  E0                MOVX    A,@DPTR
   \   1404  9001F9            MOV     DPTR,#Sbuf+9
   \   1407  F0                MOVX    @DPTR,A
    675                                                                  Sbuf[8] = 0;
   \   1408  ED                MOV     A,R5
   \   1409  9001F8            MOV     DPTR,#Sbuf+8
   \   140C  F0                MOVX    @DPTR,A
    676                                                                  Sbuf[7] = 0;
   \   140D  9001F7            MOV     DPTR,#Sbuf+7
   \   1410  F0                MOVX    @DPTR,A
    677                                                                  Sbuf[6] = 0;
   \   1411  9001F6            MOV     DPTR,#Sbuf+6
   \   1414  F0                MOVX    @DPTR,A
    678                                                                  Sbuf[5] = 0;
   \   1415  9001F5            MOV     DPTR,#Sbuf+5
   \   1418  F0                MOVX    @DPTR,A
    679                                                                  Sbuf[4] = WdGmax >> 8;
   \   1419  90016E            MOV     DPTR,#WdGmax
   \   141C  E0                MOVX    A,@DPTR
   \   141D  FD                MOV     R5,A
   \   141E  A3                INC     DPTR
   \   141F  E0                MOVX    A,@DPTR
   \   1420  ED                MOV     A,R5
   \   1421  7D00              MOV     R5,#0
   \   1423  9001F4            MOV     DPTR,#Sbuf+4
   \   1426  F0                MOVX    @DPTR,A
    680                                                                  Sbuf[3] = WdGmax;
   \   1427  90016F            MOV     DPTR,#WdGmax+1
   \   142A  E0                MOVX    A,@DPTR
   \   142B  9001F3            MOV     DPTR,#Sbuf+3
   \   142E  F0                MOVX    @DPTR,A
    681                                                                  Sbuf[2] = 0;
   \   142F  ED                MOV     A,R5
   \   1430  9001F2            MOV     DPTR,#Sbuf+2
   \   1433  F0                MOVX    @DPTR,A
    682                                                                  for(j=14;j != 2;j--)
   \   1434  7800              MOV     R0,#$LOCBI SCON_int+1
   \   1436  760E              MOV     @R0,#14
   \   1438            ?0247:
   \   1438  7800              MOV     R0,#$LOCBI SCON_int+1
   \   143A  E6                MOV     A,@R0
   \   143B  6402              XRL     A,#2
   \   143D  6015              JZ      ?0246
   \   143F            ?0248:
    683                                                                          Sbuf[2] ^= Sbuf[j];
   \   143F  E6                MOV     A,@R0
   \   1440  24F0              ADD     A,#LOW(Sbuf)
   \   1442  F582              MOV     DPL,A
   \   1444  E4                CLR     A
   \   1445  3401              ADDC    A,#HIGH(Sbuf)
   \   1447  F583              MOV     DPH,A
   \   1449  E0                MOVX    A,@DPTR
   \   144A  9001F2            MOV     DPTR,#Sbuf+2
   \   144D  FC                MOV     R4,A
   \   144E  E0                MOVX    A,@DPTR
   \   144F  6C                XRL     A,R4
   \   1450  F0                MOVX    @DPTR,A
   \   1451  16                DEC     @R0
   \   1452  80E4              SJMP    ?0247
   \   1454            ?0246:
    684                                                                  Sbuf[1] = 0xff;
   \   1454  74FF              MOV     A,#255
   \   1456  9001F1            MOV     DPTR,#Sbuf+1
   \   1459  F0                MOVX    @DPTR,A
    685                                                                  Sbuf[0] = 0xfe;
   \   145A  14                DEC     A
   \   145B  9001F0            MOV     DPTR,#Sbuf
   \   145E  F0                MOVX    @DPTR,A
    686                                                                  Spoint=16;
   \   145F  900254            MOV     DPTR,#Spoint
   \   1462  E4                CLR     A
   \   1463  F0                MOVX    @DPTR,A
   \   1464  A3                INC     DPTR
   \   1465  7410              MOV     A,#16
   \   1467  F0                MOVX    @DPTR,A
    687                                                                  Comon=1;
   \   1468  D203              SETB    Comon
    688                                                                  SBUF=Sbuf[16];
   \   146A  900200            MOV     DPTR,#Sbuf+16
   \   146D  E0                MOVX    A,@DPTR
   \   146E  F599              MOV     SBUF,A
    689                                                                  break;
   \   1470  021727            LJMP    ?0244
   \   1473            ?0250:
   \   1473  B44F02            CJNE    A,#79,$+5
   \   1476  8003              SJMP    $+5
   \   1478  02154C            LJMP    ?0258
    690                                                          case 'O':
    691                                                                  Rpoint=0;
   \   147B  9001EE            MOV     DPTR,#Rpoint
   \   147E  E4                CLR     A
   \   147F  F0                MOVX    @DPTR,A
   \   1480  A3                INC     DPTR
   \   1481  F0                MOVX    @DPTR,A
    692                                                                  Sbuf[16]= 0xff;      /* Head */
   \   1482  14                DEC     A
   \   1483  900200            MOV     DPTR,#Sbuf+16
   \   1486  F0                MOVX    @DPTR,A
    693                                                                  Sbuf[15]= 0xff;
   \   1487  9001FF            MOV     DPTR,#Sbuf+15
   \   148A  F0                MOVX    @DPTR,A
    694                                                                  Sbuf[14]= 'O';
   \   148B  744F              MOV     A,#79
   \   148D  9001FE            MOV     DPTR,#Sbuf+14
   \   1490  F0                MOVX    @DPTR,A
    695                                                                  // Sbuf[13]= Wdsta;
    696                                                                  Sbuf[13]= 0;
   \   1491  E4                CLR     A
   \   1492  9001FD            MOV     DPTR,#Sbuf+13
   \   1495  F0                MOVX    @DPTR,A
    697                                                                  Sbuf[12]= 0;        // Sensor Code
   \   1496  9001FC            MOV     DPTR,#Sbuf+12
   \   1499  F0                MOVX    @DPTR,A
    698                                                                  Sbuf[11]= ID;       // Sensor ID
   \   149A  900256            MOV     DPTR,#ID
   \   149D  E0                MOVX    A,@DPTR
   \   149E  9001FB            MOV     DPTR,#Sbuf+11
   \   14A1  F0                MOVX    @DPTR,A
    699                                                                  Sbuf[10]= WdMin >> 8;
   \   14A2  90013C            MOV     DPTR,#WdMin
   \   14A5  E0                MOVX    A,@DPTR
   \   14A6  FD                MOV     R5,A
   \   14A7  A3                INC     DPTR
   \   14A8  E0                MOVX    A,@DPTR
   \   14A9  ED                MOV     A,R5
   \   14AA  7D00              MOV     R5,#0
   \   14AC  9001FA            MOV     DPTR,#Sbuf+10
   \   14AF  F0                MOVX    @DPTR,A
    700                                                                  Sbuf[9] = WdMin;
   \   14B0  90013D            MOV     DPTR,#WdMin+1
   \   14B3  E0                MOVX    A,@DPTR
   \   14B4  9001F9            MOV     DPTR,#Sbuf+9
   \   14B7  F0                MOVX    @DPTR,A
    701                                                                  Sbuf[8] = WdThvalue >> 8;
   \   14B8  900182            MOV     DPTR,#WdThvalue
   \   14BB  E0                MOVX    A,@DPTR
   \   14BC  FD                MOV     R5,A
   \   14BD  A3                INC     DPTR
   \   14BE  E0                MOVX    A,@DPTR
   \   14BF  ED                MOV     A,R5
   \   14C0  7D00              MOV     R5,#0
   \   14C2  9001F8            MOV     DPTR,#Sbuf+8
   \   14C5  F0                MOVX    @DPTR,A
    702                                                                  Sbuf[7] = WdThvalue;
   \   14C6  900183            MOV     DPTR,#WdThvalue+1
   \   14C9  E0                MOVX    A,@DPTR
   \   14CA  9001F7            MOV     DPTR,#Sbuf+7
   \   14CD  F0                MOVX    @DPTR,A
    703                                                                  Sbuf[6] = 0;
   \   14CE  ED                MOV     A,R5
   \   14CF  9001F6            MOV     DPTR,#Sbuf+6
   \   14D2  F0                MOVX    @DPTR,A
    704                                                                  Sbuf[5] = 0;
   \   14D3  9001F5            MOV     DPTR,#Sbuf+5
   \   14D6  F0                MOVX    @DPTR,A
    705                                                                  if(Fout == 1)
   \   14D7  300E18            JNB     Fout,?0252
   \   14DA            ?0251:
    706                                                                  {
    707                                                                          Sbuf[4]=WdGmax >> 8;
   \   14DA  90016E            MOV     DPTR,#WdGmax
   \   14DD  E0                MOVX    A,@DPTR
   \   14DE  FD                MOV     R5,A
   \   14DF  A3                INC     DPTR
   \   14E0  E0                MOVX    A,@DPTR
   \   14E1  ED                MOV     A,R5
   \   14E2  7D00              MOV     R5,#0
   \   14E4  9001F4            MOV     DPTR,#Sbuf+4
   \   14E7  F0                MOVX    @DPTR,A
    708                                                                          Sbuf[3]=WdGmax;
   \   14E8  90016F            MOV     DPTR,#WdGmax+1
   \   14EB  E0                MOVX    A,@DPTR
   \   14EC  9001F3            MOV     DPTR,#Sbuf+3
   \   14EF  F0                MOVX    @DPTR,A
    709                                                                  }
    710                                                                  else
   \   14F0  8016              SJMP    ?0253
   \   14F2            ?0252:
    711                                                                  {
    712          
    713                                                                          Sbuf[4]=WdMmax >> 8;
   \   14F2  900172            MOV     DPTR,#WdMmax
   \   14F5  E0                MOVX    A,@DPTR
   \   14F6  FD                MOV     R5,A
   \   14F7  A3                INC     DPTR
   \   14F8  E0                MOVX    A,@DPTR
   \   14F9  ED                MOV     A,R5
   \   14FA  7D00              MOV     R5,#0
   \   14FC  9001F4            MOV     DPTR,#Sbuf+4
   \   14FF  F0                MOVX    @DPTR,A
    714                                                                          Sbuf[3]=WdMmax;
   \   1500  900173            MOV     DPTR,#WdMmax+1
   \   1503  E0                MOVX    A,@DPTR
   \   1504  9001F3            MOV     DPTR,#Sbuf+3
   \   1507  F0                MOVX    @DPTR,A
   \   1508            ?0253:
    715                                                                  }
    716                                                                  Sbuf[2] = 0;
   \   1508  ED                MOV     A,R5
   \   1509  9001F2            MOV     DPTR,#Sbuf+2
   \   150C  F0                MOVX    @DPTR,A
    717                                                                  for(j=14;j != 2;j--)
   \   150D  7800              MOV     R0,#$LOCBI SCON_int+1
   \   150F  760E              MOV     @R0,#14
   \   1511            ?0255:
   \   1511  7800              MOV     R0,#$LOCBI SCON_int+1
   \   1513  E6                MOV     A,@R0
   \   1514  6402              XRL     A,#2
   \   1516  6015              JZ      ?0254
   \   1518            ?0256:
    718                                                                          Sbuf[2] ^= Sbuf[j];
   \   1518  E6                MOV     A,@R0
   \   1519  24F0              ADD     A,#LOW(Sbuf)
   \   151B  F582              MOV     DPL,A
   \   151D  E4                CLR     A
   \   151E  3401              ADDC    A,#HIGH(Sbuf)
   \   1520  F583              MOV     DPH,A
   \   1522  E0                MOVX    A,@DPTR
   \   1523  9001F2            MOV     DPTR,#Sbuf+2
   \   1526  FC                MOV     R4,A
   \   1527  E0                MOVX    A,@DPTR
   \   1528  6C                XRL     A,R4
   \   1529  F0                MOVX    @DPTR,A
   \   152A  16                DEC     @R0
   \   152B  80E4              SJMP    ?0255
   \   152D            ?0254:
    719                                                                  Sbuf[1] = 0xff;
   \   152D  74FF              MOV     A,#255
   \   152F  9001F1            MOV     DPTR,#Sbuf+1
   \   1532  F0                MOVX    @DPTR,A
    720                                                                  Sbuf[0] = 0xfe;
   \   1533  14                DEC     A
   \   1534  9001F0            MOV     DPTR,#Sbuf
   \   1537  F0                MOVX    @DPTR,A
    721                                                                  Spoint=16;
   \   1538  900254            MOV     DPTR,#Spoint
   \   153B  E4                CLR     A
   \   153C  F0                MOVX    @DPTR,A
   \   153D  A3                INC     DPTR
   \   153E  7410              MOV     A,#16
   \   1540  F0                MOVX    @DPTR,A
    722                                                                  Comon=1;
   \   1541  D203              SETB    Comon
    723                                                                  SBUF=Sbuf[16];
   \   1543  900200            MOV     DPTR,#Sbuf+16
   \   1546  E0                MOVX    A,@DPTR
   \   1547  F599              MOV     SBUF,A
    724                                                                  break;
   \   1549  021727            LJMP    ?0244
   \   154C            ?0258:
   \   154C  B45402            CJNE    A,#84,$+5
   \   154F  8003              SJMP    $+5
   \   1551  021617            LJMP    ?0266
    725                                                          case 'T':
    726                                                                  Rpoint=0;
   \   1554  9001EE            MOV     DPTR,#Rpoint
   \   1557  E4                CLR     A
   \   1558  F0                MOVX    @DPTR,A
   \   1559  A3                INC     DPTR
   \   155A  F0                MOVX    @DPTR,A
    727                                                                  Sbuf[16]= 0xff;      /* Head */
   \   155B  14                DEC     A
   \   155C  900200            MOV     DPTR,#Sbuf+16
   \   155F  F0                MOVX    @DPTR,A
    728                                                                  Sbuf[15]=0xff;
   \   1560  9001FF            MOV     DPTR,#Sbuf+15
   \   1563  F0                MOVX    @DPTR,A
    729                                                                  Sbuf[14]= 'T';
   \   1564  7454              MOV     A,#84
   \   1566  9001FE            MOV     DPTR,#Sbuf+14
   \   1569  F0                MOVX    @DPTR,A
    730                                                                  Sbuf[13]= 0;
   \   156A  E4                CLR     A
   \   156B  9001FD            MOV     DPTR,#Sbuf+13
   \   156E  F0                MOVX    @DPTR,A
    731                                                                  Sbuf[12]= 0;        // Sensor Code
   \   156F  9001FC            MOV     DPTR,#Sbuf+12
   \   1572  F0                MOVX    @DPTR,A
    732                                                                  Sbuf[11]= ID;       // Sensor ID
   \   1573  900256            MOV     DPTR,#ID
   \   1576  E0                MOVX    A,@DPTR
   \   1577  9001FB            MOV     DPTR,#Sbuf+11
   \   157A  F0                MOVX    @DPTR,A
    733          //                                                      Sbuf[10]= WdTen >> 8;
    734          //                                                      Sbuf[9] = WdTen;
    735                                                                  Sbuf[10]= WdHTen >> 8;
   \   157B  90016C            MOV     DPTR,#WdHTen
   \   157E  E0                MOVX    A,@DPTR
   \   157F  FD                MOV     R5,A
   \   1580  A3                INC     DPTR
   \   1581  E0                MOVX    A,@DPTR
   \   1582  ED                MOV     A,R5
   \   1583  7D00              MOV     R5,#0
   \   1585  9001FA            MOV     DPTR,#Sbuf+10
   \   1588  F0                MOVX    @DPTR,A
    736                                                                  Sbuf[9] = WdHTen;
   \   1589  90016D            MOV     DPTR,#WdHTen+1
   \   158C  E0                MOVX    A,@DPTR
   \   158D  9001F9            MOV     DPTR,#Sbuf+9
   \   1590  F0                MOVX    @DPTR,A
    737                                                                  Sbuf[8] = 0;
   \   1591  ED                MOV     A,R5
   \   1592  9001F8            MOV     DPTR,#Sbuf+8
   \   1595  F0                MOVX    @DPTR,A
    738                                                                  Sbuf[7] = 0;
   \   1596  9001F7            MOV     DPTR,#Sbuf+7
   \   1599  F0                MOVX    @DPTR,A
    739                                                                  Sbuf[6] = 0;
   \   159A  9001F6            MOV     DPTR,#Sbuf+6
   \   159D  F0                MOVX    @DPTR,A
    740                                                                  Sbuf[5] = 0;
   \   159E  9001F5            MOV     DPTR,#Sbuf+5
   \   15A1  F0                MOVX    @DPTR,A
    741                                                                  if(Fout == 1)
   \   15A2  300E18            JNB     Fout,?0260
   \   15A5            ?0259:
    742                                                                  {
    743                                                                          Sbuf[4]=WdGmax >> 8;
   \   15A5  90016E            MOV     DPTR,#WdGmax
   \   15A8  E0                MOVX    A,@DPTR
   \   15A9  FD                MOV     R5,A
   \   15AA  A3                INC     DPTR
   \   15AB  E0                MOVX    A,@DPTR
   \   15AC  ED                MOV     A,R5
   \   15AD  7D00              MOV     R5,#0
   \   15AF  9001F4            MOV     DPTR,#Sbuf+4
   \   15B2  F0                MOVX    @DPTR,A
    744                                                                          Sbuf[3]=WdGmax;
   \   15B3  90016F            MOV     DPTR,#WdGmax+1
   \   15B6  E0                MOVX    A,@DPTR
   \   15B7  9001F3            MOV     DPTR,#Sbuf+3
   \   15BA  F0                MOVX    @DPTR,A
    745                                                                  }
    746                                                                  else
   \   15BB  8016              SJMP    ?0261
   \   15BD            ?0260:
    747                                                                  {
    748                                                                          Sbuf[4]=WdTmax >> 8;
   \   15BD  900176            MOV     DPTR,#WdTmax
   \   15C0  E0                MOVX    A,@DPTR
   \   15C1  FD                MOV     R5,A
   \   15C2  A3                INC     DPTR
   \   15C3  E0                MOVX    A,@DPTR
   \   15C4  ED                MOV     A,R5
   \   15C5  7D00              MOV     R5,#0
   \   15C7  9001F4            MOV     DPTR,#Sbuf+4
   \   15CA  F0                MOVX    @DPTR,A
    749                                                                          Sbuf[3]=WdTmax;
   \   15CB  900177            MOV     DPTR,#WdTmax+1
   \   15CE  E0                MOVX    A,@DPTR
   \   15CF  9001F3            MOV     DPTR,#Sbuf+3
   \   15D2  F0                MOVX    @DPTR,A
   \   15D3            ?0261:
    750                                                                  }
    751                                                                  Sbuf[2] = 0;
   \   15D3  ED                MOV     A,R5
   \   15D4  9001F2            MOV     DPTR,#Sbuf+2
   \   15D7  F0                MOVX    @DPTR,A
    752                                                                  for(j=14;j != 2;j--)
   \   15D8  7800              MOV     R0,#$LOCBI SCON_int+1
   \   15DA  760E              MOV     @R0,#14
   \   15DC            ?0263:
   \   15DC  7800              MOV     R0,#$LOCBI SCON_int+1
   \   15DE  E6                MOV     A,@R0
   \   15DF  6402              XRL     A,#2
   \   15E1  6015              JZ      ?0262
   \   15E3            ?0264:
    753                                                                          Sbuf[2] ^= Sbuf[j];
   \   15E3  E6                MOV     A,@R0
   \   15E4  24F0              ADD     A,#LOW(Sbuf)
   \   15E6  F582              MOV     DPL,A
   \   15E8  E4                CLR     A
   \   15E9  3401              ADDC    A,#HIGH(Sbuf)
   \   15EB  F583              MOV     DPH,A
   \   15ED  E0                MOVX    A,@DPTR
   \   15EE  9001F2            MOV     DPTR,#Sbuf+2
   \   15F1  FC                MOV     R4,A
   \   15F2  E0                MOVX    A,@DPTR
   \   15F3  6C                XRL     A,R4
   \   15F4  F0                MOVX    @DPTR,A
   \   15F5  16                DEC     @R0
   \   15F6  80E4              SJMP    ?0263
   \   15F8            ?0262:
    754                                                                  Sbuf[1] = 0xff;
   \   15F8  74FF              MOV     A,#255
   \   15FA  9001F1            MOV     DPTR,#Sbuf+1
   \   15FD  F0                MOVX    @DPTR,A
    755                                                                  Sbuf[0] = 0xfe;
   \   15FE  14                DEC     A
   \   15FF  9001F0            MOV     DPTR,#Sbuf
   \   1602  F0                MOVX    @DPTR,A
    756                                                                  Spoint=16;
   \   1603  900254            MOV     DPTR,#Spoint
   \   1606  E4                CLR     A
   \   1607  F0                MOVX    @DPTR,A
   \   1608  A3                INC     DPTR
   \   1609  7410              MOV     A,#16
   \   160B  F0                MOVX    @DPTR,A
    757                                                                  Comon=1;
   \   160C  D203              SETB    Comon
    758                                                                  SBUF=Sbuf[16];
   \   160E  900200            MOV     DPTR,#Sbuf+16
   \   1611  E0                MOVX    A,@DPTR
   \   1612  F599              MOV     SBUF,A
    759                                                                  break;
   \   1614  021727            LJMP    ?0244
   \   1617            ?0266:
   \   1617  B45202            CJNE    A,#82,$+5
   \   161A  8003              SJMP    $+5
   \   161C  0216E1            LJMP    ?0271
    760                                                          case 'R':
    761                                                                  Rpoint=0;
   \   161F  9001EE            MOV     DPTR,#Rpoint
   \   1622  E4                CLR     A
   \   1623  F0                MOVX    @DPTR,A
   \   1624  A3                INC     DPTR
   \   1625  F0                MOVX    @DPTR,A
    762                                                                  Sbuf[16]= 0xff;      /* Head */
   \   1626  14                DEC     A
   \   1627  900200            MOV     DPTR,#Sbuf+16
   \   162A  F0                MOVX    @DPTR,A
    763                                                                  Sbuf[15]= 0xff;
   \   162B  9001FF            MOV     DPTR,#Sbuf+15
   \   162E  F0                MOVX    @DPTR,A
    764                                                                  Sbuf[14]= 'R';
   \   162F  7452              MOV     A,#82
   \   1631  9001FE            MOV     DPTR,#Sbuf+14
   \   1634  F0                MOVX    @DPTR,A
    765                                                                  // Sbuf[13]= Wdsta;
    766                                                                  Sbuf[13]= 0;
   \   1635  E4                CLR     A
   \   1636  9001FD            MOV     DPTR,#Sbuf+13
   \   1639  F0                MOVX    @DPTR,A
    767                                                                  Sbuf[12]= 0;        // Sensor Code
   \   163A  9001FC            MOV     DPTR,#Sbuf+12
   \   163D  F0                MOVX    @DPTR,A
    768                                                                  Sbuf[11]= ID;       // Sensor ID
   \   163E  900256            MOV     DPTR,#ID
   \   1641  E0                MOVX    A,@DPTR
   \   1642  9001FB            MOV     DPTR,#Sbuf+11
   \   1645  F0                MOVX    @DPTR,A
    769                                                                  Sbuf[10]= Wdreal >> 8;
   \   1646  90000D            MOV     DPTR,#Wdreal
   \   1649  E0                MOVX    A,@DPTR
   \   164A  FD                MOV     R5,A
   \   164B  A3                INC     DPTR
   \   164C  E0                MOVX    A,@DPTR
   \   164D  ED                MOV     A,R5
   \   164E  7D00              MOV     R5,#0
   \   1650  9001FA            MOV     DPTR,#Sbuf+10
   \   1653  F0                MOVX    @DPTR,A
    770                                                                  Sbuf[9] = Wdreal;
   \   1654  90000E            MOV     DPTR,#Wdreal+1
   \   1657  E0                MOVX    A,@DPTR
   \   1658  9001F9            MOV     DPTR,#Sbuf+9
   \   165B  F0                MOVX    @DPTR,A
    771                                                                  Sbuf[8] = WdSec >> 8;
   \   165C  900048            MOV     DPTR,#WdSec
   \   165F  E0                MOVX    A,@DPTR
   \   1660  FD                MOV     R5,A
   \   1661  A3                INC     DPTR
   \   1662  E0                MOVX    A,@DPTR
   \   1663  ED                MOV     A,R5
   \   1664  7D00              MOV     R5,#0
   \   1666  9001F8            MOV     DPTR,#Sbuf+8
   \   1669  F0                MOVX    @DPTR,A
    772                                                                  Sbuf[7] = WdSec;
   \   166A  900049            MOV     DPTR,#WdSec+1
   \   166D  E0                MOVX    A,@DPTR
   \   166E  9001F7            MOV     DPTR,#Sbuf+7
   \   1671  F0                MOVX    @DPTR,A
    773                                                                  Sbuf[6] = WdMin >> 8;
   \   1672  90013C            MOV     DPTR,#WdMin
   \   1675  E0                MOVX    A,@DPTR
   \   1676  FD                MOV     R5,A
   \   1677  A3                INC     DPTR
   \   1678  E0                MOVX    A,@DPTR
   \   1679  ED                MOV     A,R5
   \   167A  7D00              MOV     R5,#0
   \   167C  9001F6            MOV     DPTR,#Sbuf+6
   \   167F  F0                MOVX    @DPTR,A
    774                                                                  Sbuf[5] = WdMin;
   \   1680  90013D            MOV     DPTR,#WdMin+1
   \   1683  E0                MOVX    A,@DPTR
   \   1684  9001F5            MOV     DPTR,#Sbuf+5
   \   1687  F0                MOVX    @DPTR,A
    775                                                                  Sbuf[4] = WdGmax >> 8;
   \   1688  90016E            MOV     DPTR,#WdGmax
   \   168B  E0                MOVX    A,@DPTR
   \   168C  FD                MOV     R5,A
   \   168D  A3                INC     DPTR
   \   168E  E0                MOVX    A,@DPTR
   \   168F  ED                MOV     A,R5
   \   1690  7D00              MOV     R5,#0
   \   1692  9001F4            MOV     DPTR,#Sbuf+4
   \   1695  F0                MOVX    @DPTR,A
    776                                                                  Sbuf[3] = WdGmax;
   \   1696  90016F            MOV     DPTR,#WdGmax+1
   \   1699  E0                MOVX    A,@DPTR
   \   169A  9001F3            MOV     DPTR,#Sbuf+3
   \   169D  F0                MOVX    @DPTR,A
    777                                                                  Sbuf[2] = 0;
   \   169E  ED                MOV     A,R5
   \   169F  9001F2            MOV     DPTR,#Sbuf+2
   \   16A2  F0                MOVX    @DPTR,A
    778                                                                  for(j=14;j != 2;j--)
   \   16A3  7800              MOV     R0,#$LOCBI SCON_int+1
   \   16A5  760E              MOV     @R0,#14
   \   16A7            ?0268:
   \   16A7  7800              MOV     R0,#$LOCBI SCON_int+1
   \   16A9  E6                MOV     A,@R0
   \   16AA  6402              XRL     A,#2
   \   16AC  6015              JZ      ?0267
   \   16AE            ?0269:
    779                                                                          Sbuf[2] ^= Sbuf[j];
   \   16AE  E6                MOV     A,@R0
   \   16AF  24F0              ADD     A,#LOW(Sbuf)
   \   16B1  F582              MOV     DPL,A
   \   16B3  E4                CLR     A
   \   16B4  3401              ADDC    A,#HIGH(Sbuf)
   \   16B6  F583              MOV     DPH,A
   \   16B8  E0                MOVX    A,@DPTR
   \   16B9  9001F2            MOV     DPTR,#Sbuf+2
   \   16BC  FC                MOV     R4,A
   \   16BD  E0                MOVX    A,@DPTR
   \   16BE  6C                XRL     A,R4
   \   16BF  F0                MOVX    @DPTR,A
   \   16C0  16                DEC     @R0
   \   16C1  80E4              SJMP    ?0268
   \   16C3            ?0267:
    780                                                                  Sbuf[1] = 0xff;
   \   16C3  74FF              MOV     A,#255
   \   16C5  9001F1            MOV     DPTR,#Sbuf+1
   \   16C8  F0                MOVX    @DPTR,A
    781                                                                  Sbuf[0] = 0xfe;
   \   16C9  14                DEC     A
   \   16CA  9001F0            MOV     DPTR,#Sbuf
   \   16CD  F0                MOVX    @DPTR,A
    782                                                                  Spoint=16;
   \   16CE  900254            MOV     DPTR,#Spoint
   \   16D1  E4                CLR     A
   \   16D2  F0                MOVX    @DPTR,A
   \   16D3  A3                INC     DPTR
   \   16D4  7410              MOV     A,#16
   \   16D6  F0                MOVX    @DPTR,A
    783                                                                  Comon=1;
   \   16D7  D203              SETB    Comon
    784                                                                  SBUF=Sbuf[16];
   \   16D9  900200            MOV     DPTR,#Sbuf+16
   \   16DC  E0                MOVX    A,@DPTR
   \   16DD  F599              MOV     SBUF,A
    785                                                                  break;
   \   16DF  8046              SJMP    ?0244
   \   16E1            ?0271:
   \   16E1  B44043            CJNE    A,#64,?0244
    786                                                          case '@':
    787                                                                  WdGmax=Rbuf[Rpoint-5] << 8 | Rbuf[Rpoint-4];
   \   16E4  9001EE            MOV     DPTR,#Rpoint
   \   16E7  E0                MOVX    A,@DPTR
   \   16E8  FF                MOV     R7,A
   \   16E9  A3                INC     DPTR
   \   16EA  E0                MOVX    A,@DPTR
   \   16EB  FE                MOV     R6,A
   \   16EC  24FB              ADD     A,#251
   \   16EE  248A              ADD     A,#LOW(Rbuf)
   \   16F0  F582              MOV     DPL,A
   \   16F2  E4                CLR     A
   \   16F3  3401              ADDC    A,#HIGH(Rbuf)
   \   16F5  F583              MOV     DPH,A
   \   16F7  E0                MOVX    A,@DPTR
   \   16F8  7D00              MOV     R5,#0
   \   16FA  7C00              MOV     R4,#0
   \   16FC  CE                XCH     A,R6
   \   16FD  FA                MOV     R2,A
   \   16FE  CE                XCH     A,R6
   \   16FF  FD                MOV     R5,A
   \   1700  EA                MOV     A,R2
   \   1701  24FC              ADD     A,#252
   \   1703  248A              ADD     A,#LOW(Rbuf)
   \   1705  F582              MOV     DPL,A
   \   1707  E4                CLR     A
   \   1708  3401              ADDC    A,#HIGH(Rbuf)
   \   170A  F583              MOV     DPH,A
   \   170C  E0                MOVX    A,@DPTR
   \   170D  7B00              MOV     R3,#0
   \   170F  FA                MOV     R2,A
   \   1710  EC                MOV     A,R4
   \   1711  4A                ORL     A,R2
   \   1712  FC                MOV     R4,A
   \   1713  ED                MOV     A,R5
   \   1714  90016E            MOV     DPTR,#WdGmax
   \   1717  F0                MOVX    @DPTR,A
   \   1718  A3                INC     DPTR
   \   1719  CC                XCH     A,R4
   \   171A  F0                MOVX    @DPTR,A
   \   171B  CC                XCH     A,R4
    788                                                                  Rpoint=0;
   \   171C  EB                MOV     A,R3
   \   171D  FE                MOV     R6,A
   \   171E  FF                MOV     R7,A
   \   171F  9001EE            MOV     DPTR,#Rpoint
   \   1722  F0                MOVX    @DPTR,A
   \   1723  A3                INC     DPTR
   \   1724  F0                MOVX    @DPTR,A
    789                                                                  break;
   \   1725  8000              SJMP    ?0244
   \   1727            ?0244:
   \   1727            ?0243:
    790                                                  }
    791                                          }
    792                                          if(Rbuf[Rpoint-8] == ID+1)          // Temp 2 Call
   \   1727  9001EF            MOV     DPTR,#Rpoint+1
   \   172A  E0                MOVX    A,@DPTR
   \   172B  24F8              ADD     A,#248
   \   172D  248A              ADD     A,#LOW(Rbuf)
   \   172F  F582              MOV     DPL,A
   \   1731  E4                CLR     A
   \   1732  3401              ADDC    A,#HIGH(Rbuf)
   \   1734  F583              MOV     DPH,A
   \   1736  E0                MOVX    A,@DPTR
   \   1737  7D00              MOV     R5,#0
   \   1739  FC                MOV     R4,A
   \   173A  900256            MOV     DPTR,#ID
   \   173D  E0                MOVX    A,@DPTR
   \   173E  7F00              MOV     R7,#0
   \   1740  04                INC     A
   \   1741  FE                MOV     R6,A
   \   1742  7001              JNZ     ?0423
   \   1744  0F                INC     R7
   \   1745            ?0423:
   \   1745  EC                MOV     A,R4
   \   1746  6E                XRL     A,R6
   \   1747  7002              JNZ     ?0424
   \   1749  ED                MOV     A,R5
   \   174A  6F                XRL     A,R7
   \   174B            ?0424:
   \   174B  6003              JZ      $+5
   \   174D  021AB3            LJMP    ?0273
   \   1750            ?0272:
    793                                          {
    794                                                  switch(Rbuf[Rpoint-9])
   \   1750  9001EF            MOV     DPTR,#Rpoint+1
   \   1753  E0                MOVX    A,@DPTR
   \   1754  24F7              ADD     A,#247
   \   1756  248A              ADD     A,#LOW(Rbuf)
   \   1758  F582              MOV     DPL,A
   \   175A  E4                CLR     A
   \   175B  3401              ADDC    A,#HIGH(Rbuf)
   \   175D  F583              MOV     DPH,A
   \   175F  E0                MOVX    A,@DPTR
   \   1760  B44D02            CJNE    A,#77,$+5
   \   1763  8003              SJMP    $+5
   \   1765  021812            LJMP    ?0280
   \   1768            ?0275:
    795                                                  {
    796                                                          case 'M':
    797                                                                  Rpoint=0;
   \   1768  9001EE            MOV     DPTR,#Rpoint
   \   176B  E4                CLR     A
   \   176C  F0                MOVX    @DPTR,A
   \   176D  A3                INC     DPTR
   \   176E  F0                MOVX    @DPTR,A
    798                                                                  Sbuf[16]= 0xff;          // Head
   \   176F  14                DEC     A
   \   1770  900200            MOV     DPTR,#Sbuf+16
   \   1773  F0                MOVX    @DPTR,A
    799                                                                  Sbuf[15]= 0xff;
   \   1774  9001FF            MOV     DPTR,#Sbuf+15
   \   1777  F0                MOVX    @DPTR,A
    800                                                                  Sbuf[14]= 'M';
   \   1778  744D              MOV     A,#77
   \   177A  9001FE            MOV     DPTR,#Sbuf+14
   \   177D  F0                MOVX    @DPTR,A
    801                                                                  // Sbuf[13]= Wssta;
    802                                                                  Sbuf[13]= 0;
   \   177E  E4                CLR     A
   \   177F  9001FD            MOV     DPTR,#Sbuf+13
   \   1782  F0                MOVX    @DPTR,A
    803                                      Sbuf[12]= 0x01;         // Sensor Code
   \   1783  04                INC     A
   \   1784  9001FC            MOV     DPTR,#Sbuf+12
   \   1787  F0                MOVX    @DPTR,A
    804                                      Sbuf[11]= ID+1;         // Sensor ID
   \   1788  900256            MOV     DPTR,#ID
   \   178B  E0                MOVX    A,@DPTR
   \   178C  04                INC     A
   \   178D  9001FB            MOV     DPTR,#Sbuf+11
   \   1790  F0                MOVX    @DPTR,A
    805                                      Sbuf[10]= WsSec >> 8;
   \   1791  9000C2            MOV     DPTR,#WsSec
   \   1794  E0                MOVX    A,@DPTR
   \   1795  FD                MOV     R5,A
   \   1796  A3                INC     DPTR
   \   1797  E0                MOVX    A,@DPTR
   \   1798  ED                MOV     A,R5
   \   1799  7D00              MOV     R5,#0
   \   179B  9001FA            MOV     DPTR,#Sbuf+10
   \   179E  F0                MOVX    @DPTR,A
    806                                      Sbuf[9] = WsSec;
   \   179F  9000C3            MOV     DPTR,#WsSec+1
   \   17A2  E0                MOVX    A,@DPTR
   \   17A3  9001F9            MOV     DPTR,#Sbuf+9
   \   17A6  F0                MOVX    @DPTR,A
    807                                      Sbuf[8] = 0;
   \   17A7  ED                MOV     A,R5
   \   17A8  9001F8            MOV     DPTR,#Sbuf+8
   \   17AB  F0                MOVX    @DPTR,A
    808                                      Sbuf[7] = 0;
   \   17AC  9001F7            MOV     DPTR,#Sbuf+7
   \   17AF  F0                MOVX    @DPTR,A
    809                                      Sbuf[6] = 0;
   \   17B0  9001F6            MOV     DPTR,#Sbuf+6
   \   17B3  F0                MOVX    @DPTR,A
    810                                      Sbuf[5] = 0;
   \   17B4  9001F5            MOV     DPTR,#Sbuf+5
   \   17B7  F0                MOVX    @DPTR,A
    811                                      Sbuf[4] = WsGmax >> 8;
   \   17B8  900170            MOV     DPTR,#WsGmax
   \   17BB  E0                MOVX    A,@DPTR
   \   17BC  FD                MOV     R5,A
   \   17BD  A3                INC     DPTR
   \   17BE  E0                MOVX    A,@DPTR
   \   17BF  ED                MOV     A,R5
   \   17C0  7D00              MOV     R5,#0
   \   17C2  9001F4            MOV     DPTR,#Sbuf+4
   \   17C5  F0                MOVX    @DPTR,A
    812                                      Sbuf[3] = WsGmax;
   \   17C6  900171            MOV     DPTR,#WsGmax+1
   \   17C9  E0                MOVX    A,@DPTR
   \   17CA  9001F3            MOV     DPTR,#Sbuf+3
   \   17CD  F0                MOVX    @DPTR,A
    813                                      Sbuf[2] = 0;
   \   17CE  ED                MOV     A,R5
   \   17CF  9001F2            MOV     DPTR,#Sbuf+2
   \   17D2  F0                MOVX    @DPTR,A
    814                                      for(j=14;j != 2;j--)
   \   17D3  7800              MOV     R0,#$LOCBI SCON_int+1
   \   17D5  760E              MOV     @R0,#14
   \   17D7            ?0277:
   \   17D7  7800              MOV     R0,#$LOCBI SCON_int+1
   \   17D9  E6                MOV     A,@R0
   \   17DA  6402              XRL     A,#2
   \   17DC  6015              JZ      ?0276
   \   17DE            ?0278:
    815                                          Sbuf[2] ^= Sbuf[j];
   \   17DE  E6                MOV     A,@R0
   \   17DF  24F0              ADD     A,#LOW(Sbuf)
   \   17E1  F582              MOV     DPL,A
   \   17E3  E4                CLR     A
   \   17E4  3401              ADDC    A,#HIGH(Sbuf)
   \   17E6  F583              MOV     DPH,A
   \   17E8  E0                MOVX    A,@DPTR
   \   17E9  9001F2            MOV     DPTR,#Sbuf+2
   \   17EC  FC                MOV     R4,A
   \   17ED  E0                MOVX    A,@DPTR
   \   17EE  6C                XRL     A,R4
   \   17EF  F0                MOVX    @DPTR,A
   \   17F0  16                DEC     @R0
   \   17F1  80E4              SJMP    ?0277
   \   17F3            ?0276:
    816                                      Sbuf[1] = 0xff;
   \   17F3  74FF              MOV     A,#255
   \   17F5  9001F1            MOV     DPTR,#Sbuf+1
   \   17F8  F0                MOVX    @DPTR,A
    817                                      Sbuf[0] = 0xfe;
   \   17F9  14                DEC     A
   \   17FA  9001F0            MOV     DPTR,#Sbuf
   \   17FD  F0                MOVX    @DPTR,A
    818                                      Spoint=16;
   \   17FE  900254            MOV     DPTR,#Spoint
   \   1801  E4                CLR     A
   \   1802  F0                MOVX    @DPTR,A
   \   1803  A3                INC     DPTR
   \   1804  7410              MOV     A,#16
   \   1806  F0                MOVX    @DPTR,A
    819                                      Comon=1;
   \   1807  D203              SETB    Comon
    820                                      SBUF=Sbuf[16];
   \   1809  900200            MOV     DPTR,#Sbuf+16
   \   180C  E0                MOVX    A,@DPTR
   \   180D  F599              MOV     SBUF,A
    821                                      break;
   \   180F  021AB1            LJMP    ?0274
   \   1812            ?0280:
   \   1812  B44F02            CJNE    A,#79,$+5
   \   1815  8003              SJMP    $+5
   \   1817  0218ED            LJMP    ?0288
    822                                  case 'O':
    823                                      Rpoint=0;
   \   181A  9001EE            MOV     DPTR,#Rpoint
   \   181D  E4                CLR     A
   \   181E  F0                MOVX    @DPTR,A
   \   181F  A3                INC     DPTR
   \   1820  F0                MOVX    @DPTR,A
    824                                      Sbuf[16]= 0xff;             // Head
   \   1821  14                DEC     A
   \   1822  900200            MOV     DPTR,#Sbuf+16
   \   1825  F0                MOVX    @DPTR,A
    825                                      Sbuf[15]= 0xff;
   \   1826  9001FF            MOV     DPTR,#Sbuf+15
   \   1829  F0                MOVX    @DPTR,A
    826                                                                  Sbuf[14]= 'O';
   \   182A  744F              MOV     A,#79
   \   182C  9001FE            MOV     DPTR,#Sbuf+14
   \   182F  F0                MOVX    @DPTR,A
    827                                                                  // Sbuf[13]= Wssta;
    828                                                                  Sbuf[13]= 0;
   \   1830  E4                CLR     A
   \   1831  9001FD            MOV     DPTR,#Sbuf+13
   \   1834  F0                MOVX    @DPTR,A
    829                                      Sbuf[12]= 0x01;             // Sensor Code
   \   1835  04                INC     A
   \   1836  9001FC            MOV     DPTR,#Sbuf+12
   \   1839  F0                MOVX    @DPTR,A
    830                                      Sbuf[11]= ID+1;             // Sensor ID
   \   183A  900256            MOV     DPTR,#ID
   \   183D  E0                MOVX    A,@DPTR
   \   183E  04                INC     A
   \   183F  9001FB            MOV     DPTR,#Sbuf+11
   \   1842  F0                MOVX    @DPTR,A
    831                                      Sbuf[10]= WsMin >> 8;
   \   1843  900152            MOV     DPTR,#WsMin
   \   1846  E0                MOVX    A,@DPTR
   \   1847  FD                MOV     R5,A
   \   1848  A3                INC     DPTR
   \   1849  E0                MOVX    A,@DPTR
   \   184A  ED                MOV     A,R5
   \   184B  7D00              MOV     R5,#0
   \   184D  9001FA            MOV     DPTR,#Sbuf+10
   \   1850  F0                MOVX    @DPTR,A
    832                                      Sbuf[9] = WsMin;
   \   1851  900153            MOV     DPTR,#WsMin+1
   \   1854  E0                MOVX    A,@DPTR
   \   1855  9001F9            MOV     DPTR,#Sbuf+9
   \   1858  F0                MOVX    @DPTR,A
    833                                      Sbuf[8] = WsThvalue >> 8;
   \   1859  900184            MOV     DPTR,#WsThvalue
   \   185C  E0                MOVX    A,@DPTR
   \   185D  FD                MOV     R5,A
   \   185E  A3                INC     DPTR
   \   185F  E0                MOVX    A,@DPTR
   \   1860  ED                MOV     A,R5
   \   1861  7D00              MOV     R5,#0
   \   1863  9001F8            MOV     DPTR,#Sbuf+8
   \   1866  F0                MOVX    @DPTR,A
    834                                      Sbuf[7] = WsThvalue;
   \   1867  900185            MOV     DPTR,#WsThvalue+1
   \   186A  E0                MOVX    A,@DPTR
   \   186B  9001F7            MOV     DPTR,#Sbuf+7
   \   186E  F0                MOVX    @DPTR,A
    835                                      Sbuf[6] = 0;
   \   186F  ED                MOV     A,R5
   \   1870  9001F6            MOV     DPTR,#Sbuf+6
   \   1873  F0                MOVX    @DPTR,A
    836                                      Sbuf[5] = 0;
   \   1874  9001F5            MOV     DPTR,#Sbuf+5
   \   1877  F0                MOVX    @DPTR,A
    837                                      if(Fout == 1)
   \   1878  300E18            JNB     Fout,?0282
   \   187B            ?0281:
    838                                      {
    839                                          Sbuf[4]=WsGmax >> 8;
   \   187B  900170            MOV     DPTR,#WsGmax
   \   187E  E0                MOVX    A,@DPTR
   \   187F  FD                MOV     R5,A
   \   1880  A3                INC     DPTR
   \   1881  E0                MOVX    A,@DPTR
   \   1882  ED                MOV     A,R5
   \   1883  7D00              MOV     R5,#0
   \   1885  9001F4            MOV     DPTR,#Sbuf+4
   \   1888  F0                MOVX    @DPTR,A
    840                                          Sbuf[3]=WsGmax;
   \   1889  900171            MOV     DPTR,#WsGmax+1
   \   188C  E0                MOVX    A,@DPTR
   \   188D  9001F3            MOV     DPTR,#Sbuf+3
   \   1890  F0                MOVX    @DPTR,A
    841                                      }
    842                                      else
   \   1891  8016              SJMP    ?0283
   \   1893            ?0282:
    843                                      {
    844                                          Sbuf[4]=WsMmax >> 8;
   \   1893  900174            MOV     DPTR,#WsMmax
   \   1896  E0                MOVX    A,@DPTR
   \   1897  FD                MOV     R5,A
   \   1898  A3                INC     DPTR
   \   1899  E0                MOVX    A,@DPTR
   \   189A  ED                MOV     A,R5
   \   189B  7D00              MOV     R5,#0
   \   189D  9001F4            MOV     DPTR,#Sbuf+4
   \   18A0  F0                MOVX    @DPTR,A
    845                                          Sbuf[3]=WsMmax;
   \   18A1  900175            MOV     DPTR,#WsMmax+1
   \   18A4  E0                MOVX    A,@DPTR
   \   18A5  9001F3            MOV     DPTR,#Sbuf+3
   \   18A8  F0                MOVX    @DPTR,A
   \   18A9            ?0283:
    846                                      }
    847                                      Sbuf[2] = 0;
   \   18A9  ED                MOV     A,R5
   \   18AA  9001F2            MOV     DPTR,#Sbuf+2
   \   18AD  F0                MOVX    @DPTR,A
    848                                      for(j=14;j != 2;j--)
   \   18AE  7800              MOV     R0,#$LOCBI SCON_int+1
   \   18B0  760E              MOV     @R0,#14
   \   18B2            ?0285:
   \   18B2  7800              MOV     R0,#$LOCBI SCON_int+1
   \   18B4  E6                MOV     A,@R0
   \   18B5  6402              XRL     A,#2
   \   18B7  6015              JZ      ?0284
   \   18B9            ?0286:
    849                                          Sbuf[2] ^= Sbuf[j];
   \   18B9  E6                MOV     A,@R0
   \   18BA  24F0              ADD     A,#LOW(Sbuf)
   \   18BC  F582              MOV     DPL,A
   \   18BE  E4                CLR     A
   \   18BF  3401              ADDC    A,#HIGH(Sbuf)
   \   18C1  F583              MOV     DPH,A
   \   18C3  E0                MOVX    A,@DPTR
   \   18C4  9001F2            MOV     DPTR,#Sbuf+2
   \   18C7  FC                MOV     R4,A
   \   18C8  E0                MOVX    A,@DPTR
   \   18C9  6C                XRL     A,R4
   \   18CA  F0                MOVX    @DPTR,A
   \   18CB  16                DEC     @R0
   \   18CC  80E4              SJMP    ?0285
   \   18CE            ?0284:
    850                                      Sbuf[1] = 0xff;
   \   18CE  74FF              MOV     A,#255
   \   18D0  9001F1            MOV     DPTR,#Sbuf+1
   \   18D3  F0                MOVX    @DPTR,A
    851                                      Sbuf[0] = 0xfe;
   \   18D4  14                DEC     A
   \   18D5  9001F0            MOV     DPTR,#Sbuf
   \   18D8  F0                MOVX    @DPTR,A
    852                                      Spoint=16;
   \   18D9  900254            MOV     DPTR,#Spoint
   \   18DC  E4                CLR     A
   \   18DD  F0                MOVX    @DPTR,A
   \   18DE  A3                INC     DPTR
   \   18DF  7410              MOV     A,#16
   \   18E1  F0                MOVX    @DPTR,A
    853                                      Comon=1;
   \   18E2  D203              SETB    Comon
    854                                      SBUF=Sbuf[16];
   \   18E4  900200            MOV     DPTR,#Sbuf+16
   \   18E7  E0                MOVX    A,@DPTR
   \   18E8  F599              MOV     SBUF,A
    855                                      break;
   \   18EA  021AB1            LJMP    ?0274
   \   18ED            ?0288:
   \   18ED  B45402            CJNE    A,#84,$+5
   \   18F0  8003              SJMP    $+5
   \   18F2  0219BA            LJMP    ?0296
    856                                  case 'T':
    857                                      Rpoint=0;
   \   18F5  9001EE            MOV     DPTR,#Rpoint
   \   18F8  E4                CLR     A
   \   18F9  F0                MOVX    @DPTR,A
   \   18FA  A3                INC     DPTR
   \   18FB  F0                MOVX    @DPTR,A
    858                                      Sbuf[16]= 0xff;         // Head
   \   18FC  14                DEC     A
   \   18FD  900200            MOV     DPTR,#Sbuf+16
   \   1900  F0                MOVX    @DPTR,A
    859                                      Sbuf[15]= 0xff;
   \   1901  9001FF            MOV     DPTR,#Sbuf+15
   \   1904  F0                MOVX    @DPTR,A
    860                                      Sbuf[14]= 'T';
   \   1905  7454              MOV     A,#84
   \   1907  9001FE            MOV     DPTR,#Sbuf+14
   \   190A  F0                MOVX    @DPTR,A
    861                                      Sbuf[13]= 0;
   \   190B  E4                CLR     A
   \   190C  9001FD            MOV     DPTR,#Sbuf+13
   \   190F  F0                MOVX    @DPTR,A
    862                                      Sbuf[12]= 0x01;         // Sensor Code
   \   1910  04                INC     A
   \   1911  9001FC            MOV     DPTR,#Sbuf+12
   \   1914  F0                MOVX    @DPTR,A
    863                                      Sbuf[11]= ID+1;         // Sensor ID
   \   1915  900256            MOV     DPTR,#ID
   \   1918  E0                MOVX    A,@DPTR
   \   1919  04                INC     A
   \   191A  9001FB            MOV     DPTR,#Sbuf+11
   \   191D  F0                MOVX    @DPTR,A
    864                                      Sbuf[10]= WsTen >> 8;
   \   191E  900168            MOV     DPTR,#WsTen
   \   1921  E0                MOVX    A,@DPTR
   \   1922  FD                MOV     R5,A
   \   1923  A3                INC     DPTR
   \   1924  E0                MOVX    A,@DPTR
   \   1925  ED                MOV     A,R5
   \   1926  7D00              MOV     R5,#0
   \   1928  9001FA            MOV     DPTR,#Sbuf+10
   \   192B  F0                MOVX    @DPTR,A
    865                                      Sbuf[9] = WsTen;
   \   192C  900169            MOV     DPTR,#WsTen+1
   \   192F  E0                MOVX    A,@DPTR
   \   1930  9001F9            MOV     DPTR,#Sbuf+9
   \   1933  F0                MOVX    @DPTR,A
    866                                      Sbuf[8] = 0;
   \   1934  ED                MOV     A,R5
   \   1935  9001F8            MOV     DPTR,#Sbuf+8
   \   1938  F0                MOVX    @DPTR,A
    867                                      Sbuf[7] = 0;
   \   1939  9001F7            MOV     DPTR,#Sbuf+7
   \   193C  F0                MOVX    @DPTR,A
    868                                      Sbuf[6] = 0;
   \   193D  9001F6            MOV     DPTR,#Sbuf+6
   \   1940  F0                MOVX    @DPTR,A
    869                                      Sbuf[5] = 0;
   \   1941  9001F5            MOV     DPTR,#Sbuf+5
   \   1944  F0                MOVX    @DPTR,A
    870                                      if(Fout == 1)
   \   1945  300E18            JNB     Fout,?0290
   \   1948            ?0289:
    871                                      {
    872                                          Sbuf[4]=WsGmax >> 8;
   \   1948  900170            MOV     DPTR,#WsGmax
   \   194B  E0                MOVX    A,@DPTR
   \   194C  FD                MOV     R5,A
   \   194D  A3                INC     DPTR
   \   194E  E0                MOVX    A,@DPTR
   \   194F  ED                MOV     A,R5
   \   1950  7D00              MOV     R5,#0
   \   1952  9001F4            MOV     DPTR,#Sbuf+4
   \   1955  F0                MOVX    @DPTR,A
    873                                          Sbuf[3]=WsGmax;
   \   1956  900171            MOV     DPTR,#WsGmax+1
   \   1959  E0                MOVX    A,@DPTR
   \   195A  9001F3            MOV     DPTR,#Sbuf+3
   \   195D  F0                MOVX    @DPTR,A
    874                                      }
    875                                      else
   \   195E  8016              SJMP    ?0291
   \   1960            ?0290:
    876                                      {
    877                                          Sbuf[4]=WsTmax >> 8;
   \   1960  900178            MOV     DPTR,#WsTmax
   \   1963  E0                MOVX    A,@DPTR
   \   1964  FD                MOV     R5,A
   \   1965  A3                INC     DPTR
   \   1966  E0                MOVX    A,@DPTR
   \   1967  ED                MOV     A,R5
   \   1968  7D00              MOV     R5,#0
   \   196A  9001F4            MOV     DPTR,#Sbuf+4
   \   196D  F0                MOVX    @DPTR,A
    878                                          Sbuf[3]=WsTmax;
   \   196E  900179            MOV     DPTR,#WsTmax+1
   \   1971  E0                MOVX    A,@DPTR
   \   1972  9001F3            MOV     DPTR,#Sbuf+3
   \   1975  F0                MOVX    @DPTR,A
   \   1976            ?0291:
    879                                      }
    880                                      Sbuf[2] = 0;
   \   1976  ED                MOV     A,R5
   \   1977  9001F2            MOV     DPTR,#Sbuf+2
   \   197A  F0                MOVX    @DPTR,A
    881                                      for(j=14;j != 2;j--)
   \   197B  7800              MOV     R0,#$LOCBI SCON_int+1
   \   197D  760E              MOV     @R0,#14
   \   197F            ?0293:
   \   197F  7800              MOV     R0,#$LOCBI SCON_int+1
   \   1981  E6                MOV     A,@R0
   \   1982  6402              XRL     A,#2
   \   1984  6015              JZ      ?0292
   \   1986            ?0294:
    882                                          Sbuf[2] ^= Sbuf[j];
   \   1986  E6                MOV     A,@R0
   \   1987  24F0              ADD     A,#LOW(Sbuf)
   \   1989  F582              MOV     DPL,A
   \   198B  E4                CLR     A
   \   198C  3401              ADDC    A,#HIGH(Sbuf)
   \   198E  F583              MOV     DPH,A
   \   1990  E0                MOVX    A,@DPTR
   \   1991  9001F2            MOV     DPTR,#Sbuf+2
   \   1994  FC                MOV     R4,A
   \   1995  E0                MOVX    A,@DPTR
   \   1996  6C                XRL     A,R4
   \   1997  F0                MOVX    @DPTR,A
   \   1998  16                DEC     @R0
   \   1999  80E4              SJMP    ?0293
   \   199B            ?0292:
    883                                      Sbuf[1] = 0xff;
   \   199B  74FF              MOV     A,#255
   \   199D  9001F1            MOV     DPTR,#Sbuf+1
   \   19A0  F0                MOVX    @DPTR,A
    884                                      Sbuf[0] = 0xfe;
   \   19A1  14                DEC     A
   \   19A2  9001F0            MOV     DPTR,#Sbuf
   \   19A5  F0                MOVX    @DPTR,A
    885                                      Spoint=16;
   \   19A6  900254            MOV     DPTR,#Spoint
   \   19A9  E4                CLR     A
   \   19AA  F0                MOVX    @DPTR,A
   \   19AB  A3                INC     DPTR
   \   19AC  7410              MOV     A,#16
   \   19AE  F0                MOVX    @DPTR,A
    886                                      Comon=1;
   \   19AF  D203              SETB    Comon
    887                                      SBUF=Sbuf[16];
   \   19B1  900200            MOV     DPTR,#Sbuf+16
   \   19B4  E0                MOVX    A,@DPTR
   \   19B5  F599              MOV     SBUF,A
    888                                      break;
   \   19B7  021AB1            LJMP    ?0274
   \   19BA            ?0296:
   \   19BA  B45202            CJNE    A,#82,$+5
   \   19BD  8003              SJMP    $+5
   \   19BF  021A6B            LJMP    ?0301
    889                                  case 'R':
    890                                      Rpoint=0;
   \   19C2  9001EE            MOV     DPTR,#Rpoint
   \   19C5  E4                CLR     A
   \   19C6  F0                MOVX    @DPTR,A
   \   19C7  A3                INC     DPTR
   \   19C8  F0                MOVX    @DPTR,A
    891                                      Sbuf[16]= 0xff;         // Head
   \   19C9  14                DEC     A
   \   19CA  900200            MOV     DPTR,#Sbuf+16
   \   19CD  F0                MOVX    @DPTR,A
    892                                      Sbuf[15]= 0xff;
   \   19CE  9001FF            MOV     DPTR,#Sbuf+15
   \   19D1  F0                MOVX    @DPTR,A
    893                                                                  Sbuf[14]= 'R';
   \   19D2  7452              MOV     A,#82
   \   19D4  9001FE            MOV     DPTR,#Sbuf+14
   \   19D7  F0                MOVX    @DPTR,A
    894                                                                  // Sbuf[13]= Wssta;
    895                                                                  Sbuf[13]= 0;
   \   19D8  E4                CLR     A
   \   19D9  9001FD            MOV     DPTR,#Sbuf+13
   \   19DC  F0                MOVX    @DPTR,A
    896                                      Sbuf[12]= 0x01;         // Sensor Code
   \   19DD  04                INC     A
   \   19DE  9001FC            MOV     DPTR,#Sbuf+12
   \   19E1  F0                MOVX    @DPTR,A
    897                                      Sbuf[11]= ID+1;         // Sensor ID
   \   19E2  900256            MOV     DPTR,#ID
   \   19E5  E0                MOVX    A,@DPTR
   \   19E6  04                INC     A
   \   19E7  9001FB            MOV     DPTR,#Sbuf+11
   \   19EA  F0                MOVX    @DPTR,A
    898                                      Sbuf[10]= Wsreal >> 8;
   \   19EB  90000F            MOV     DPTR,#Wsreal
   \   19EE  E0                MOVX    A,@DPTR
   \   19EF  FD                MOV     R5,A
   \   19F0  A3                INC     DPTR
   \   19F1  E0                MOVX    A,@DPTR
   \   19F2  ED                MOV     A,R5
   \   19F3  7D00              MOV     R5,#0
   \   19F5  9001FA            MOV     DPTR,#Sbuf+10
   \   19F8  F0                MOVX    @DPTR,A
    899                                      Sbuf[9] = Wsreal;
   \   19F9  900010            MOV     DPTR,#Wsreal+1
   \   19FC  E0                MOVX    A,@DPTR
   \   19FD  9001F9            MOV     DPTR,#Sbuf+9
   \   1A00  F0                MOVX    @DPTR,A
    900                                      Sbuf[8] = 0;
   \   1A01  ED                MOV     A,R5
   \   1A02  9001F8            MOV     DPTR,#Sbuf+8
   \   1A05  F0                MOVX    @DPTR,A
    901                                      Sbuf[7] = 0;
   \   1A06  9001F7            MOV     DPTR,#Sbuf+7
   \   1A09  F0                MOVX    @DPTR,A
    902                                      Sbuf[6] = 0;
   \   1A0A  9001F6            MOV     DPTR,#Sbuf+6
   \   1A0D  F0                MOVX    @DPTR,A
    903                                      Sbuf[5] = 0;
   \   1A0E  9001F5            MOV     DPTR,#Sbuf+5
   \   1A11  F0                MOVX    @DPTR,A
    904                                      Sbuf[4] = WsGmax >> 8;
   \   1A12  900170            MOV     DPTR,#WsGmax
   \   1A15  E0                MOVX    A,@DPTR
   \   1A16  FD                MOV     R5,A
   \   1A17  A3                INC     DPTR
   \   1A18  E0                MOVX    A,@DPTR
   \   1A19  ED                MOV     A,R5
   \   1A1A  7D00              MOV     R5,#0
   \   1A1C  9001F4            MOV     DPTR,#Sbuf+4
   \   1A1F  F0                MOVX    @DPTR,A
    905                                      Sbuf[3] = WsGmax;
   \   1A20  900171            MOV     DPTR,#WsGmax+1
   \   1A23  E0                MOVX    A,@DPTR
   \   1A24  9001F3            MOV     DPTR,#Sbuf+3
   \   1A27  F0                MOVX    @DPTR,A
    906                                      Sbuf[2] = 0;
   \   1A28  ED                MOV     A,R5
   \   1A29  9001F2            MOV     DPTR,#Sbuf+2
   \   1A2C  F0                MOVX    @DPTR,A
    907                                      for(j=14;j != 2;j--)
   \   1A2D  7800              MOV     R0,#$LOCBI SCON_int+1
   \   1A2F  760E              MOV     @R0,#14
   \   1A31            ?0298:
   \   1A31  7800              MOV     R0,#$LOCBI SCON_int+1
   \   1A33  E6                MOV     A,@R0
   \   1A34  6402              XRL     A,#2
   \   1A36  6015              JZ      ?0297
   \   1A38            ?0299:
    908                                          Sbuf[2] ^= Sbuf[j];
   \   1A38  E6                MOV     A,@R0
   \   1A39  24F0              ADD     A,#LOW(Sbuf)
   \   1A3B  F582              MOV     DPL,A
   \   1A3D  E4                CLR     A
   \   1A3E  3401              ADDC    A,#HIGH(Sbuf)
   \   1A40  F583              MOV     DPH,A
   \   1A42  E0                MOVX    A,@DPTR
   \   1A43  9001F2            MOV     DPTR,#Sbuf+2
   \   1A46  FC                MOV     R4,A
   \   1A47  E0                MOVX    A,@DPTR
   \   1A48  6C                XRL     A,R4
   \   1A49  F0                MOVX    @DPTR,A
   \   1A4A  16                DEC     @R0
   \   1A4B  80E4              SJMP    ?0298
   \   1A4D            ?0297:
    909                                      Sbuf[1] = 0xff;
   \   1A4D  74FF              MOV     A,#255
   \   1A4F  9001F1            MOV     DPTR,#Sbuf+1
   \   1A52  F0                MOVX    @DPTR,A
    910                                      Sbuf[0] = 0xfe;
   \   1A53  14                DEC     A
   \   1A54  9001F0            MOV     DPTR,#Sbuf
   \   1A57  F0                MOVX    @DPTR,A
    911                                      Spoint=16;
   \   1A58  900254            MOV     DPTR,#Spoint
   \   1A5B  E4                CLR     A
   \   1A5C  F0                MOVX    @DPTR,A
   \   1A5D  A3                INC     DPTR
   \   1A5E  7410              MOV     A,#16
   \   1A60  F0                MOVX    @DPTR,A
    912                                      Comon=1;
   \   1A61  D203              SETB    Comon
    913                                      SBUF=Sbuf[16];
   \   1A63  900200            MOV     DPTR,#Sbuf+16
   \   1A66  E0                MOVX    A,@DPTR
   \   1A67  F599              MOV     SBUF,A
    914                                      break;
   \   1A69  8046              SJMP    ?0274
   \   1A6B            ?0301:
   \   1A6B  B44043            CJNE    A,#64,?0274
    915                                  case '@':
    916                                      WsGmax=Rbuf[Rpoint-5] << 8 | Rbuf[Rpoint-4];
   \   1A6E  9001EE            MOV     DPTR,#Rpoint
   \   1A71  E0                MOVX    A,@DPTR
   \   1A72  FF                MOV     R7,A
   \   1A73  A3                INC     DPTR
   \   1A74  E0                MOVX    A,@DPTR
   \   1A75  FE                MOV     R6,A
   \   1A76  24FB              ADD     A,#251
   \   1A78  248A              ADD     A,#LOW(Rbuf)
   \   1A7A  F582              MOV     DPL,A
   \   1A7C  E4                CLR     A
   \   1A7D  3401              ADDC    A,#HIGH(Rbuf)
   \   1A7F  F583              MOV     DPH,A
   \   1A81  E0                MOVX    A,@DPTR
   \   1A82  7D00              MOV     R5,#0
   \   1A84  7C00              MOV     R4,#0
   \   1A86  CE                XCH     A,R6
   \   1A87  FA                MOV     R2,A
   \   1A88  CE                XCH     A,R6
   \   1A89  FD                MOV     R5,A
   \   1A8A  EA                MOV     A,R2
   \   1A8B  24FC              ADD     A,#252
   \   1A8D  248A              ADD     A,#LOW(Rbuf)
   \   1A8F  F582              MOV     DPL,A
   \   1A91  E4                CLR     A
   \   1A92  3401              ADDC    A,#HIGH(Rbuf)
   \   1A94  F583              MOV     DPH,A
   \   1A96  E0                MOVX    A,@DPTR
   \   1A97  7B00              MOV     R3,#0
   \   1A99  FA                MOV     R2,A
   \   1A9A  EC                MOV     A,R4
   \   1A9B  4A                ORL     A,R2
   \   1A9C  FC                MOV     R4,A
   \   1A9D  ED                MOV     A,R5
   \   1A9E  900170            MOV     DPTR,#WsGmax
   \   1AA1  F0                MOVX    @DPTR,A
   \   1AA2  A3                INC     DPTR
   \   1AA3  CC                XCH     A,R4
   \   1AA4  F0                MOVX    @DPTR,A
   \   1AA5  CC                XCH     A,R4
    917                                      Rpoint=0;
   \   1AA6  EB                MOV     A,R3
   \   1AA7  FE                MOV     R6,A
   \   1AA8  FF                MOV     R7,A
   \   1AA9  9001EE            MOV     DPTR,#Rpoint
   \   1AAC  F0                MOVX    @DPTR,A
   \   1AAD  A3                INC     DPTR
   \   1AAE  F0                MOVX    @DPTR,A
    918                                      break;
   \   1AAF  8000              SJMP    ?0274
   \   1AB1            ?0274:
   \   1AB1  8038              SJMP    ?0302
   \   1AB3            ?0273:
    919                              }
    920                          }
    921          
    922                          else if(Rbuf[Rpoint-9] == 'I')
   \   1AB3  9001EF            MOV     DPTR,#Rpoint+1
   \   1AB6  E0                MOVX    A,@DPTR
   \   1AB7  24F7              ADD     A,#247
   \   1AB9  248A              ADD     A,#LOW(Rbuf)
   \   1ABB  F582              MOV     DPL,A
   \   1ABD  E4                CLR     A
   \   1ABE  3401              ADDC    A,#HIGH(Rbuf)
   \   1AC0  F583              MOV     DPH,A
   \   1AC2  E0                MOVX    A,@DPTR
   \   1AC3  B44925            CJNE    A,#73,?0304
   \   1AC6            ?0303:
    923                          {
    924                              Rpoint=0;
   \   1AC6  9001EE            MOV     DPTR,#Rpoint
   \   1AC9  E4                CLR     A
   \   1ACA  F0                MOVX    @DPTR,A
   \   1ACB  A3                INC     DPTR
   \   1ACC  F0                MOVX    @DPTR,A
    925                              WdGmax=WdSec;
   \   1ACD  900048            MOV     DPTR,#WdSec
   \   1AD0  E0                MOVX    A,@DPTR
   \   1AD1  FD                MOV     R5,A
   \   1AD2  A3                INC     DPTR
   \   1AD3  E0                MOVX    A,@DPTR
   \   1AD4  90016E            MOV     DPTR,#WdGmax
   \   1AD7  CD                XCH     A,R5
   \   1AD8  F0                MOVX    @DPTR,A
   \   1AD9  A3                INC     DPTR
   \   1ADA  CD                XCH     A,R5
   \   1ADB  F0                MOVX    @DPTR,A
    926                              WsGmax=WsSec;
   \   1ADC  9000C2            MOV     DPTR,#WsSec
   \   1ADF  E0                MOVX    A,@DPTR
   \   1AE0  FD                MOV     R5,A
   \   1AE1  A3                INC     DPTR
   \   1AE2  E0                MOVX    A,@DPTR
   \   1AE3  900170            MOV     DPTR,#WsGmax
   \   1AE6  CD                XCH     A,R5
   \   1AE7  F0                MOVX    @DPTR,A
   \   1AE8  A3                INC     DPTR
   \   1AE9  CD                XCH     A,R5
   \   1AEA  F0                MOVX    @DPTR,A
   \   1AEB            ?0304:
   \   1AEB            ?0302:
   \   1AEB            ?0241:
    927                          }
    928                      }
    929                      Rpoint=0;
   \   1AEB  9001EE            MOV     DPTR,#Rpoint
   \   1AEE  E4                CLR     A
   \   1AEF  F0                MOVX    @DPTR,A
   \   1AF0  A3                INC     DPTR
   \   1AF1  F0                MOVX    @DPTR,A
   \   1AF2            ?0233:
    930                  }
    931                  if(Rpoint > 90)
   \   1AF2  D3                SETB    C
   \   1AF3  9001EF            MOV     DPTR,#Rpoint+1
   \   1AF6  E0                MOVX    A,@DPTR
   \   1AF7  945A              SUBB    A,#90
   \   1AF9  9001EE            MOV     DPTR,#Rpoint
   \   1AFC  E0                MOVX    A,@DPTR
   \   1AFD  9400              SUBB    A,#0
   \   1AFF  4004              JC      ?0306
   \   1B01            ?0305:
    932                      Rpoint=0;
   \   1B01  E4                CLR     A
   \   1B02  F0                MOVX    @DPTR,A
   \   1B03  A3                INC     DPTR
   \   1B04  F0                MOVX    @DPTR,A
   \   1B05            ?0306:
   \   1B05            ?0231:
    933              }
    934          
    935              if(TI == 1)
   \   1B05  30993B            JNB     SCON.1,?0308
   \   1B08            ?0307:
    936              {
    937                  TI=0;
   \   1B08  C299              CLR     SCON.1
    938                  if(Comon == 1)
   \   1B0A  300336            JNB     Comon,?0310
   \   1B0D            ?0309:
    939                  {
    940                      if( Spoint-- != 0 )
   \   1B0D  900254            MOV     DPTR,#Spoint
   \   1B10  E0                MOVX    A,@DPTR
   \   1B11  FD                MOV     R5,A
   \   1B12  A3                INC     DPTR
   \   1B13  E0                MOVX    A,@DPTR
   \   1B14  FC                MOV     R4,A
   \   1B15  E0                MOVX    A,@DPTR
   \   1B16  24FF              ADD     A,#255
   \   1B18  F0                MOVX    @DPTR,A
   \   1B19  900254            MOV     DPTR,#Spoint
   \   1B1C  E0                MOVX    A,@DPTR
   \   1B1D  34FF              ADDC    A,#255
   \   1B1F  F0                MOVX    @DPTR,A
   \   1B20  EC                MOV     A,R4
   \   1B21  4D                ORL     A,R5
   \   1B22  601D              JZ      ?0312
   \   1B24            ?0311:
    941                      {
    942                          SBUF=Sbuf[Spoint];
   \   1B24  A3                INC     DPTR
   \   1B25  E0                MOVX    A,@DPTR
   \   1B26  24F0              ADD     A,#LOW(Sbuf)
   \   1B28  F582              MOV     DPL,A
   \   1B2A  E4                CLR     A
   \   1B2B  3401              ADDC    A,#HIGH(Sbuf)
   \   1B2D  F583              MOV     DPH,A
   \   1B2F  E0                MOVX    A,@DPTR
   \   1B30  F599              MOV     SBUF,A
    943                          Transm=1;
   \   1B32  D205              SETB    Transm
    944                          RedL=1;
   \   1B34  D297              SETB    P1.7
    945                                          Redb=LightL;
   \   1B36  900259            MOV     DPTR,#Redb
   \   1B39  7408              MOV     A,#8
   \   1B3B  F0                MOVX    @DPTR,A
   \   1B3C  A3                INC     DPTR
   \   1B3D  E4                CLR     A
   \   1B3E  F0                MOVX    @DPTR,A
    946                      }
    947                      else
   \   1B3F  8002              SJMP    ?0313
   \   1B41            ?0312:
    948                          Comon=0;
   \   1B41  C203              CLR     Comon
   \   1B43            ?0313:
   \   1B43            ?0310:
   \   1B43            ?0308:
    949                  }
    950              }
    951          }
   \   1B43  D0E0              POP     ACC
   \   1B45  FF                MOV     R7,A
   \   1B46  D0E0              POP     ACC
   \   1B48  FE                MOV     R6,A
   \   1B49  D0E0              POP     ACC
   \   1B4B  FD                MOV     R5,A
   \   1B4C  D0E0              POP     ACC
   \   1B4E  FC                MOV     R4,A
   \   1B4F  D0E0              POP     ACC
   \   1B51  FB                MOV     R3,A
   \   1B52  D0E0              POP     ACC
   \   1B54  FA                MOV     R2,A
   \   1B55  D0E0              POP     ACC
   \   1B57  F9                MOV     R1,A
   \   1B58  D0E0              POP     ACC
   \   1B5A  F8                MOV     R0,A
   \   1B5B  D0D0              POP     PSW
   \   1B5D  D083              POP     DPH
   \   1B5F  D082              POP     DPL
   \   1B61  D0E0              POP     ACC
   \   1B63  32                RETI
    952          
    953          unsigned int Ws_calc(unsigned int Wssum)
    954          {
   \   1B64            Ws_calc:
    955              unsigned int i;
    956          
    957              if(unit) {
   \   1B64  7800              MOV     R0,#$LOCBI Ws_calc+2
   \   1B66  ED                MOV     A,R5
   \   1B67  F6                MOV     @R0,A
   \   1B68  08                INC     R0
   \   1B69  EC                MOV     A,R4
   \   1B6A  F6                MOV     @R0,A
   \   1B6B  30000C            JNB     unit,?0315
   \   1B6E            ?0314:
    958                  i=Ws_calc1(Wssum);
   \   1B6E  FC                MOV     R4,A
   \   1B6F  120000            LCALL   $REFFN Ws_calc1
    959                  return i;
   \   1B72  7800              MOV     R0,#$LOCBI Ws_calc
   \   1B74  ED                MOV     A,R5
   \   1B75  F6                MOV     @R0,A
   \   1B76  08                INC     R0
   \   1B77  EC                MOV     A,R4
   \   1B78  F6                MOV     @R0,A
    960              }
   \   1B79  22                RET
   \   1B7A            ?0315:
    961              else {
    962                  i=Ws_calc2(Wssum);
   \   1B7A  FC                MOV     R4,A
   \   1B7B  120000            LCALL   $REFFN Ws_calc2
    963                  return i;
   \   1B7E  7800              MOV     R0,#$LOCBI Ws_calc
   \   1B80  ED                MOV     A,R5
   \   1B81  F6                MOV     @R0,A
   \   1B82  08                INC     R0
   \   1B83  EC                MOV     A,R4
   \   1B84  F6                MOV     @R0,A
    964              }
   \   1B85            ?0316:
   \   1B85  22                RET
    965          }
    966          
    967          unsigned int Ws_calc1(unsigned int Wssum)    // m/s
    968          {
   \   1B86            Ws_calc1:
    969          
    970                  unsigned int newv,oldv,i,flag;
    971                  float value;
    972                                                          /* Calculation W_S  */
    973                  if(Wssum == 0)   Wssum = 0;
   \   1B86  7800              MOV     R0,#$LOCBI Ws_calc1+12
   \   1B88  ED                MOV     A,R5
   \   1B89  F6                MOV     @R0,A
   \   1B8A  08                INC     R0
   \   1B8B  EC                MOV     A,R4
   \   1B8C  F6                MOV     @R0,A
   \   1B8D  4D                ORL     A,R5
   \   1B8E  700C              JNZ     ?0318
   \   1B90            ?0317:
   \   1B90  E4                CLR     A
   \   1B91  FC                MOV     R4,A
   \   1B92  FD                MOV     R5,A
   \   1B93  18                DEC     R0
   \   1B94  ED                MOV     A,R5
   \   1B95  F6                MOV     @R0,A
   \   1B96  08                INC     R0
   \   1B97  EC                MOV     A,R4
   \   1B98  F6                MOV     @R0,A
   \   1B99  021E6C            LJMP    ?0319
   \   1B9C            ?0318:
    974                  else if(Wssum <= Aspeed[0])
   \   1B9C  9002AB            MOV     DPTR,#Aspeed+1
   \   1B9F  E4                CLR     A
   \   1BA0  93                MOVC    A,@A+DPTR
   \   1BA1  C3                CLR     C
   \   1BA2  9C                SUBB    A,R4
   \   1BA3  9002AA            MOV     DPTR,#Aspeed
   \   1BA6  E4                CLR     A
   \   1BA7  93                MOVC    A,@A+DPTR
   \   1BA8  9D                SUBB    A,R5
   \   1BA9  404E              JC      ?0321
   \   1BAB            ?0320:
    975                  {
    976                          value=3./(float)Aspeed[0];
   \   1BAB  E4                CLR     A
   \   1BAC  93                MOVC    A,@A+DPTR
   \   1BAD  FD                MOV     R5,A
   \   1BAE  7401              MOV     A,#1
   \   1BB0  93                MOVC    A,@A+DPTR
   \   1BB1  FC                MOV     R4,A
   \   1BB2  ED                MOV     A,R5
   \   1BB3  E4                CLR     A
   \   1BB4  FE                MOV     R6,A
   \   1BB5  FF                MOV     R7,A
   \   1BB6  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   1BB9  E4                CLR     A
   \   1BBA  F8                MOV     R0,A
   \   1BBB  F9                MOV     R1,A
   \   1BBC  7440              MOV     A,#64
   \   1BBE  FA                MOV     R2,A
   \   1BBF  FB                MOV     R3,A
   \   1BC0  120000            LCALL   ?F_DIV_R_L02
    977                          Wssum = value*Wssum*10;
   \   1BC3  7800              MOV     R0,#$LOCBI Ws_calc1+12
   \   1BC5  E6                MOV     A,@R0
   \   1BC6  FB                MOV     R3,A
   \   1BC7  08                INC     R0
   \   1BC8  E6                MOV     A,@R0
   \   1BC9  F8                MOV     R0,A
   \   1BCA  CB                XCH     A,R3
   \   1BCB  F9                MOV     R1,A
   \   1BCC  CB                XCH     A,R3
   \   1BCD  EB                MOV     A,R3
   \   1BCE  E4                CLR     A
   \   1BCF  FA                MOV     R2,A
   \   1BD0  FB                MOV     R3,A
   \   1BD1  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1BD4  C8                XCH     A,R0
   \   1BD5  C0E0              PUSH    ACC
   \   1BD7  7800              MOV     R0,#$LOCBI Ws_calc1+8
   \   1BD9  120000            LCALL   ?STO_R4567_IR0_L20
   \   1BDC  D0E0              POP     ACC
   \   1BDE  C8                XCH     A,R0
   \   1BDF  120000            LCALL   ?F_MUL_L02
   \   1BE2  E4                CLR     A
   \   1BE3  F8                MOV     R0,A
   \   1BE4  F9                MOV     R1,A
   \   1BE5  7A20              MOV     R2,#32
   \   1BE7  7B41              MOV     R3,#65
   \   1BE9  120000            LCALL   ?F_MUL_L02
   \   1BEC  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1BEF  7800              MOV     R0,#$LOCBI Ws_calc1+12
   \   1BF1  ED                MOV     A,R5
   \   1BF2  F6                MOV     @R0,A
   \   1BF3  08                INC     R0
   \   1BF4  EC                MOV     A,R4
   \   1BF5  F6                MOV     @R0,A
   \   1BF6  021E6C            LJMP    ?0322
   \   1BF9            ?0321:
    978                  }
    979                  else if(Wssum > Aspeed[0] && Wssum <= Aspeed[1])
   \   1BF9  A3                INC     DPTR
   \   1BFA  E4                CLR     A
   \   1BFB  93                MOVC    A,@A+DPTR
   \   1BFC  C3                CLR     C
   \   1BFD  9C                SUBB    A,R4
   \   1BFE  9002AA            MOV     DPTR,#Aspeed
   \   1C01  E4                CLR     A
   \   1C02  93                MOVC    A,@A+DPTR
   \   1C03  9D                SUBB    A,R5
   \   1C04  4003              JC      $+5
   \   1C06  021CE3            LJMP    ?0324
   \   1C09  9002AD            MOV     DPTR,#Aspeed+3
   \   1C0C  E4                CLR     A
   \   1C0D  93                MOVC    A,@A+DPTR
   \   1C0E  C3                CLR     C
   \   1C0F  9C                SUBB    A,R4
   \   1C10  9002AC            MOV     DPTR,#Aspeed+2
   \   1C13  E4                CLR     A
   \   1C14  93                MOVC    A,@A+DPTR
   \   1C15  9D                SUBB    A,R5
   \   1C16  5003              JNC     $+5
   \   1C18  021CE3            LJMP    ?0324
   \   1C1B            ?0326:
   \   1C1B            ?0325:
   \   1C1B            ?0323:
    980                  {
    981                          newv=Aspeed[1];
   \   1C1B  E4                CLR     A
   \   1C1C  93                MOVC    A,@A+DPTR
   \   1C1D  FD                MOV     R5,A
   \   1C1E  7401              MOV     A,#1
   \   1C20  93                MOVC    A,@A+DPTR
    982                          oldv=Aspeed[0];
   \   1C21  FC                MOV     R4,A
   \   1C22  9002AA            MOV     DPTR,#Aspeed
   \   1C25  E4                CLR     A
   \   1C26  93                MOVC    A,@A+DPTR
   \   1C27  FF                MOV     R7,A
   \   1C28  7401              MOV     A,#1
   \   1C2A  93                MOVC    A,@A+DPTR
    983                          value=2./(float)(newv-oldv);
   \   1C2B  7800              MOV     R0,#$LOCBI Ws_calc1
   \   1C2D  CD                XCH     A,R5
   \   1C2E  F6                MOV     @R0,A
   \   1C2F  CD                XCH     A,R5
   \   1C30  08                INC     R0
   \   1C31  CC                XCH     A,R4
   \   1C32  F6                MOV     @R0,A
   \   1C33  CC                XCH     A,R4
   \   1C34  08                INC     R0
   \   1C35  CF                XCH     A,R7
   \   1C36  F6                MOV     @R0,A
   \   1C37  CF                XCH     A,R7
   \   1C38  08                INC     R0
   \   1C39  F6                MOV     @R0,A
   \   1C3A  FE                MOV     R6,A
   \   1C3B  C3                CLR     C
   \   1C3C  EC                MOV     A,R4
   \   1C3D  9E                SUBB    A,R6
   \   1C3E  FC                MOV     R4,A
   \   1C3F  ED                MOV     A,R5
   \   1C40  9F                SUBB    A,R7
   \   1C41  FD                MOV     R5,A
   \   1C42  EC                MOV     A,R4
   \   1C43  F8                MOV     R0,A
   \   1C44  CD                XCH     A,R5
   \   1C45  F9                MOV     R1,A
   \   1C46  CD                XCH     A,R5
   \   1C47  ED                MOV     A,R5
   \   1C48  E4                CLR     A
   \   1C49  FA                MOV     R2,A
   \   1C4A  FB                MOV     R3,A
   \   1C4B  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1C4E  E4                CLR     A
   \   1C4F  FC                MOV     R4,A
   \   1C50  FD                MOV     R5,A
   \   1C51  FE                MOV     R6,A
   \   1C52  7F40              MOV     R7,#64
   \   1C54  120000            LCALL   ?F_DIV_L02
    984                          Wssum = ((value*Wssum)-(value*oldv)+3)*10.;
   \   1C57  7800              MOV     R0,#$LOCBI Ws_calc1+12
   \   1C59  E6                MOV     A,@R0
   \   1C5A  FB                MOV     R3,A
   \   1C5B  08                INC     R0
   \   1C5C  E6                MOV     A,@R0
   \   1C5D  F8                MOV     R0,A
   \   1C5E  CB                XCH     A,R3
   \   1C5F  F9                MOV     R1,A
   \   1C60  CB                XCH     A,R3
   \   1C61  EB                MOV     A,R3
   \   1C62  E4                CLR     A
   \   1C63  FA                MOV     R2,A
   \   1C64  FB                MOV     R3,A
   \   1C65  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1C68  C8                XCH     A,R0
   \   1C69  C0E0              PUSH    ACC
   \   1C6B  7800              MOV     R0,#$LOCBI Ws_calc1+8
   \   1C6D  120000            LCALL   ?STO_R4567_IR0_L20
   \   1C70  D0E0              POP     ACC
   \   1C72  C8                XCH     A,R0
   \   1C73  120000            LCALL   ?F_MUL_L02
   \   1C76  7800              MOV     R0,#$LOCBI Ws_calc1+2
   \   1C78  E6                MOV     A,@R0
   \   1C79  FB                MOV     R3,A
   \   1C7A  08                INC     R0
   \   1C7B  E6                MOV     A,@R0
   \   1C7C  F8                MOV     R0,A
   \   1C7D  CB                XCH     A,R3
   \   1C7E  F9                MOV     R1,A
   \   1C7F  CB                XCH     A,R3
   \   1C80  EB                MOV     A,R3
   \   1C81  E4                CLR     A
   \   1C82  FA                MOV     R2,A
   \   1C83  FB                MOV     R3,A
   \   1C84  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1C87  EF                MOV     A,R7
   \   1C88  C0E0              PUSH    ACC
   \   1C8A  EE                MOV     A,R6
   \   1C8B  C0E0              PUSH    ACC
   \   1C8D  ED                MOV     A,R5
   \   1C8E  C0E0              PUSH    ACC
   \   1C90  EC                MOV     A,R4
   \   1C91  C0E0              PUSH    ACC
   \   1C93  EB                MOV     A,R3
   \   1C94  C0E0              PUSH    ACC
   \   1C96  EA                MOV     A,R2
   \   1C97  C0E0              PUSH    ACC
   \   1C99  E9                MOV     A,R1
   \   1C9A  C0E0              PUSH    ACC
   \   1C9C  E8                MOV     A,R0
   \   1C9D  C0E0              PUSH    ACC
   \   1C9F  7800              MOV     R0,#$LOCBI Ws_calc1+8
   \   1CA1  120000            LCALL   ?LD_R4567_IR0_L20
   \   1CA4  D0E0              POP     ACC
   \   1CA6  F8                MOV     R0,A
   \   1CA7  D0E0              POP     ACC
   \   1CA9  F9                MOV     R1,A
   \   1CAA  D0E0              POP     ACC
   \   1CAC  FA                MOV     R2,A
   \   1CAD  D0E0              POP     ACC
   \   1CAF  FB                MOV     R3,A
   \   1CB0  120000            LCALL   ?F_MUL_L02
   \   1CB3  D0E0              POP     ACC
   \   1CB5  F8                MOV     R0,A
   \   1CB6  D0E0              POP     ACC
   \   1CB8  F9                MOV     R1,A
   \   1CB9  D0E0              POP     ACC
   \   1CBB  FA                MOV     R2,A
   \   1CBC  D0E0              POP     ACC
   \   1CBE  FB                MOV     R3,A
   \   1CBF  120000            LCALL   ?F_SUB_R_L02
   \   1CC2  E4                CLR     A
   \   1CC3  F8                MOV     R0,A
   \   1CC4  F9                MOV     R1,A
   \   1CC5  7440              MOV     A,#64
   \   1CC7  FA                MOV     R2,A
   \   1CC8  FB                MOV     R3,A
   \   1CC9  120000            LCALL   ?F_ADD_L02
   \   1CCC  E4                CLR     A
   \   1CCD  F8                MOV     R0,A
   \   1CCE  F9                MOV     R1,A
   \   1CCF  7A20              MOV     R2,#32
   \   1CD1  7B41              MOV     R3,#65
   \   1CD3  120000            LCALL   ?F_MUL_L02
   \   1CD6  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1CD9  7800              MOV     R0,#$LOCBI Ws_calc1+12
   \   1CDB  ED                MOV     A,R5
   \   1CDC  F6                MOV     @R0,A
   \   1CDD  08                INC     R0
   \   1CDE  EC                MOV     A,R4
   \   1CDF  F6                MOV     @R0,A
    985                  }
    986                  else
   \   1CE0  021E6C            LJMP    ?0327
   \   1CE3            ?0324:
    987                  {
    988                          oldv=Aspeed[1];
   \   1CE3  9002AC            MOV     DPTR,#Aspeed+2
   \   1CE6  E4                CLR     A
   \   1CE7  93                MOVC    A,@A+DPTR
   \   1CE8  FD                MOV     R5,A
   \   1CE9  7401              MOV     A,#1
   \   1CEB  93                MOVC    A,@A+DPTR
   \   1CEC  7800              MOV     R0,#$LOCBI Ws_calc1+2
   \   1CEE  CD                XCH     A,R5
   \   1CEF  F6                MOV     @R0,A
   \   1CF0  CD                XCH     A,R5
   \   1CF1  08                INC     R0
   \   1CF2  F6                MOV     @R0,A
    989                          flag=5.;
   \   1CF3  7800              MOV     R0,#$LOCBI Ws_calc1+6
   \   1CF5  E4                CLR     A
   \   1CF6  F6                MOV     @R0,A
   \   1CF7  08                INC     R0
   \   1CF8  7605              MOV     @R0,#5
    990                          for(i=2; i != 16; i++)
   \   1CFA  7800              MOV     R0,#$LOCBI Ws_calc1+4
   \   1CFC  F6                MOV     @R0,A
   \   1CFD  08                INC     R0
   \   1CFE  7602              MOV     @R0,#2
   \   1D00            ?0329:
   \   1D00  7800              MOV     R0,#$LOCBI Ws_calc1+5
   \   1D02  E6                MOV     A,@R0
   \   1D03  6410              XRL     A,#16
   \   1D05  7007              JNZ     ?0425
   \   1D07  18                DEC     R0
   \   1D08  E6                MOV     A,@R0
   \   1D09  7003              JNZ     $+5
   \   1D0B  021E6C            LJMP    ?0328
   \   1D0E            ?0425:
   \   1D0E            ?0330:
    991                          {
    992                                  flag += 5.;
   \   1D0E  7800              MOV     R0,#$LOCBI Ws_calc1+7
   \   1D10  E6                MOV     A,@R0
   \   1D11  2405              ADD     A,#5
   \   1D13  F6                MOV     @R0,A
   \   1D14  18                DEC     R0
   \   1D15  E6                MOV     A,@R0
   \   1D16  3400              ADDC    A,#0
   \   1D18  F6                MOV     @R0,A
    993                                  newv=Aspeed[i];
   \   1D19  18                DEC     R0
   \   1D1A  E6                MOV     A,@R0
   \   1D1B  25E0              ADD     A,ACC
   \   1D1D  9002AA            MOV     DPTR,#Aspeed
   \   1D20  FD                MOV     R5,A
   \   1D21  93                MOVC    A,@A+DPTR
   \   1D22  CD                XCH     A,R5
   \   1D23  04                INC     A
   \   1D24  93                MOVC    A,@A+DPTR
    994                                  if( Wssum < newv && Wssum >= oldv)
   \   1D25  7800              MOV     R0,#$LOCBI Ws_calc1
   \   1D27  CD                XCH     A,R5
   \   1D28  F6                MOV     @R0,A
   \   1D29  CD                XCH     A,R5
   \   1D2A  08                INC     R0
   \   1D2B  F6                MOV     @R0,A
   \   1D2C  7800              MOV     R0,#$LOCBI Ws_calc1+13
   \   1D2E  D3                SETB    C
   \   1D2F  96                SUBB    A,@R0
   \   1D30  FC                MOV     R4,A
   \   1D31  ED                MOV     A,R5
   \   1D32  18                DEC     R0
   \   1D33  96                SUBB    A,@R0
   \   1D34  5003              JNC     $+5
   \   1D36  021E55            LJMP    ?0333
   \   1D39  E6                MOV     A,@R0
   \   1D3A  FD                MOV     R5,A
   \   1D3B  08                INC     R0
   \   1D3C  E6                MOV     A,@R0
   \   1D3D  7800              MOV     R0,#$LOCBI Ws_calc1+3
   \   1D3F  C3                CLR     C
   \   1D40  96                SUBB    A,@R0
   \   1D41  FC                MOV     R4,A
   \   1D42  ED                MOV     A,R5
   \   1D43  18                DEC     R0
   \   1D44  96                SUBB    A,@R0
   \   1D45  5003              JNC     $+5
   \   1D47  021E55            LJMP    ?0333
   \   1D4A            ?0335:
   \   1D4A            ?0334:
   \   1D4A            ?0332:
    995                                  {
    996                                          value=(float)(flag-(flag-5.))/(newv-oldv);
   \   1D4A  7800              MOV     R0,#$LOCBI Ws_calc1+6
   \   1D4C  E6                MOV     A,@R0
   \   1D4D  FF                MOV     R7,A
   \   1D4E  08                INC     R0
   \   1D4F  E6                MOV     A,@R0
   \   1D50  FE                MOV     R6,A
   \   1D51  FC                MOV     R4,A
   \   1D52  CF                XCH     A,R7
   \   1D53  FD                MOV     R5,A
   \   1D54  CF                XCH     A,R7
   \   1D55  EF                MOV     A,R7
   \   1D56  E4                CLR     A
   \   1D57  FE                MOV     R6,A
   \   1D58  FF                MOV     R7,A
   \   1D59  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   1D5C  E4                CLR     A
   \   1D5D  F8                MOV     R0,A
   \   1D5E  F9                MOV     R1,A
   \   1D5F  7AA0              MOV     R2,#160
   \   1D61  7BC0              MOV     R3,#192
   \   1D63  120000            LCALL   ?F_ADD_L02
   \   1D66  EE                MOV     A,R6
   \   1D67  4F                ORL     A,R7
   \   1D68  6004              JZ      $+6
   \   1D6A  EF                MOV     A,R7
   \   1D6B  6480              XRL     A,#128
   \   1D6D  FF                MOV     R7,A
   \   1D6E  7800              MOV     R0,#$LOCBI Ws_calc1+6
   \   1D70  E6                MOV     A,@R0
   \   1D71  FB                MOV     R3,A
   \   1D72  08                INC     R0
   \   1D73  E6                MOV     A,@R0
   \   1D74  F8                MOV     R0,A
   \   1D75  CB                XCH     A,R3
   \   1D76  F9                MOV     R1,A
   \   1D77  CB                XCH     A,R3
   \   1D78  EB                MOV     A,R3
   \   1D79  E4                CLR     A
   \   1D7A  FA                MOV     R2,A
   \   1D7B  FB                MOV     R3,A
   \   1D7C  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1D7F  120000            LCALL   ?F_ADD_L02
   \   1D82  C3                CLR     C
   \   1D83  7800              MOV     R0,#$LOCBI Ws_calc1+3
   \   1D85  7900              MOV     R1,#$LOCBI Ws_calc1+1
   \   1D87  E7                MOV     A,@R1
   \   1D88  96                SUBB    A,@R0
   \   1D89  FA                MOV     R2,A
   \   1D8A  18                DEC     R0
   \   1D8B  19                DEC     R1
   \   1D8C  E7                MOV     A,@R1
   \   1D8D  96                SUBB    A,@R0
   \   1D8E  FB                MOV     R3,A
   \   1D8F  EA                MOV     A,R2
   \   1D90  F8                MOV     R0,A
   \   1D91  CB                XCH     A,R3
   \   1D92  F9                MOV     R1,A
   \   1D93  CB                XCH     A,R3
   \   1D94  EB                MOV     A,R3
   \   1D95  E4                CLR     A
   \   1D96  FA                MOV     R2,A
   \   1D97  FB                MOV     R3,A
   \   1D98  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1D9B  120000            LCALL   ?F_DIV_L02
    997                                          Wssum = ((value*Wssum) - (value*oldv) + ( flag-5.))*10.;
   \   1D9E  7800              MOV     R0,#$LOCBI Ws_calc1+12
   \   1DA0  E6                MOV     A,@R0
   \   1DA1  FB                MOV     R3,A
   \   1DA2  08                INC     R0
   \   1DA3  E6                MOV     A,@R0
   \   1DA4  F8                MOV     R0,A
   \   1DA5  CB                XCH     A,R3
   \   1DA6  F9                MOV     R1,A
   \   1DA7  CB                XCH     A,R3
   \   1DA8  EB                MOV     A,R3
   \   1DA9  E4                CLR     A
   \   1DAA  FA                MOV     R2,A
   \   1DAB  FB                MOV     R3,A
   \   1DAC  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1DAF  C8                XCH     A,R0
   \   1DB0  C0E0              PUSH    ACC
   \   1DB2  7800              MOV     R0,#$LOCBI Ws_calc1+8
   \   1DB4  120000            LCALL   ?STO_R4567_IR0_L20
   \   1DB7  D0E0              POP     ACC
   \   1DB9  C8                XCH     A,R0
   \   1DBA  120000            LCALL   ?F_MUL_L02
   \   1DBD  7800              MOV     R0,#$LOCBI Ws_calc1+6
   \   1DBF  E6                MOV     A,@R0
   \   1DC0  FB                MOV     R3,A
   \   1DC1  08                INC     R0
   \   1DC2  E6                MOV     A,@R0
   \   1DC3  F8                MOV     R0,A
   \   1DC4  CB                XCH     A,R3
   \   1DC5  F9                MOV     R1,A
   \   1DC6  CB                XCH     A,R3
   \   1DC7  EB                MOV     A,R3
   \   1DC8  E4                CLR     A
   \   1DC9  FA                MOV     R2,A
   \   1DCA  FB                MOV     R3,A
   \   1DCB  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1DCE  EF                MOV     A,R7
   \   1DCF  C0E0              PUSH    ACC
   \   1DD1  EE                MOV     A,R6
   \   1DD2  C0E0              PUSH    ACC
   \   1DD4  ED                MOV     A,R5
   \   1DD5  C0E0              PUSH    ACC
   \   1DD7  EC                MOV     A,R4
   \   1DD8  C0E0              PUSH    ACC
   \   1DDA  E4                CLR     A
   \   1DDB  FC                MOV     R4,A
   \   1DDC  FD                MOV     R5,A
   \   1DDD  7EA0              MOV     R6,#160
   \   1DDF  7FC0              MOV     R7,#192
   \   1DE1  120000            LCALL   ?F_ADD_L02
   \   1DE4  D0E0              POP     ACC
   \   1DE6  F8                MOV     R0,A
   \   1DE7  D0E0              POP     ACC
   \   1DE9  F9                MOV     R1,A
   \   1DEA  D0E0              POP     ACC
   \   1DEC  FA                MOV     R2,A
   \   1DED  D0E0              POP     ACC
   \   1DEF  FB                MOV     R3,A
   \   1DF0  120000            LCALL   ?F_ADD_L02
   \   1DF3  7800              MOV     R0,#$LOCBI Ws_calc1+2
   \   1DF5  E6                MOV     A,@R0
   \   1DF6  FB                MOV     R3,A
   \   1DF7  08                INC     R0
   \   1DF8  E6                MOV     A,@R0
   \   1DF9  F8                MOV     R0,A
   \   1DFA  CB                XCH     A,R3
   \   1DFB  F9                MOV     R1,A
   \   1DFC  CB                XCH     A,R3
   \   1DFD  EB                MOV     A,R3
   \   1DFE  E4                CLR     A
   \   1DFF  FA                MOV     R2,A
   \   1E00  FB                MOV     R3,A
   \   1E01  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1E04  EF                MOV     A,R7
   \   1E05  C0E0              PUSH    ACC
   \   1E07  EE                MOV     A,R6
   \   1E08  C0E0              PUSH    ACC
   \   1E0A  ED                MOV     A,R5
   \   1E0B  C0E0              PUSH    ACC
   \   1E0D  EC                MOV     A,R4
   \   1E0E  C0E0              PUSH    ACC
   \   1E10  EB                MOV     A,R3
   \   1E11  C0E0              PUSH    ACC
   \   1E13  EA                MOV     A,R2
   \   1E14  C0E0              PUSH    ACC
   \   1E16  E9                MOV     A,R1
   \   1E17  C0E0              PUSH    ACC
   \   1E19  E8                MOV     A,R0
   \   1E1A  C0E0              PUSH    ACC
   \   1E1C  7800              MOV     R0,#$LOCBI Ws_calc1+8
   \   1E1E  120000            LCALL   ?LD_R4567_IR0_L20
   \   1E21  D0E0              POP     ACC
   \   1E23  F8                MOV     R0,A
   \   1E24  D0E0              POP     ACC
   \   1E26  F9                MOV     R1,A
   \   1E27  D0E0              POP     ACC
   \   1E29  FA                MOV     R2,A
   \   1E2A  D0E0              POP     ACC
   \   1E2C  FB                MOV     R3,A
   \   1E2D  120000            LCALL   ?F_MUL_L02
   \   1E30  D0E0              POP     ACC
   \   1E32  F8                MOV     R0,A
   \   1E33  D0E0              POP     ACC
   \   1E35  F9                MOV     R1,A
   \   1E36  D0E0              POP     ACC
   \   1E38  FA                MOV     R2,A
   \   1E39  D0E0              POP     ACC
   \   1E3B  FB                MOV     R3,A
   \   1E3C  120000            LCALL   ?F_SUB_R_L02
   \   1E3F  E4                CLR     A
   \   1E40  F8                MOV     R0,A
   \   1E41  F9                MOV     R1,A
   \   1E42  7A20              MOV     R2,#32
   \   1E44  7B41              MOV     R3,#65
   \   1E46  120000            LCALL   ?F_MUL_L02
   \   1E49  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1E4C  7800              MOV     R0,#$LOCBI Ws_calc1+12
   \   1E4E  ED                MOV     A,R5
   \   1E4F  F6                MOV     @R0,A
   \   1E50  08                INC     R0
   \   1E51  EC                MOV     A,R4
   \   1E52  F6                MOV     @R0,A
    998                                          break;
   \   1E53  8017              SJMP    ?0328
   \   1E55            ?0333:
    999                                  }
   1000                                  else
   1001                                          oldv=newv;
   \   1E55  7800              MOV     R0,#$LOCBI Ws_calc1
   \   1E57  E6                MOV     A,@R0
   \   1E58  FD                MOV     R5,A
   \   1E59  08                INC     R0
   \   1E5A  E6                MOV     A,@R0
   \   1E5B  08                INC     R0
   \   1E5C  CD                XCH     A,R5
   \   1E5D  F6                MOV     @R0,A
   \   1E5E  CD                XCH     A,R5
   \   1E5F  08                INC     R0
   \   1E60  F6                MOV     @R0,A
   \   1E61  08                INC     R0
   \   1E62  08                INC     R0
   \   1E63  06                INC     @R0
   \   1E64  E6                MOV     A,@R0
   \   1E65  18                DEC     R0
   \   1E66  7001              JNZ     $+3
   \   1E68  06                INC     @R0
   1002                          }
   1003                  }
   \   1E69  021D00            LJMP    ?0329
   \   1E6C            ?0328:
   \   1E6C            ?0327:
   \   1E6C            ?0322:
   \   1E6C            ?0319:
   1004                  if(Wssum > 599)
   \   1E6C  D3                SETB    C
   \   1E6D  7800              MOV     R0,#$LOCBI Ws_calc1+13
   \   1E6F  E6                MOV     A,@R0
   \   1E70  9457              SUBB    A,#87
   \   1E72  18                DEC     R0
   \   1E73  E6                MOV     A,@R0
   \   1E74  9402              SUBB    A,#2
   \   1E76  4005              JC      ?0337
   \   1E78            ?0336:
   1005                          return 600;
   \   1E78  7D02              MOV     R5,#2
   \   1E7A  7C58              MOV     R4,#88
   1006                  else
   \   1E7C  22                RET
   \   1E7D            ?0337:
   1007                          return Wssum;
   \   1E7D  E6                MOV     A,@R0
   \   1E7E  FD                MOV     R5,A
   \   1E7F  08                INC     R0
   \   1E80  E6                MOV     A,@R0
   \   1E81  FC                MOV     R4,A
   1008          }
   \   1E82            ?0338:
   \   1E82  22                RET
   1009          
   1010          unsigned int Ws_calc2(unsigned int Wssum)    // Knot
   1011          {
   \   1E83            Ws_calc2:
   1012          
   1013                  unsigned int newv,oldv,i,flag;
   1014                  float value;
   1015                                                          /* Calculation W_S  */
   1016                  if(Wssum == 0)
   \   1E83  7800              MOV     R0,#$LOCBI Ws_calc2+12
   \   1E85  ED                MOV     A,R5
   \   1E86  F6                MOV     @R0,A
   \   1E87  08                INC     R0
   \   1E88  EC                MOV     A,R4
   \   1E89  F6                MOV     @R0,A
   \   1E8A  4D                ORL     A,R5
   \   1E8B  700C              JNZ     ?0340
   \   1E8D            ?0339:
   1017                          Wssum = 0;
   \   1E8D  E4                CLR     A
   \   1E8E  FC                MOV     R4,A
   \   1E8F  FD                MOV     R5,A
   \   1E90  18                DEC     R0
   \   1E91  ED                MOV     A,R5
   \   1E92  F6                MOV     @R0,A
   \   1E93  08                INC     R0
   \   1E94  EC                MOV     A,R4
   \   1E95  F6                MOV     @R0,A
   \   1E96  022171            LJMP    ?0341
   \   1E99            ?0340:
   1018                  else if(Wssum <= Aspeed[0])
   \   1E99  9002AB            MOV     DPTR,#Aspeed+1
   \   1E9C  E4                CLR     A
   \   1E9D  93                MOVC    A,@A+DPTR
   \   1E9E  C3                CLR     C
   \   1E9F  9C                SUBB    A,R4
   \   1EA0  9002AA            MOV     DPTR,#Aspeed
   \   1EA3  E4                CLR     A
   \   1EA4  93                MOVC    A,@A+DPTR
   \   1EA5  9D                SUBB    A,R5
   \   1EA6  404F              JC      ?0343
   \   1EA8            ?0342:
   1019                  {
   1020                          value=5.835/(float)Aspeed[0];
   \   1EA8  E4                CLR     A
   \   1EA9  93                MOVC    A,@A+DPTR
   \   1EAA  FD                MOV     R5,A
   \   1EAB  7401              MOV     A,#1
   \   1EAD  93                MOVC    A,@A+DPTR
   \   1EAE  FC                MOV     R4,A
   \   1EAF  ED                MOV     A,R5
   \   1EB0  E4                CLR     A
   \   1EB1  FE                MOV     R6,A
   \   1EB2  FF                MOV     R7,A
   \   1EB3  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   1EB6  7B40              MOV     R3,#64
   \   1EB8  7852              MOV     R0,#82
   \   1EBA  79B8              MOV     R1,#184
   \   1EBC  7ABA              MOV     R2,#186
   \   1EBE  120000            LCALL   ?F_DIV_R_L02
   1021                          Wssum = value*Wssum*10;
   \   1EC1  7800              MOV     R0,#$LOCBI Ws_calc2+12
   \   1EC3  E6                MOV     A,@R0
   \   1EC4  FB                MOV     R3,A
   \   1EC5  08                INC     R0
   \   1EC6  E6                MOV     A,@R0
   \   1EC7  F8                MOV     R0,A
   \   1EC8  CB                XCH     A,R3
   \   1EC9  F9                MOV     R1,A
   \   1ECA  CB                XCH     A,R3
   \   1ECB  EB                MOV     A,R3
   \   1ECC  E4                CLR     A
   \   1ECD  FA                MOV     R2,A
   \   1ECE  FB                MOV     R3,A
   \   1ECF  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1ED2  C8                XCH     A,R0
   \   1ED3  C0E0              PUSH    ACC
   \   1ED5  7800              MOV     R0,#$LOCBI Ws_calc2+8
   \   1ED7  120000            LCALL   ?STO_R4567_IR0_L20
   \   1EDA  D0E0              POP     ACC
   \   1EDC  C8                XCH     A,R0
   \   1EDD  120000            LCALL   ?F_MUL_L02
   \   1EE0  E4                CLR     A
   \   1EE1  F8                MOV     R0,A
   \   1EE2  F9                MOV     R1,A
   \   1EE3  7A20              MOV     R2,#32
   \   1EE5  7B41              MOV     R3,#65
   \   1EE7  120000            LCALL   ?F_MUL_L02
   \   1EEA  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1EED  7800              MOV     R0,#$LOCBI Ws_calc2+12
   \   1EEF  ED                MOV     A,R5
   \   1EF0  F6                MOV     @R0,A
   \   1EF1  08                INC     R0
   \   1EF2  EC                MOV     A,R4
   \   1EF3  F6                MOV     @R0,A
   \   1EF4  022171            LJMP    ?0344
   \   1EF7            ?0343:
   1022                  }
   1023                  else if(Wssum > Aspeed[0] && Wssum <= Aspeed[1])
   \   1EF7  A3                INC     DPTR
   \   1EF8  E4                CLR     A
   \   1EF9  93                MOVC    A,@A+DPTR
   \   1EFA  C3                CLR     C
   \   1EFB  9C                SUBB    A,R4
   \   1EFC  9002AA            MOV     DPTR,#Aspeed
   \   1EFF  E4                CLR     A
   \   1F00  93                MOVC    A,@A+DPTR
   \   1F01  9D                SUBB    A,R5
   \   1F02  4003              JC      $+5
   \   1F04  021FE4            LJMP    ?0346
   \   1F07  9002AD            MOV     DPTR,#Aspeed+3
   \   1F0A  E4                CLR     A
   \   1F0B  93                MOVC    A,@A+DPTR
   \   1F0C  C3                CLR     C
   \   1F0D  9C                SUBB    A,R4
   \   1F0E  9002AC            MOV     DPTR,#Aspeed+2
   \   1F11  E4                CLR     A
   \   1F12  93                MOVC    A,@A+DPTR
   \   1F13  9D                SUBB    A,R5
   \   1F14  5003              JNC     $+5
   \   1F16  021FE4            LJMP    ?0346
   \   1F19            ?0348:
   \   1F19            ?0347:
   \   1F19            ?0345:
   1024                  {
   1025                          newv=Aspeed[1];
   \   1F19  E4                CLR     A
   \   1F1A  93                MOVC    A,@A+DPTR
   \   1F1B  FD                MOV     R5,A
   \   1F1C  7401              MOV     A,#1
   \   1F1E  93                MOVC    A,@A+DPTR
   1026                          oldv=Aspeed[0];
   \   1F1F  FC                MOV     R4,A
   \   1F20  9002AA            MOV     DPTR,#Aspeed
   \   1F23  E4                CLR     A
   \   1F24  93                MOVC    A,@A+DPTR
   \   1F25  FF                MOV     R7,A
   \   1F26  7401              MOV     A,#1
   \   1F28  93                MOVC    A,@A+DPTR
   1027                          value=3.890/(float)(newv-oldv);
   \   1F29  7800              MOV     R0,#$LOCBI Ws_calc2
   \   1F2B  CD                XCH     A,R5
   \   1F2C  F6                MOV     @R0,A
   \   1F2D  CD                XCH     A,R5
   \   1F2E  08                INC     R0
   \   1F2F  CC                XCH     A,R4
   \   1F30  F6                MOV     @R0,A
   \   1F31  CC                XCH     A,R4
   \   1F32  08                INC     R0
   \   1F33  CF                XCH     A,R7
   \   1F34  F6                MOV     @R0,A
   \   1F35  CF                XCH     A,R7
   \   1F36  08                INC     R0
   \   1F37  F6                MOV     @R0,A
   \   1F38  FE                MOV     R6,A
   \   1F39  C3                CLR     C
   \   1F3A  EC                MOV     A,R4
   \   1F3B  9E                SUBB    A,R6
   \   1F3C  FC                MOV     R4,A
   \   1F3D  ED                MOV     A,R5
   \   1F3E  9F                SUBB    A,R7
   \   1F3F  FD                MOV     R5,A
   \   1F40  EC                MOV     A,R4
   \   1F41  F8                MOV     R0,A
   \   1F42  CD                XCH     A,R5
   \   1F43  F9                MOV     R1,A
   \   1F44  CD                XCH     A,R5
   \   1F45  ED                MOV     A,R5
   \   1F46  E4                CLR     A
   \   1F47  FA                MOV     R2,A
   \   1F48  FB                MOV     R3,A
   \   1F49  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1F4C  7F40              MOV     R7,#64
   \   1F4E  7E78              MOV     R6,#120
   \   1F50  7CC3              MOV     R4,#195
   \   1F52  7DF5              MOV     R5,#245
   \   1F54  120000            LCALL   ?F_DIV_L02
   1028                          Wssum = ((value*Wssum)-(value*oldv)+5.835)*10.;
   \   1F57  7800              MOV     R0,#$LOCBI Ws_calc2+12
   \   1F59  E6                MOV     A,@R0
   \   1F5A  FB                MOV     R3,A
   \   1F5B  08                INC     R0
   \   1F5C  E6                MOV     A,@R0
   \   1F5D  F8                MOV     R0,A
   \   1F5E  CB                XCH     A,R3
   \   1F5F  F9                MOV     R1,A
   \   1F60  CB                XCH     A,R3
   \   1F61  EB                MOV     A,R3
   \   1F62  E4                CLR     A
   \   1F63  FA                MOV     R2,A
   \   1F64  FB                MOV     R3,A
   \   1F65  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1F68  C8                XCH     A,R0
   \   1F69  C0E0              PUSH    ACC
   \   1F6B  7800              MOV     R0,#$LOCBI Ws_calc2+8
   \   1F6D  120000            LCALL   ?STO_R4567_IR0_L20
   \   1F70  D0E0              POP     ACC
   \   1F72  C8                XCH     A,R0
   \   1F73  120000            LCALL   ?F_MUL_L02
   \   1F76  7800              MOV     R0,#$LOCBI Ws_calc2+2
   \   1F78  E6                MOV     A,@R0
   \   1F79  FB                MOV     R3,A
   \   1F7A  08                INC     R0
   \   1F7B  E6                MOV     A,@R0
   \   1F7C  F8                MOV     R0,A
   \   1F7D  CB                XCH     A,R3
   \   1F7E  F9                MOV     R1,A
   \   1F7F  CB                XCH     A,R3
   \   1F80  EB                MOV     A,R3
   \   1F81  E4                CLR     A
   \   1F82  FA                MOV     R2,A
   \   1F83  FB                MOV     R3,A
   \   1F84  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1F87  EF                MOV     A,R7
   \   1F88  C0E0              PUSH    ACC
   \   1F8A  EE                MOV     A,R6
   \   1F8B  C0E0              PUSH    ACC
   \   1F8D  ED                MOV     A,R5
   \   1F8E  C0E0              PUSH    ACC
   \   1F90  EC                MOV     A,R4
   \   1F91  C0E0              PUSH    ACC
   \   1F93  EB                MOV     A,R3
   \   1F94  C0E0              PUSH    ACC
   \   1F96  EA                MOV     A,R2
   \   1F97  C0E0              PUSH    ACC
   \   1F99  E9                MOV     A,R1
   \   1F9A  C0E0              PUSH    ACC
   \   1F9C  E8                MOV     A,R0
   \   1F9D  C0E0              PUSH    ACC
   \   1F9F  7800              MOV     R0,#$LOCBI Ws_calc2+8
   \   1FA1  120000            LCALL   ?LD_R4567_IR0_L20
   \   1FA4  D0E0              POP     ACC
   \   1FA6  F8                MOV     R0,A
   \   1FA7  D0E0              POP     ACC
   \   1FA9  F9                MOV     R1,A
   \   1FAA  D0E0              POP     ACC
   \   1FAC  FA                MOV     R2,A
   \   1FAD  D0E0              POP     ACC
   \   1FAF  FB                MOV     R3,A
   \   1FB0  120000            LCALL   ?F_MUL_L02
   \   1FB3  D0E0              POP     ACC
   \   1FB5  F8                MOV     R0,A
   \   1FB6  D0E0              POP     ACC
   \   1FB8  F9                MOV     R1,A
   \   1FB9  D0E0              POP     ACC
   \   1FBB  FA                MOV     R2,A
   \   1FBC  D0E0              POP     ACC
   \   1FBE  FB                MOV     R3,A
   \   1FBF  120000            LCALL   ?F_SUB_R_L02
   \   1FC2  7B40              MOV     R3,#64
   \   1FC4  7852              MOV     R0,#82
   \   1FC6  79B8              MOV     R1,#184
   \   1FC8  7ABA              MOV     R2,#186
   \   1FCA  120000            LCALL   ?F_ADD_L02
   \   1FCD  E4                CLR     A
   \   1FCE  F8                MOV     R0,A
   \   1FCF  F9                MOV     R1,A
   \   1FD0  7A20              MOV     R2,#32
   \   1FD2  7B41              MOV     R3,#65
   \   1FD4  120000            LCALL   ?F_MUL_L02
   \   1FD7  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1FDA  7800              MOV     R0,#$LOCBI Ws_calc2+12
   \   1FDC  ED                MOV     A,R5
   \   1FDD  F6                MOV     @R0,A
   \   1FDE  08                INC     R0
   \   1FDF  EC                MOV     A,R4
   \   1FE0  F6                MOV     @R0,A
   1029                  }
   1030                  else
   \   1FE1  022171            LJMP    ?0349
   \   1FE4            ?0346:
   1031                  {
   1032                          oldv=Aspeed[1];
   \   1FE4  9002AC            MOV     DPTR,#Aspeed+2
   \   1FE7  E4                CLR     A
   \   1FE8  93                MOVC    A,@A+DPTR
   \   1FE9  FD                MOV     R5,A
   \   1FEA  7401              MOV     A,#1
   \   1FEC  93                MOVC    A,@A+DPTR
   \   1FED  7800              MOV     R0,#$LOCBI Ws_calc2+2
   \   1FEF  CD                XCH     A,R5
   \   1FF0  F6                MOV     @R0,A
   \   1FF1  CD                XCH     A,R5
   \   1FF2  08                INC     R0
   \   1FF3  F6                MOV     @R0,A
   1033                          flag=9.725;
   \   1FF4  7800              MOV     R0,#$LOCBI Ws_calc2+6
   \   1FF6  E4                CLR     A
   \   1FF7  F6                MOV     @R0,A
   \   1FF8  08                INC     R0
   \   1FF9  7609              MOV     @R0,#9
   1034                          for(i=2; i != 16; i++)
   \   1FFB  7800              MOV     R0,#$LOCBI Ws_calc2+4
   \   1FFD  F6                MOV     @R0,A
   \   1FFE  08                INC     R0
   \   1FFF  7602              MOV     @R0,#2
   \   2001            ?0351:
   \   2001  7800              MOV     R0,#$LOCBI Ws_calc2+5
   \   2003  E6                MOV     A,@R0
   \   2004  6410              XRL     A,#16
   \   2006  7007              JNZ     ?0426
   \   2008  18                DEC     R0
   \   2009  E6                MOV     A,@R0
   \   200A  7003              JNZ     $+5
   \   200C  022171            LJMP    ?0350
   \   200F            ?0426:
   \   200F            ?0352:
   1035                          {
   1036                                  flag += 9.725;
   \   200F  7800              MOV     R0,#$LOCBI Ws_calc2+7
   \   2011  E6                MOV     A,@R0
   \   2012  2409              ADD     A,#9
   \   2014  F6                MOV     @R0,A
   \   2015  18                DEC     R0
   \   2016  E6                MOV     A,@R0
   \   2017  3400              ADDC    A,#0
   \   2019  F6                MOV     @R0,A
   1037                                  newv=Aspeed[i];
   \   201A  18                DEC     R0
   \   201B  E6                MOV     A,@R0
   \   201C  25E0              ADD     A,ACC
   \   201E  9002AA            MOV     DPTR,#Aspeed
   \   2021  FD                MOV     R5,A
   \   2022  93                MOVC    A,@A+DPTR
   \   2023  CD                XCH     A,R5
   \   2024  04                INC     A
   \   2025  93                MOVC    A,@A+DPTR
   1038                                  if( Wssum < newv && Wssum >= oldv)
   \   2026  7800              MOV     R0,#$LOCBI Ws_calc2
   \   2028  CD                XCH     A,R5
   \   2029  F6                MOV     @R0,A
   \   202A  CD                XCH     A,R5
   \   202B  08                INC     R0
   \   202C  F6                MOV     @R0,A
   \   202D  7800              MOV     R0,#$LOCBI Ws_calc2+13
   \   202F  D3                SETB    C
   \   2030  96                SUBB    A,@R0
   \   2031  FC                MOV     R4,A
   \   2032  ED                MOV     A,R5
   \   2033  18                DEC     R0
   \   2034  96                SUBB    A,@R0
   \   2035  5003              JNC     $+5
   \   2037  02215A            LJMP    ?0355
   \   203A  E6                MOV     A,@R0
   \   203B  FD                MOV     R5,A
   \   203C  08                INC     R0
   \   203D  E6                MOV     A,@R0
   \   203E  7800              MOV     R0,#$LOCBI Ws_calc2+3
   \   2040  C3                CLR     C
   \   2041  96                SUBB    A,@R0
   \   2042  FC                MOV     R4,A
   \   2043  ED                MOV     A,R5
   \   2044  18                DEC     R0
   \   2045  96                SUBB    A,@R0
   \   2046  5003              JNC     $+5
   \   2048  02215A            LJMP    ?0355
   \   204B            ?0357:
   \   204B            ?0356:
   \   204B            ?0354:
   1039                                  {
   1040                                          value=(float)(flag-(flag-9.725))/(newv-oldv);
   \   204B  7800              MOV     R0,#$LOCBI Ws_calc2+6
   \   204D  E6                MOV     A,@R0
   \   204E  FF                MOV     R7,A
   \   204F  08                INC     R0
   \   2050  E6                MOV     A,@R0
   \   2051  FE                MOV     R6,A
   \   2052  FC                MOV     R4,A
   \   2053  CF                XCH     A,R7
   \   2054  FD                MOV     R5,A
   \   2055  CF                XCH     A,R7
   \   2056  EF                MOV     A,R7
   \   2057  E4                CLR     A
   \   2058  FE                MOV     R6,A
   \   2059  FF                MOV     R7,A
   \   205A  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   205D  7A1B              MOV     R2,#27
   \   205F  7499              MOV     A,#153
   \   2061  F9                MOV     R1,A
   \   2062  04                INC     A
   \   2063  F8                MOV     R0,A
   \   2064  7BC1              MOV     R3,#193
   \   2066  120000            LCALL   ?F_ADD_L02
   \   2069  EE                MOV     A,R6
   \   206A  4F                ORL     A,R7
   \   206B  6004              JZ      $+6
   \   206D  EF                MOV     A,R7
   \   206E  6480              XRL     A,#128
   \   2070  FF                MOV     R7,A
   \   2071  7800              MOV     R0,#$LOCBI Ws_calc2+6
   \   2073  E6                MOV     A,@R0
   \   2074  FB                MOV     R3,A
   \   2075  08                INC     R0
   \   2076  E6                MOV     A,@R0
   \   2077  F8                MOV     R0,A
   \   2078  CB                XCH     A,R3
   \   2079  F9                MOV     R1,A
   \   207A  CB                XCH     A,R3
   \   207B  EB                MOV     A,R3
   \   207C  E4                CLR     A
   \   207D  FA                MOV     R2,A
   \   207E  FB                MOV     R3,A
   \   207F  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   2082  120000            LCALL   ?F_ADD_L02
   \   2085  C3                CLR     C
   \   2086  7800              MOV     R0,#$LOCBI Ws_calc2+3
   \   2088  7900              MOV     R1,#$LOCBI Ws_calc2+1
   \   208A  E7                MOV     A,@R1
   \   208B  96                SUBB    A,@R0
   \   208C  FA                MOV     R2,A
   \   208D  18                DEC     R0
   \   208E  19                DEC     R1
   \   208F  E7                MOV     A,@R1
   \   2090  96                SUBB    A,@R0
   \   2091  FB                MOV     R3,A
   \   2092  EA                MOV     A,R2
   \   2093  F8                MOV     R0,A
   \   2094  CB                XCH     A,R3
   \   2095  F9                MOV     R1,A
   \   2096  CB                XCH     A,R3
   \   2097  EB                MOV     A,R3
   \   2098  E4                CLR     A
   \   2099  FA                MOV     R2,A
   \   209A  FB                MOV     R3,A
   \   209B  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   209E  120000            LCALL   ?F_DIV_L02
   1041                                          Wssum = ((value*Wssum) - (value*oldv) + ( flag-9.725))*10.;
   \   20A1  7800              MOV     R0,#$LOCBI Ws_calc2+12
   \   20A3  E6                MOV     A,@R0
   \   20A4  FB                MOV     R3,A
   \   20A5  08                INC     R0
   \   20A6  E6                MOV     A,@R0
   \   20A7  F8                MOV     R0,A
   \   20A8  CB                XCH     A,R3
   \   20A9  F9                MOV     R1,A
   \   20AA  CB                XCH     A,R3
   \   20AB  EB                MOV     A,R3
   \   20AC  E4                CLR     A
   \   20AD  FA                MOV     R2,A
   \   20AE  FB                MOV     R3,A
   \   20AF  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   20B2  C8                XCH     A,R0
   \   20B3  C0E0              PUSH    ACC
   \   20B5  7800              MOV     R0,#$LOCBI Ws_calc2+8
   \   20B7  120000            LCALL   ?STO_R4567_IR0_L20
   \   20BA  D0E0              POP     ACC
   \   20BC  C8                XCH     A,R0
   \   20BD  120000            LCALL   ?F_MUL_L02
   \   20C0  7800              MOV     R0,#$LOCBI Ws_calc2+6
   \   20C2  E6                MOV     A,@R0
   \   20C3  FB                MOV     R3,A
   \   20C4  08                INC     R0
   \   20C5  E6                MOV     A,@R0
   \   20C6  F8                MOV     R0,A
   \   20C7  CB                XCH     A,R3
   \   20C8  F9                MOV     R1,A
   \   20C9  CB                XCH     A,R3
   \   20CA  EB                MOV     A,R3
   \   20CB  E4                CLR     A
   \   20CC  FA                MOV     R2,A
   \   20CD  FB                MOV     R3,A
   \   20CE  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   20D1  EF                MOV     A,R7
   \   20D2  C0E0              PUSH    ACC
   \   20D4  EE                MOV     A,R6
   \   20D5  C0E0              PUSH    ACC
   \   20D7  ED                MOV     A,R5
   \   20D8  C0E0              PUSH    ACC
   \   20DA  EC                MOV     A,R4
   \   20DB  C0E0              PUSH    ACC
   \   20DD  7E1B              MOV     R6,#27
   \   20DF  7499              MOV     A,#153
   \   20E1  FD                MOV     R5,A
   \   20E2  04                INC     A
   \   20E3  FC                MOV     R4,A
   \   20E4  7FC1              MOV     R7,#193
   \   20E6  120000            LCALL   ?F_ADD_L02
   \   20E9  D0E0              POP     ACC
   \   20EB  F8                MOV     R0,A
   \   20EC  D0E0              POP     ACC
   \   20EE  F9                MOV     R1,A
   \   20EF  D0E0              POP     ACC
   \   20F1  FA                MOV     R2,A
   \   20F2  D0E0              POP     ACC
   \   20F4  FB                MOV     R3,A
   \   20F5  120000            LCALL   ?F_ADD_L02
   \   20F8  7800              MOV     R0,#$LOCBI Ws_calc2+2
   \   20FA  E6                MOV     A,@R0
   \   20FB  FB                MOV     R3,A
   \   20FC  08                INC     R0
   \   20FD  E6                MOV     A,@R0
   \   20FE  F8                MOV     R0,A
   \   20FF  CB                XCH     A,R3
   \   2100  F9                MOV     R1,A
   \   2101  CB                XCH     A,R3
   \   2102  EB                MOV     A,R3
   \   2103  E4                CLR     A
   \   2104  FA                MOV     R2,A
   \   2105  FB                MOV     R3,A
   \   2106  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   2109  EF                MOV     A,R7
   \   210A  C0E0              PUSH    ACC
   \   210C  EE                MOV     A,R6
   \   210D  C0E0              PUSH    ACC
   \   210F  ED                MOV     A,R5
   \   2110  C0E0              PUSH    ACC
   \   2112  EC                MOV     A,R4
   \   2113  C0E0              PUSH    ACC
   \   2115  EB                MOV     A,R3
   \   2116  C0E0              PUSH    ACC
   \   2118  EA                MOV     A,R2
   \   2119  C0E0              PUSH    ACC
   \   211B  E9                MOV     A,R1
   \   211C  C0E0              PUSH    ACC
   \   211E  E8                MOV     A,R0
   \   211F  C0E0              PUSH    ACC
   \   2121  7800              MOV     R0,#$LOCBI Ws_calc2+8
   \   2123  120000            LCALL   ?LD_R4567_IR0_L20
   \   2126  D0E0              POP     ACC
   \   2128  F8                MOV     R0,A
   \   2129  D0E0              POP     ACC
   \   212B  F9                MOV     R1,A
   \   212C  D0E0              POP     ACC
   \   212E  FA                MOV     R2,A
   \   212F  D0E0              POP     ACC
   \   2131  FB                MOV     R3,A
   \   2132  120000            LCALL   ?F_MUL_L02
   \   2135  D0E0              POP     ACC
   \   2137  F8                MOV     R0,A
   \   2138  D0E0              POP     ACC
   \   213A  F9                MOV     R1,A
   \   213B  D0E0              POP     ACC
   \   213D  FA                MOV     R2,A
   \   213E  D0E0              POP     ACC
   \   2140  FB                MOV     R3,A
   \   2141  120000            LCALL   ?F_SUB_R_L02
   \   2144  E4                CLR     A
   \   2145  F8                MOV     R0,A
   \   2146  F9                MOV     R1,A
   \   2147  7A20              MOV     R2,#32
   \   2149  7B41              MOV     R3,#65
   \   214B  120000            LCALL   ?F_MUL_L02
   \   214E  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   2151  7800              MOV     R0,#$LOCBI Ws_calc2+12
   \   2153  ED                MOV     A,R5
   \   2154  F6                MOV     @R0,A
   \   2155  08                INC     R0
   \   2156  EC                MOV     A,R4
   \   2157  F6                MOV     @R0,A
   1042                                          break;
   \   2158  8017              SJMP    ?0350
   \   215A            ?0355:
   1043                                  }
   1044                                  else
   1045                                          oldv=newv;
   \   215A  7800              MOV     R0,#$LOCBI Ws_calc2
   \   215C  E6                MOV     A,@R0
   \   215D  FD                MOV     R5,A
   \   215E  08                INC     R0
   \   215F  E6                MOV     A,@R0
   \   2160  08                INC     R0
   \   2161  CD                XCH     A,R5
   \   2162  F6                MOV     @R0,A
   \   2163  CD                XCH     A,R5
   \   2164  08                INC     R0
   \   2165  F6                MOV     @R0,A
   \   2166  08                INC     R0
   \   2167  08                INC     R0
   \   2168  06                INC     @R0
   \   2169  E6                MOV     A,@R0
   \   216A  18                DEC     R0
   \   216B  7001              JNZ     $+3
   \   216D  06                INC     @R0
   1046                          }
   1047                  }
   \   216E  022001            LJMP    ?0351
   \   2171            ?0350:
   \   2171            ?0349:
   \   2171            ?0344:
   \   2171            ?0341:
   1048                  if(Wssum > 1199)
   \   2171  D3                SETB    C
   \   2172  7800              MOV     R0,#$LOCBI Ws_calc2+13
   \   2174  E6                MOV     A,@R0
   \   2175  94AF              SUBB    A,#175
   \   2177  18                DEC     R0
   \   2178  E6                MOV     A,@R0
   \   2179  9404              SUBB    A,#4
   \   217B  4005              JC      ?0359
   \   217D            ?0358:
   1049                          return 1200;
   \   217D  7D04              MOV     R5,#4
   \   217F  7CB0              MOV     R4,#176
   1050                  else
   \   2181  22                RET
   \   2182            ?0359:
   1051                          return Wssum;
   \   2182  E6                MOV     A,@R0
   \   2183  FD                MOV     R5,A
   \   2184  08                INC     R0
   \   2185  E6                MOV     A,@R0
   \   2186  FC                MOV     R4,A
   1052          }
   \   2187            ?0360:
   \   2187  22                RET
   \   0000                    RSEG    CONST
   \   0000            Title:
   \   0000  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   0004  2F202F2F
   \   0008  2F2F2F2F
   \   000C  2F2F2F2F
   \   0010  2F2F2F2F
   \   0014  2F2F2F2F
   \   0018  2F2F2F2F
   \   001C  2F2F2F2F
   \   0020  2F2F2F2F
   \   0024  2F2F2F2F
   \   0028  2F2F2F2F
   \   002C  2F2F2F2F
   \   0030  2F2F2F2F
   \   0034  2F202F2F
   \   0038  2F202F00
   \   003C  00000000          DB      0,0,0,0,0
   \   0040  00
   \   0041  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   0045  2F202F2F
   \   0049  2F2F2F2F
   \   004D  2F2F2F2F
   \   0051  2F2F2F2F
   \   0055  2F2F2F2F
   \   0059  2F2F2F2F
   \   005D  2F2F2F2F
   \   0061  2F2F2F2F
   \   0065  2F2F2F2F
   \   0069  2F2F2F2F
   \   006D  2F2F2F2F
   \   0071  2F2F2F2F
   \   0075  2F202F2F
   \   0079  2F202F00
   \   007D  00000000          DB      0,0,0,0,0
   \   0081  00
   \   0082  2F202F2F          DB      '/ /// ///        Wind Speed & Direction Board     /// /// /',0
   \   0086  2F202F2F
   \   008A  2F202020
   \   008E  20202020
   \   0092  2057696E
   \   0096  64205370
   \   009A  65656420
   \   009E  26204469
   \   00A2  72656374
   \   00A6  696F6E20
   \   00AA  426F6172
   \   00AE  64202020
   \   00B2  20202F2F
   \   00B6  2F202F2F
   \   00BA  2F202F00
   \   00BE  00000000          DB      0,0,0,0,0
   \   00C2  00
   \   00C3  2F202F2F          DB      '/ /// ///                        (General)        /// /// /',0
   \   00C7  2F202F2F
   \   00CB  2F202020
   \   00CF  20202020
   \   00D3  20202020
   \   00D7  20202020
   \   00DB  20202020
   \   00DF  20202020
   \   00E3  20284765
   \   00E7  6E657261
   \   00EB  6C292020
   \   00EF  20202020
   \   00F3  20202F2F
   \   00F7  2F202F2F
   \   00FB  2F202F00
   \   00FF  00000000          DB      0,0,0,0,0
   \   0103  00
   \   0104  2F202F2F          DB      '/ /// ///       JINYANG  INDUSTRIAL.,CO LTD       /// /// /',0
   \   0108  2F202F2F
   \   010C  2F202020
   \   0110  20202020
   \   0114  4A494E59
   \   0118  414E4720
   \   011C  20494E44
   \   0120  55535452
   \   0124  49414C2E
   \   0128  2C434F20
   \   012C  4C544420
   \   0130  20202020
   \   0134  20202F2F
   \   0138  2F202F2F
   \   013C  2F202F00
   \   0140  00000000          DB      0,0,0,0,0
   \   0144  00
   \   0145  2F202F2F          DB      '/ /// ///       Program By  Hae-suk. JIN          /// /// /',0
   \   0149  2F202F2F
   \   014D  2F202020
   \   0151  20202020
   \   0155  50726F67
   \   0159  72616D20
   \   015D  42792020
   \   0161  4861652D
   \   0165  73756B2E
   \   0169  204A494E
   \   016D  20202020
   \   0171  20202020
   \   0175  20202F2F
   \   0179  2F202F2F
   \   017D  2F202F00
   \   0181  00000000          DB      0,0,0,0,0
   \   0185  00
   \   0186  2F202F2F          DB      '/ /// ///     Start :  1995.12. 17                /// /// /',0
   \   018A  2F202F2F
   \   018E  2F202020
   \   0192  20205374
   \   0196  61727420
   \   019A  3A202031
   \   019E  3939352E
   \   01A2  31322E20
   \   01A6  31372020
   \   01AA  20202020
   \   01AE  20202020
   \   01B2  20202020
   \   01B6  20202F2F
   \   01BA  2F202F2F
   \   01BE  2F202F00
   \   01C2  00000000          DB      0,0,0,0,0
   \   01C6  00
   \   01C7  2F202F2F          DB      '/ /// ///       End :  1996. 4.  3  Ver 3.0       /// /// /',0
   \   01CB  2F202F2F
   \   01CF  2F202020
   \   01D3  20202020
   \   01D7  456E6420
   \   01DB  3A202031
   \   01DF  3939362E
   \   01E3  20342E20
   \   01E7  20332020
   \   01EB  56657220
   \   01EF  332E3020
   \   01F3  20202020
   \   01F7  20202F2F
   \   01FB  2F202F2F
   \   01FF  2F202F00
   \   0203  00000000          DB      0,0,0,0,0
   \   0207  00
   \   0208  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   020C  2F202F2F
   \   0210  2F2F2F2F
   \   0214  2F2F2F2F
   \   0218  2F2F2F2F
   \   021C  2F2F2F2F
   \   0220  2F2F2F2F
   \   0224  2F2F2F2F
   \   0228  2F2F2F2F
   \   022C  2F2F2F2F
   \   0230  2F2F2F2F
   \   0234  2F2F2F2F
   \   0238  2F2F2F2F
   \   023C  2F202F2F
   \   0240  2F202F00
   \   0244  00000000          DB      0,0,0,0,0
   \   0248  00
   \   0249  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   024D  2F202F2F
   \   0251  2F2F2F2F
   \   0255  2F2F2F2F
   \   0259  2F2F2F2F
   \   025D  2F2F2F2F
   \   0261  2F2F2F2F
   \   0265  2F2F2F2F
   \   0269  2F2F2F2F
   \   026D  2F2F2F2F
   \   0271  2F2F2F2F
   \   0275  2F2F2F2F
   \   0279  2F2F2F2F
   \   027D  2F202F2F
   \   0281  2F202F00
   \   0285  00000000          DB      0,0,0,0,0
   \   0289  00
   \   028A            Adirection:
   \   028A  00FE              DW      254
   \   028C  01FD              DW      509
   \   028E  02FB              DW      763
   \   0290  03FA              DW      1018
   \   0292  04F8              DW      1272
   \   0294  05F6              DW      1526
   \   0296  06F5              DW      1781
   \   0298  07F3              DW      2035
   \   029A  08F1              DW      2289
   \   029C  09F0              DW      2544
   \   029E  0AEE              DW      2798
   \   02A0  0BED              DW      3053
   \   02A2  0CEB              DW      3307
   \   02A4  0DE9              DW      3561
   \   02A6  0EE8              DW      3816
   \   02A8  0FE6              DW      4070
   \   02AA            Aspeed:
   \   02AA  0026              DW      38
   \   02AC  0048              DW      72
   \   02AE  0098              DW      152
   \   02B0  00E3              DW      227
   \   02B2  012F              DW      303
   \   02B4  017E              DW      382
   \   02B6  01CC              DW      460
   \   02B8  0220              DW      544
   \   02BA  0273              DW      627
   \   02BC  02C2              DW      706
   \   02BE  0311              DW      785
   \   02C0  0360              DW      864
   \   02C2  03B0              DW      944
   \   02C4  03FE              DW      1022
   \   02C6  044D              DW      1101
   \   02C8  049D              DW      1181
   \   0000                    COMMON  INTVEC
   \   0003                    DS      3
   \   0003  02                DB      2
   \   0004  0F5C              DB      HIGH(EX0_int),LOW(EX0_int)
   \   000B                    DS      5
   \   000B  02                DB      2
   \   000C  0F17              DB      HIGH(T0_int),LOW(T0_int)
   \   0023                    DS      21
   \   0023  02                DB      2
   \   0024  12A8              DB      HIGH(SCON_int),LOW(SCON_int)
   \   002B                    DS      5
   \   002B  02                DB      2
   \   002C  0F18              DB      HIGH(T2_int),LOW(T2_int)
   \   0000                    RSEG    X_UDATA
   \   0000            Wdsta:
   \   0001                    DS      1
   \   0001            Wssta:
   \   0002                    DS      1
   \   0002            Nws:
   \   0006                    DS      4
   \   0006            Ows:
   \   000A                    DS      4
   \   000A            Quad:
   \   000B                    DS      1
   \   000B            Minute:
   \   000C                    DS      1
   \   000C            Second:
   \   000D                    DS      1
   \   000D            Wdreal:
   \   000F                    DS      2
   \   000F            Wsreal:
   \   0011                    DS      2
   \   0011            Wsabs:
   \   0013                    DS      2
   \   0013            Wdvalue:
   \   0015                    DS      2
   \   0015            Wsvalue:
   \   0017                    DS      2
   \   0017            Wddata:
   \   002F                    DS      24
   \   002F            Wsdata:
   \   0047                    DS      24
   \   0047            Wpoint:
   \   0048                    DS      1
   \   0048            WdSec:
   \   004A                    DS      2
   \   004A            WdSecd:
   \   00C2                    DS      120
   \   00C2            WsSec:
   \   00C4                    DS      2
   \   00C4            WsSecd:
   \   013C                    DS      120
   \   013C            WdMin:
   \   013E                    DS      2
   \   013E            WdMind:
   \   0152                    DS      20
   \   0152            WsMin:
   \   0154                    DS      2
   \   0154            WsMind:
   \   0168                    DS      20
   \   0168            WsTen:
   \   016A                    DS      2
   \   016A            WdTen:
   \   016C                    DS      2
   \   016C            WdHTen:
   \   016E                    DS      2
   \   016E            WdGmax:
   \   0170                    DS      2
   \   0170            WsGmax:
   \   0172                    DS      2
   \   0172            WdMmax:
   \   0174                    DS      2
   \   0174            WsMmax:
   \   0176                    DS      2
   \   0176            WdTmax:
   \   0178                    DS      2
   \   0178            WsTmax:
   \   017A                    DS      2
   \   017A            WdEvalue:
   \   017C                    DS      2
   \   017C            WsEvalue:
   \   017E                    DS      2
   \   017E            WdEcount:
   \   0180                    DS      2
   \   0180            WsEcount:
   \   0182                    DS      2
   \   0182            WdThvalue:
   \   0184                    DS      2
   \   0184            WsThvalue:
   \   0186                    DS      2
   \   0186            WdsEcount:
   \   0188                    DS      2
   \   0188            TEcount:
   \   018A                    DS      2
   \   018A            Rbuf:
   \   01EE                    DS      100
   \   01EE            Rpoint:
   \   01F0                    DS      2
   \   01F0            Sbuf:
   \   0254                    DS      100
   \   0254            Spoint:
   \   0256                    DS      2
   \   0256            ID:
   \   0257                    DS      1
   \   0257            Blueb:
   \   0259                    DS      2
   \   0259            Redb:
   \   025B                    DS      2
   \   025B            wdb:
   \   025D                    DS      2
   \   025D            oldv:
   \   025F                    DS      2
   \   025F            newv:
   \   0261                    DS      2
   \   0261            flag:
   \   0265                    DS      4
   \   0265            value:
   \   0269                    DS      4
   \   0269            sinHTen:
   \   026D                    DS      4
   \   026D            cosHTen:
   \   0271                    DS      4
   \   0271            sinSec:
   \   0275                    DS      4
   \   0275            sinOne:
   \   0279                    DS      4
   \   0279            sinTen:
   \   027D                    DS      4
   \   027D            cosSec:
   \   0281                    DS      4
   \   0281            cosOne:
   \   0285                    DS      4
   \   0285            cosTen:
   \   0289                    DS      4
   \   0289            sumSec:
   \   028B                    DS      2
   \   028B            sumOne:
   \   028F                    DS      4
   \   028F            sumTen:
   \   0293                    DS      4
   \   0000                    RSEG    BITVARS
   \   0000            unit:
   \   0001                    DS      1
   \   0001            Sendd:
   \   0002                    DS      1
   \   0002            Send:
   \   0003                    DS      1
   \   0003            Comon:
   \   0004                    DS      1
   \   0004            Receve:
   \   0005                    DS      1
   \   0005            Transm:
   \   0006                    DS      1
   \   0006            Sens:
   \   0007                    DS      1
   \   0007            MeasQ:
   \   0008                    DS      1
   \   0008            Init:
   \   0009                    DS      1
   \   0009            Wbit:
   \   000A                    DS      1
   \   000A            Aderr:
   \   000B                    DS      1
   \   000B            Wderr:
   \   000C                    DS      1
   \   000C            Wserr:
   \   000D                    DS      1
   \   000D            Terror:
   \   000E                    DS      1
   \   000E            Fout:
   \   000F                    DS      1
   \   000F                    END

Errors: none
Warnings: none
Code size: 8584
Constant size: 760
Static variable size: Data(0) Idata(0) Bit(15) Xdata(659)

