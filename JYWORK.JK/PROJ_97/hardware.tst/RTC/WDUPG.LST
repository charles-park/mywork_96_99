####################################################################################################
#                                                                                                  #
#     Micro Series 8051 C-Compiler V5.12K/DXT                              23/Jan/97  09:48:59     #
#     Front end V4.04                                                                              #
#     Global Optimizer V1.00E                                                                      #
#                                                                                                  #
#           Target option =  8051                                                                  #
#           Memory model  =  large                                                                 #
#           Source file   =  wdupg.c                                                               #
#           List file     =  wdupg.lst                                                             #
#           Object file   =  wdupg.r03                                                             #
#           Command line  =  WDUPG.C -ml -s -K -P -L -q -C                                         #
#                                                                                                  #
#                                                                   (c) Copyright IAR Systems 1994 #
####################################################################################################

   \   0000                    NAME    wdupg(18)
   \   0000                    RSEG    CODE(0)
   \   0000                    RSEG    CONST(0)
   \   0000                    COMMON  INTVEC(0)
   \   0000                    RSEG    X_UDATA(0)
   \   0000                    RSEG    BITVARS(0)
   \   0000                    PUBLIC  EX0_int
   \   0000                    $DEFFN  EX0_int(512,0,2,0,0,0,0,0)
   \   0000                    PUBLIC  One_pros
   \   0000                    $DEFFN  One_pros(0,0,6,0,0,0,0,0),main
   \   0000                    PUBLIC  Quad_pros
   \   0000                    $DEFFN  Quad_pros(0,0,16,0,0,0,0,0),main
   \   0000                    PUBLIC  SCON_int
   \   0000                    $DEFFN  SCON_int(512,0,2,0,0,0,0,0)
   \   0000                    PUBLIC  Sec_pros
   \   0000                    $DEFFN  Sec_pros(0,0,12,0,0,0,0,0),main
   \   0000                    PUBLIC  T0_int
   \   0000                    $DEFFN  T0_int(512,0,0,0,0,0,0,0)
   \   0000                    PUBLIC  T2_int
   \   0000                    $DEFFN  T2_int(512,0,0,0,0,0,0,0)
   \   0000                    PUBLIC  Ten_pros
   \   0000                    $DEFFN  Ten_pros(0,0,6,0,0,0,0,0),main
   \   0000                    PUBLIC  Title
   \   0000                    PUBLIC  Ws_calc
   \   0000                    $DEFFN  Ws_calc(0,0,12,0,0,0,2,0),Ten_pros,One_pros,Sec_pros,Quad_pros
   \   0000                    EXTERN  atan
   \   0000                    $DEFFN  atan(0,0,4,0),Ten_pros,One_pros,Sec_pros,Quad_pros
   \   0000                    EXTERN  cos
   \   0000                    $DEFFN  cos(0,0,4,0),One_pros,Sec_pros,Quad_pros
   \   0000                    PUBLIC  initialize
   \   0000                    $DEFFN  initialize(0,0,2,0,0,0,0,0),main
   \   0000                    PUBLIC  main
   \   0000                    $DEFFN  main(0,0,2,0,0,0,0,0)
   \   0000                    EXTERN  sin
   \   0000                    $DEFFN  sin(0,0,4,0),One_pros,Sec_pros,Quad_pros
   \   0000                    EXTERN  ?UI_MOD_L00
   \   0000                    EXTERN  ?SL_DIV_L01
   \   0000                    EXTERN  ?L_CMP_L01
   \   0000                    EXTERN  ?L_ADD_ASG_DPTR_R4567_L01
   \   0000                    EXTERN  ?L_OR_ASG_DPTR_R4567_L01
   \   0000                    EXTERN  ?F_ADD_L02
   \   0000                    EXTERN  ?F_SUB_R_L02
   \   0000                    EXTERN  ?F_MUL_L02
   \   0000                    EXTERN  ?F_DIV_L02
   \   0000                    EXTERN  ?F_DIV_R_L02
   \   0000                    EXTERN  ?F_ADD_ASG_DPTR_R4567_L02
   \   0000                    EXTERN  ?R4567_FLT_TO_LONG_L02
   \   0000                    EXTERN  ?R4567_LONG_TO_FLT_L02
   \   0000                    EXTERN  ?R0123_ULONG_TO_FLT_L02
   \   0000                    EXTERN  ?R4567_ULONG_TO_FLT_L02
   \   0000                    EXTERN  ?STO_R0123_DPTR_L20
   \   0000                    EXTERN  ?STO_R4567_DPTR_L20
   \   0000                    EXTERN  ?LD_R0123_XDPTR_L20
   \   0000                    EXTERN  ?LD_R4567_XDPTR_L20
   \   0000                    EXTERN  ?CL8051L_5_12_L17
   \   0000                    RSEG    CODE
      1          #include <c:\cci_hdsl\include\io51.h>
      2          #include <c:\cci_hdsl\include\math.h>
      3          #include <wdupg.h>
      4          
      5          #pragma memory=code
      6          char Title[10][65]={
      7          "/ /// /////////////////////////////////////////////// /// /",
      8          "/ /// /////////////////////////////////////////////// /// /",
      9          "/ /// ///        Wind Speed & Direction Board     /// /// /",
     10          "/ /// ///                        (Up-Grade)       /// /// /",
     11          "/ /// ///       JINYANG  INDUSTRIAL.,CO LTD       /// /// /",
     12          "/ /// ///       Program By  Hae-suk. JIN          /// /// /",
     13          "/ /// ///     Start :  1995.12. 17                /// /// /",
     14          "/ /// ///       End :  1996. 3. 11  Ver 1.1       /// /// /",
     15          "/ /// /////////////////////////////////////////////// /// /",
     16          "/ /// /////////////////////////////////////////////// /// /"
     17          };
     18          //               Memory Default Set
     19          //  Adirection Default Value   Aspeed Default Value
     20          //   254 ;  22.5       //   45 ;  3 m/s
     21          //   509 ;  45         //   80 ;  5 m/s
     22          //   763 ;  67.5       //  160 ; 10 m/s
     23          //  1018 ;  90         //  248 ; 15 m/s
     24          //  1272 ; 112.5       //  333 ; 20 m/s
     25          //  1526 ; 135         //  420 ; 25 m/s
     26          //  1781 ; 157.5       //  507 ; 30 m/s
     27          //  2035 ; 180         //  593 ; 35 m/s
     28          //  2289 ; 202.5       //  680 ; 40 m/s
     29          //  2544 ; 225         //  766 ; 45 m/s
     30          //  2798 ; 247.5       //  853 ; 50 m/s
     31          //  3053 ; 270         //  940 ; 55 m/s
     32          //  3307 ; 292.5       // 1027 ; 60 m/s
     33          //  3561 ; 315         // 1113 ; 65 m/s
     34          //  3816 ; 337.5       // 1200 ; 70 m/s
     35          //  4070 ; 360         // 1287 ; 75 m/s
     36          
     37          static  unsigned    int Adirection[16] = {
     38           254,509,763,1018,1272,1526,1781,2035,2289,2544,2798,3053,3307,3561,3816,4070};
     39          // 0   1   2   3    4    5    6    7    8    9   10   11   12   13   14   15
     40          static  unsigned    int Aspeed[16] = {
     41            45, 80,160, 248, 333, 420, 507, 593, 680, 766, 853, 940,1027,1113,1200,1287};
     42          // 0   1   2   3    4    5    6    7    8    9   10   11   12   13   14   15
     43          #pragma memory=default
     44          
     45          #define     CS      P1.3
     46          #define     CLK     P1.2
     47          #define     DI      P1.1
     48          #define     DO      P1.0
     49          #define     RedL    P1.7        // Transm
     50          #define     BlueL   P1.6        // Receve
     51          #define     Wdt     P1.5
     52          #define     LightL  0x1000
     53          
     54          interrupt   void    EX0_int(void);       // 4 Hz (Time Process)
     55          interrupt   void    T0_int(void);        // Wind Speed Buffer
     56          interrupt   void    T2_int(void);
     57          interrupt   void    SCON_int(void);      // Internal Serial Communication
     58                      void    Quad_pros(void);
     59                      void    Sec_pros(void);
     60                      void    One_pros(void);
     61                      void    Ten_pros(void);
     62                      void    initialize(void);
     63                      int     Ws_calc(unsigned int);
     64          
     65          void initialize(void)
     66          {
   \   0000            initialize:
     67              unsigned int i;
     68          
     69              IE=0x80;
   \   0000  75A880            MOV     IE,#128
     70              PCON=0x80;          // Baudrate double set
   \   0003  758780            MOV     PCON,#128
     71          
     72              TMOD = 0x25;        // T0 = counter 16Bit no,Prescaler,
   \   0006  758925            MOV     TMOD,#37
     73          
     74              TH1 = 0xf4;
   \   0009  758DF4            MOV     TH1,#244
     75              TL1 = 0xf4;        // 23Mhz = F3, 22Mhz = F4,18Mhz = F6, 11Mhz = fa Set
   \   000C  758BF4            MOV     TL1,#244
     76          
     77              TH0=0;
   \   000F  758C00            MOV     TH0,#0
     78              TL0=0;
   \   0012  758A00            MOV     TL0,#0
     79          
     80              TH2=0;
   \   0015  75CD00            MOV     205,#0
     81              TL2=0;
   \   0018  75CC00            MOV     204,#0
     82              RCAP2L=0x00;
   \   001B  75CA00            MOV     202,#0
     83              RCAP2H=0x00;
   \   001E  75CB00            MOV     203,#0
     84          
     85              SCON=0x50;
   \   0021  759850            MOV     SCON,#80
     86              TR1=1;
   \   0024  D28E              SETB    TCON.6
     87              TR0=0;      // External Counting Stop
   \   0026  C28C              CLR     TCON.4
     88          
     89              Rpoint=0;
   \   0028  9001EC            MOV     DPTR,#Rpoint
   \   002B  E4                CLR     A
   \   002C  F0                MOVX    @DPTR,A
   \   002D  A3                INC     DPTR
   \   002E  F0                MOVX    @DPTR,A
     90              Spoint=0;
   \   002F  900252            MOV     DPTR,#Spoint
   \   0032  F0                MOVX    @DPTR,A
   \   0033  A3                INC     DPTR
   \   0034  F0                MOVX    @DPTR,A
     91              Comon=0;
   \   0035  C202              CLR     Comon
     92              Quad=0;
   \   0037  90000A            MOV     DPTR,#Quad
   \   003A  F0                MOVX    @DPTR,A
     93              Second=1;
   \   003B  04                INC     A
   \   003C  90000C            MOV     DPTR,#Second
   \   003F  F0                MOVX    @DPTR,A
     94              Minute=0;
   \   0040  E4                CLR     A
   \   0041  90000B            MOV     DPTR,#Minute
   \   0044  F0                MOVX    @DPTR,A
     95              Wssta=0;
   \   0045  900001            MOV     DPTR,#Wssta
   \   0048  F0                MOVX    @DPTR,A
     96              Wdsta=0;
   \   0049  900000            MOV     DPTR,#Wdsta
   \   004C  F0                MOVX    @DPTR,A
     97              Wpoint=0;
   \   004D  900047            MOV     DPTR,#Wpoint
   \   0050  F0                MOVX    @DPTR,A
     98              Nws=0;
   \   0051  900002            MOV     DPTR,#Nws
   \   0054  F0                MOVX    @DPTR,A
   \   0055  A3                INC     DPTR
   \   0056  F0                MOVX    @DPTR,A
   \   0057  A3                INC     DPTR
   \   0058  F0                MOVX    @DPTR,A
   \   0059  A3                INC     DPTR
   \   005A  F0                MOVX    @DPTR,A
     99              Ows=0;
   \   005B  900006            MOV     DPTR,#Ows
   \   005E  F0                MOVX    @DPTR,A
   \   005F  A3                INC     DPTR
   \   0060  F0                MOVX    @DPTR,A
   \   0061  A3                INC     DPTR
   \   0062  F0                MOVX    @DPTR,A
   \   0063  A3                INC     DPTR
   \   0064  F0                MOVX    @DPTR,A
    100          
    101              Sbuf[4]=0;
   \   0065  9001F2            MOV     DPTR,#Sbuf+4
   \   0068  F0                MOVX    @DPTR,A
    102              Sbuf[5]=0;
   \   0069  A3                INC     DPTR
   \   006A  F0                MOVX    @DPTR,A
    103              Sbuf[6]=0;
   \   006B  A3                INC     DPTR
   \   006C  F0                MOVX    @DPTR,A
    104              Sbuf[7]=0;
   \   006D  A3                INC     DPTR
   \   006E  F0                MOVX    @DPTR,A
    105              for(i=0; i != 60;i++)
   \   006F  900000            MOV     DPTR,#$LOCBX initialize
   \   0072  F0                MOVX    @DPTR,A
   \   0073  A3                INC     DPTR
   \   0074  F0                MOVX    @DPTR,A
   \   0075            ?0001:
   \   0075  900000            MOV     DPTR,#$LOCBX initialize+1
   \   0078  E0                MOVX    A,@DPTR
   \   0079  643C              XRL     A,#60
   \   007B  7006              JNZ     ?0298
   \   007D  900000            MOV     DPTR,#$LOCBX initialize
   \   0080  E0                MOVX    A,@DPTR
   \   0081  6036              JZ      ?0000
   \   0083            ?0298:
   \   0083            ?0002:
    106              {
    107                  WdSecd[i]=0;
   \   0083  900000            MOV     DPTR,#$LOCBX initialize+1
   \   0086  E0                MOVX    A,@DPTR
   \   0087  25E0              ADD     A,ACC
   \   0089  244A              ADD     A,#LOW(WdSecd)
   \   008B  F582              MOV     DPL,A
   \   008D  E4                CLR     A
   \   008E  3400              ADDC    A,#HIGH(WdSecd)
   \   0090  F583              MOV     DPH,A
   \   0092  E4                CLR     A
   \   0093  F0                MOVX    @DPTR,A
   \   0094  A3                INC     DPTR
   \   0095  F0                MOVX    @DPTR,A
    108                  WsSecd[i]=0;
   \   0096  900000            MOV     DPTR,#$LOCBX initialize+1
   \   0099  E0                MOVX    A,@DPTR
   \   009A  25E0              ADD     A,ACC
   \   009C  24C4              ADD     A,#LOW(WsSecd)
   \   009E  F582              MOV     DPL,A
   \   00A0  E4                CLR     A
   \   00A1  3400              ADDC    A,#HIGH(WsSecd)
   \   00A3  F583              MOV     DPH,A
   \   00A5  E4                CLR     A
   \   00A6  F0                MOVX    @DPTR,A
   \   00A7  A3                INC     DPTR
   \   00A8  F0                MOVX    @DPTR,A
   \   00A9  900000            MOV     DPTR,#$LOCBX initialize+1
   \   00AC  E0                MOVX    A,@DPTR
   \   00AD  04                INC     A
   \   00AE  F0                MOVX    @DPTR,A
   \   00AF  900000            MOV     DPTR,#$LOCBX initialize
   \   00B2  7003              JNZ     ?0299
   \   00B4  E0                MOVX    A,@DPTR
   \   00B5  04                INC     A
   \   00B6  F0                MOVX    @DPTR,A
   \   00B7            ?0299:
   \   00B7  80BC              SJMP    ?0001
   \   00B9            ?0000:
    109              }               // 1 Sec, Avarage Dim Clear
    110              for(i=0; i != 12;i++)
   \   00B9  900000            MOV     DPTR,#$LOCBX initialize
   \   00BC  E4                CLR     A
   \   00BD  F0                MOVX    @DPTR,A
   \   00BE  A3                INC     DPTR
   \   00BF  F0                MOVX    @DPTR,A
   \   00C0            ?0005:
   \   00C0  900000            MOV     DPTR,#$LOCBX initialize+1
   \   00C3  E0                MOVX    A,@DPTR
   \   00C4  640C              XRL     A,#12
   \   00C6  7006              JNZ     ?0300
   \   00C8  900000            MOV     DPTR,#$LOCBX initialize
   \   00CB  E0                MOVX    A,@DPTR
   \   00CC  6036              JZ      ?0004
   \   00CE            ?0300:
   \   00CE            ?0006:
    111              {
    112                  Wddata[i]=0;
   \   00CE  900000            MOV     DPTR,#$LOCBX initialize+1
   \   00D1  E0                MOVX    A,@DPTR
   \   00D2  25E0              ADD     A,ACC
   \   00D4  2417              ADD     A,#LOW(Wddata)
   \   00D6  F582              MOV     DPL,A
   \   00D8  E4                CLR     A
   \   00D9  3400              ADDC    A,#HIGH(Wddata)
   \   00DB  F583              MOV     DPH,A
   \   00DD  E4                CLR     A
   \   00DE  F0                MOVX    @DPTR,A
   \   00DF  A3                INC     DPTR
   \   00E0  F0                MOVX    @DPTR,A
    113                  Wsdata[i]=0;
   \   00E1  900000            MOV     DPTR,#$LOCBX initialize+1
   \   00E4  E0                MOVX    A,@DPTR
   \   00E5  25E0              ADD     A,ACC
   \   00E7  242F              ADD     A,#LOW(Wsdata)
   \   00E9  F582              MOV     DPL,A
   \   00EB  E4                CLR     A
   \   00EC  3400              ADDC    A,#HIGH(Wsdata)
   \   00EE  F583              MOV     DPH,A
   \   00F0  E4                CLR     A
   \   00F1  F0                MOVX    @DPTR,A
   \   00F2  A3                INC     DPTR
   \   00F3  F0                MOVX    @DPTR,A
   \   00F4  900000            MOV     DPTR,#$LOCBX initialize+1
   \   00F7  E0                MOVX    A,@DPTR
   \   00F8  04                INC     A
   \   00F9  F0                MOVX    @DPTR,A
   \   00FA  900000            MOV     DPTR,#$LOCBX initialize
   \   00FD  7003              JNZ     ?0301
   \   00FF  E0                MOVX    A,@DPTR
   \   0100  04                INC     A
   \   0101  F0                MOVX    @DPTR,A
   \   0102            ?0301:
   \   0102  80BC              SJMP    ?0005
   \   0104            ?0004:
    114              }               // 3 Sec, Avarage Dim Clear
    115              for(i=0; i != 10;i++)
   \   0104  900000            MOV     DPTR,#$LOCBX initialize
   \   0107  E4                CLR     A
   \   0108  F0                MOVX    @DPTR,A
   \   0109  A3                INC     DPTR
   \   010A  F0                MOVX    @DPTR,A
   \   010B            ?0009:
   \   010B  900000            MOV     DPTR,#$LOCBX initialize+1
   \   010E  E0                MOVX    A,@DPTR
   \   010F  640A              XRL     A,#10
   \   0111  7006              JNZ     ?0302
   \   0113  900000            MOV     DPTR,#$LOCBX initialize
   \   0116  E0                MOVX    A,@DPTR
   \   0117  6036              JZ      ?0008
   \   0119            ?0302:
   \   0119            ?0010:
    116              {
    117                  WdMind[i]=0;
   \   0119  900000            MOV     DPTR,#$LOCBX initialize+1
   \   011C  E0                MOVX    A,@DPTR
   \   011D  25E0              ADD     A,ACC
   \   011F  243E              ADD     A,#LOW(WdMind)
   \   0121  F582              MOV     DPL,A
   \   0123  E4                CLR     A
   \   0124  3401              ADDC    A,#HIGH(WdMind)
   \   0126  F583              MOV     DPH,A
   \   0128  E4                CLR     A
   \   0129  F0                MOVX    @DPTR,A
   \   012A  A3                INC     DPTR
   \   012B  F0                MOVX    @DPTR,A
    118                  WsMind[i]=0;
   \   012C  900000            MOV     DPTR,#$LOCBX initialize+1
   \   012F  E0                MOVX    A,@DPTR
   \   0130  25E0              ADD     A,ACC
   \   0132  2454              ADD     A,#LOW(WsMind)
   \   0134  F582              MOV     DPL,A
   \   0136  E4                CLR     A
   \   0137  3401              ADDC    A,#HIGH(WsMind)
   \   0139  F583              MOV     DPH,A
   \   013B  E4                CLR     A
   \   013C  F0                MOVX    @DPTR,A
   \   013D  A3                INC     DPTR
   \   013E  F0                MOVX    @DPTR,A
   \   013F  900000            MOV     DPTR,#$LOCBX initialize+1
   \   0142  E0                MOVX    A,@DPTR
   \   0143  04                INC     A
   \   0144  F0                MOVX    @DPTR,A
   \   0145  900000            MOV     DPTR,#$LOCBX initialize
   \   0148  7003              JNZ     ?0303
   \   014A  E0                MOVX    A,@DPTR
   \   014B  04                INC     A
   \   014C  F0                MOVX    @DPTR,A
   \   014D            ?0303:
   \   014D  80BC              SJMP    ?0009
   \   014F            ?0008:
    119              }               // Minute Dim Clear
    120              WdMin=0;
   \   014F  90013C            MOV     DPTR,#WdMin
   \   0152  E4                CLR     A
   \   0153  F0                MOVX    @DPTR,A
   \   0154  A3                INC     DPTR
   \   0155  F0                MOVX    @DPTR,A
    121              WsMin=0;
   \   0156  900152            MOV     DPTR,#WsMin
   \   0159  F0                MOVX    @DPTR,A
   \   015A  A3                INC     DPTR
   \   015B  F0                MOVX    @DPTR,A
    122              WsMin  = 0;
   \   015C  900152            MOV     DPTR,#WsMin
   \   015F  F0                MOVX    @DPTR,A
   \   0160  A3                INC     DPTR
   \   0161  F0                MOVX    @DPTR,A
    123              WsTen  = 0;
   \   0162  900168            MOV     DPTR,#WsTen
   \   0165  F0                MOVX    @DPTR,A
   \   0166  A3                INC     DPTR
   \   0167  F0                MOVX    @DPTR,A
    124              WsGmax = 0;
   \   0168  90016E            MOV     DPTR,#WsGmax
   \   016B  F0                MOVX    @DPTR,A
   \   016C  A3                INC     DPTR
   \   016D  F0                MOVX    @DPTR,A
    125              WsMmax = 0;
   \   016E  900172            MOV     DPTR,#WsMmax
   \   0171  F0                MOVX    @DPTR,A
   \   0172  A3                INC     DPTR
   \   0173  F0                MOVX    @DPTR,A
    126              WsTmax = 0;
   \   0174  900176            MOV     DPTR,#WsTmax
   \   0177  F0                MOVX    @DPTR,A
   \   0178  A3                INC     DPTR
   \   0179  F0                MOVX    @DPTR,A
    127              WsEcount=0;
   \   017A  90017E            MOV     DPTR,#WsEcount
   \   017D  F0                MOVX    @DPTR,A
   \   017E  A3                INC     DPTR
   \   017F  F0                MOVX    @DPTR,A
    128              WdEcount=0;
   \   0180  90017C            MOV     DPTR,#WdEcount
   \   0183  F0                MOVX    @DPTR,A
   \   0184  A3                INC     DPTR
   \   0185  F0                MOVX    @DPTR,A
    129              WdsEcount=0;
   \   0186  900184            MOV     DPTR,#WdsEcount
   \   0189  F0                MOVX    @DPTR,A
   \   018A  A3                INC     DPTR
   \   018B  F0                MOVX    @DPTR,A
    130              TEcount=0;
   \   018C  900186            MOV     DPTR,#TEcount
   \   018F  F0                MOVX    @DPTR,A
   \   0190  A3                INC     DPTR
   \   0191  F0                MOVX    @DPTR,A
    131              sinOne=0;
   \   0192  90026B            MOV     DPTR,#sinOne
   \   0195  F0                MOVX    @DPTR,A
   \   0196  A3                INC     DPTR
   \   0197  F0                MOVX    @DPTR,A
    132              sinTen=0;
   \   0198  90026F            MOV     DPTR,#sinTen
   \   019B  F0                MOVX    @DPTR,A
   \   019C  A3                INC     DPTR
   \   019D  F0                MOVX    @DPTR,A
    133              cosOne=0;
   \   019E  900277            MOV     DPTR,#cosOne
   \   01A1  F0                MOVX    @DPTR,A
   \   01A2  A3                INC     DPTR
   \   01A3  F0                MOVX    @DPTR,A
    134              cosTen=0;
   \   01A4  90027B            MOV     DPTR,#cosTen
   \   01A7  F0                MOVX    @DPTR,A
   \   01A8  A3                INC     DPTR
   \   01A9  F0                MOVX    @DPTR,A
    135              sumOne=0;
   \   01AA  900281            MOV     DPTR,#sumOne
   \   01AD  F0                MOVX    @DPTR,A
   \   01AE  A3                INC     DPTR
   \   01AF  F0                MOVX    @DPTR,A
   \   01B0  A3                INC     DPTR
   \   01B1  F0                MOVX    @DPTR,A
   \   01B2  A3                INC     DPTR
   \   01B3  F0                MOVX    @DPTR,A
    136              sumTen=0;
   \   01B4  900285            MOV     DPTR,#sumTen
   \   01B7  F0                MOVX    @DPTR,A
   \   01B8  A3                INC     DPTR
   \   01B9  F0                MOVX    @DPTR,A
   \   01BA  A3                INC     DPTR
   \   01BB  F0                MOVX    @DPTR,A
   \   01BC  A3                INC     DPTR
   \   01BD  F0                MOVX    @DPTR,A
    137          
    138              WdEvalue=0;
   \   01BE  900178            MOV     DPTR,#WdEvalue
   \   01C1  F0                MOVX    @DPTR,A
   \   01C2  A3                INC     DPTR
   \   01C3  F0                MOVX    @DPTR,A
    139              WsEvalue=0;
   \   01C4  90017A            MOV     DPTR,#WsEvalue
   \   01C7  F0                MOVX    @DPTR,A
   \   01C8  A3                INC     DPTR
   \   01C9  F0                MOVX    @DPTR,A
    140          
    141              // Bit Default Set
    142              Send=0;
   \   01CA  C201              CLR     Send
    143              Sendd=0;
   \   01CC  C200              CLR     Sendd
    144              Init=1;
   \   01CE  D207              SETB    Init
    145              Aderr=0;
   \   01D0  C209              CLR     Aderr
    146              MeasQ=0;
   \   01D2  C206              CLR     MeasQ
    147              Terror=0;
   \   01D4  C20C              CLR     Terror
    148          
    149              ID  = 0;    // ID Number Complemently (Fix)
   \   01D6  900254            MOV     DPTR,#ID
   \   01D9  F0                MOVX    @DPTR,A
    150              BlueL=0;
   \   01DA  C296              CLR     P1.6
    151              RedL=0;
   \   01DC  C297              CLR     P1.7
    152          
    153              PS =1;      // Serial Priority
   \   01DE  D2BC              SETB    IP.4
    154              TR2=1;      // Quad Time Watcher "RUN
   \   01E0  D2CA              SETB    T2CON.2
    155              IT0=1;      // Edge Trigger
   \   01E2  D288              SETB    TCON.0
    156              ES =1;      // Serial Interrupt Enable
   \   01E4  D2AC              SETB    IE.4
    157              ET2=1;      // Quad Time Watcher Enable
   \   01E6  D2AD              SETB    IE.5
    158              EX0=1;      // External Interrupt Enable 4hz
   \   01E8  D2A8              SETB    IE.0
    159          }
   \   01EA  22                RET
    160          
    161          void main(void)
    162          {
   \   01EB            main:
    163              unsigned int i;
    164          
    165              initialize();
   \   01EB  120000            LCALL   $REFFN initialize
   \   01EE            ?0013:
    166              while(1)
    167              {
    168                  if(Wbit)
   \   01EE  300806            JNB     Wbit,?0016
   \   01F1            ?0015:
    169                  {
    170                      Wdt=0;
   \   01F1  C295              CLR     P1.5
    171                      Wbit=0;
   \   01F3  C208              CLR     Wbit
    172                  }
    173                  else
   \   01F5  8004              SJMP    ?0017
   \   01F7            ?0016:
    174                  {
    175                      Wdt=1;
   \   01F7  D295              SETB    P1.5
    176                      Wbit=1;
   \   01F9  D208              SETB    Wbit
   \   01FB            ?0017:
    177                  }
    178          
    179                  if(Receve)
   \   01FB  30031B            JNB     Receve,?0019
   \   01FE            ?0018:
    180                  {
    181                      if(!Blueb--)
   \   01FE  900255            MOV     DPTR,#Blueb
   \   0201  E0                MOVX    A,@DPTR
   \   0202  FD                MOV     R5,A
   \   0203  A3                INC     DPTR
   \   0204  E0                MOVX    A,@DPTR
   \   0205  FC                MOV     R4,A
   \   0206  E0                MOVX    A,@DPTR
   \   0207  24FF              ADD     A,#255
   \   0209  F0                MOVX    @DPTR,A
   \   020A  900255            MOV     DPTR,#Blueb
   \   020D  E0                MOVX    A,@DPTR
   \   020E  34FF              ADDC    A,#255
   \   0210  F0                MOVX    @DPTR,A
   \   0211  EC                MOV     A,R4
   \   0212  4D                ORL     A,R5
   \   0213  7004              JNZ     ?0021
   \   0215            ?0020:
    182                      {
    183                          BlueL=0;     // Receive LED off
   \   0215  C296              CLR     P1.6
    184                          Receve=0;
   \   0217  C203              CLR     Receve
   \   0219            ?0021:
   \   0219            ?0019:
    185                      }
    186                  }
    187                  if(Transm)
   \   0219  30041B            JNB     Transm,?0023
   \   021C            ?0022:
    188                  {
    189                      if(!Redb--)
   \   021C  900257            MOV     DPTR,#Redb
   \   021F  E0                MOVX    A,@DPTR
   \   0220  FD                MOV     R5,A
   \   0221  A3                INC     DPTR
   \   0222  E0                MOVX    A,@DPTR
   \   0223  FC                MOV     R4,A
   \   0224  E0                MOVX    A,@DPTR
   \   0225  24FF              ADD     A,#255
   \   0227  F0                MOVX    @DPTR,A
   \   0228  900257            MOV     DPTR,#Redb
   \   022B  E0                MOVX    A,@DPTR
   \   022C  34FF              ADDC    A,#255
   \   022E  F0                MOVX    @DPTR,A
   \   022F  EC                MOV     A,R4
   \   0230  4D                ORL     A,R5
   \   0231  7004              JNZ     ?0025
   \   0233            ?0024:
    190                      {
    191                          RedL=0;
   \   0233  C297              CLR     P1.7
    192                          Transm=0;
   \   0235  C204              CLR     Transm
   \   0237            ?0025:
   \   0237            ?0023:
    193                      }
    194                  }
    195          
    196                  if(WdsEcount == 43200 || WsEcount == 21600)
   \   0237  900185            MOV     DPTR,#WdsEcount+1
   \   023A  E0                MOVX    A,@DPTR
   \   023B  64C0              XRL     A,#192
   \   023D  7008              JNZ     ?0304
   \   023F  900184            MOV     DPTR,#WdsEcount
   \   0242  E0                MOVX    A,@DPTR
   \   0243  64A8              XRL     A,#168
   \   0245  6010              JZ      ?0026
   \   0247            ?0304:
   \   0247  90017F            MOV     DPTR,#WsEcount+1
   \   024A  E0                MOVX    A,@DPTR
   \   024B  6460              XRL     A,#96
   \   024D  7006              JNZ     ?0305
   \   024F  90017E            MOV     DPTR,#WsEcount
   \   0252  E0                MOVX    A,@DPTR
   \   0253  6454              XRL     A,#84
   \   0255            ?0305:
   \   0255  700D              JNZ     ?0027
   \   0257            ?0028:
   \   0257            ?0029:
   \   0257            ?0026:
    197                  {
    198                      ES=0;
   \   0257  C2AC              CLR     IE.4
    199                      Wssta |= 2;         // 010
   \   0259  900001            MOV     DPTR,#Wssta
   \   025C  E0                MOVX    A,@DPTR
   \   025D  4402              ORL     A,#2
   \   025F  F0                MOVX    @DPTR,A
    200                      ES=1;
   \   0260  D2AC              SETB    IE.4
    201                  }
    202                  else
   \   0262  800B              SJMP    ?0030
   \   0264            ?0027:
    203                  {
    204                      ES=0;
   \   0264  C2AC              CLR     IE.4
    205                      Wssta &= 5;         // 101
   \   0266  900001            MOV     DPTR,#Wssta
   \   0269  E0                MOVX    A,@DPTR
   \   026A  5405              ANL     A,#5
   \   026C  F0                MOVX    @DPTR,A
    206                      ES=1;
   \   026D  D2AC              SETB    IE.4
   \   026F            ?0030:
    207                  }
    208          
    209                  if(WdsEcount == 43200 || WdEcount == 21600)
   \   026F  900185            MOV     DPTR,#WdsEcount+1
   \   0272  E0                MOVX    A,@DPTR
   \   0273  64C0              XRL     A,#192
   \   0275  7008              JNZ     ?0306
   \   0277  900184            MOV     DPTR,#WdsEcount
   \   027A  E0                MOVX    A,@DPTR
   \   027B  64A8              XRL     A,#168
   \   027D  6010              JZ      ?0031
   \   027F            ?0306:
   \   027F  90017D            MOV     DPTR,#WdEcount+1
   \   0282  E0                MOVX    A,@DPTR
   \   0283  6460              XRL     A,#96
   \   0285  7006              JNZ     ?0307
   \   0287  90017C            MOV     DPTR,#WdEcount
   \   028A  E0                MOVX    A,@DPTR
   \   028B  6454              XRL     A,#84
   \   028D            ?0307:
   \   028D  700D              JNZ     ?0032
   \   028F            ?0033:
   \   028F            ?0034:
   \   028F            ?0031:
    210                  {
    211                      ES=0;
   \   028F  C2AC              CLR     IE.4
    212                      Wdsta |= 2;         // 010
   \   0291  900000            MOV     DPTR,#Wdsta
   \   0294  E0                MOVX    A,@DPTR
   \   0295  4402              ORL     A,#2
   \   0297  F0                MOVX    @DPTR,A
    213                      ES=1;
   \   0298  D2AC              SETB    IE.4
    214                  }
    215                  else
   \   029A  800B              SJMP    ?0035
   \   029C            ?0032:
    216                  {
    217                      ES=0;
   \   029C  C2AC              CLR     IE.4
    218                      Wdsta &= 5;         // 101
   \   029E  900000            MOV     DPTR,#Wdsta
   \   02A1  E0                MOVX    A,@DPTR
   \   02A2  5405              ANL     A,#5
   \   02A4  F0                MOVX    @DPTR,A
    219                      ES=1;
   \   02A5  D2AC              SETB    IE.4
   \   02A7            ?0035:
    220                  }
    221          
    222                  if(Aderr)
   \   02A7  30090A            JNB     Aderr,?0037
   \   02AA            ?0036:
    223                  {
    224                      ES=0;
   \   02AA  C2AC              CLR     IE.4
    225                      Wdsta |= 4;         // 100
   \   02AC  E0                MOVX    A,@DPTR
   \   02AD  4404              ORL     A,#4
   \   02AF  F0                MOVX    @DPTR,A
    226                      ES=1;
   \   02B0  D2AC              SETB    IE.4
    227                  }
    228                  else
   \   02B2  8008              SJMP    ?0038
   \   02B4            ?0037:
    229                  {
    230                      ES=0;
   \   02B4  C2AC              CLR     IE.4
    231                      Wdsta &= 3;         // 011
   \   02B6  E0                MOVX    A,@DPTR
   \   02B7  5403              ANL     A,#3
   \   02B9  F0                MOVX    @DPTR,A
    232                      ES=1;
   \   02BA  D2AC              SETB    IE.4
   \   02BC            ?0038:
    233                  }
    234                  
    235                  if(Terror)
   \   02BC  300C14            JNB     Terror,?0040
   \   02BF            ?0039:
    236                  {
    237                      ES=0;
   \   02BF  C2AC              CLR     IE.4
    238                      Wssta |= 1;         // 001
   \   02C1  900001            MOV     DPTR,#Wssta
   \   02C4  E0                MOVX    A,@DPTR
   \   02C5  4401              ORL     A,#1
   \   02C7  F0                MOVX    @DPTR,A
    239                      Wdsta |= 1;
   \   02C8  900000            MOV     DPTR,#Wdsta
   \   02CB  E0                MOVX    A,@DPTR
   \   02CC  4401              ORL     A,#1
   \   02CE  F0                MOVX    @DPTR,A
    240                      ES=1;
   \   02CF  D2AC              SETB    IE.4
    241                  }
    242                  else
   \   02D1  8012              SJMP    ?0041
   \   02D3            ?0040:
    243                  {
    244                      ES=0;
   \   02D3  C2AC              CLR     IE.4
    245                      Wssta &= 6;         // 110
   \   02D5  900001            MOV     DPTR,#Wssta
   \   02D8  E0                MOVX    A,@DPTR
   \   02D9  5406              ANL     A,#6
   \   02DB  F0                MOVX    @DPTR,A
    246                      Wdsta &= 6;
   \   02DC  900000            MOV     DPTR,#Wdsta
   \   02DF  E0                MOVX    A,@DPTR
   \   02E0  5406              ANL     A,#6
   \   02E2  F0                MOVX    @DPTR,A
    247                      ES=1;
   \   02E3  D2AC              SETB    IE.4
   \   02E5            ?0041:
    248                  }
    249          
    250                  if(MeasQ == 1)
   \   02E5  300624            JNB     MeasQ,?0043
   \   02E8            ?0042:
    251                  {
    252                      EX0=0;
   \   02E8  C2A8              CLR     IE.0
    253                      MeasQ=0;
   \   02EA  C206              CLR     MeasQ
    254                      Quad_pros();
   \   02EC  120000            LCALL   $REFFN Quad_pros
    255                      if(Quad == 0)
   \   02EF  90000A            MOV     DPTR,#Quad
   \   02F2  E0                MOVX    A,@DPTR
   \   02F3  7015              JNZ     ?0045
   \   02F5            ?0044:
    256                      {
    257                          Sec_pros();
   \   02F5  120000            LCALL   $REFFN Sec_pros
    258                          if(Second == 0)
   \   02F8  90000C            MOV     DPTR,#Second
   \   02FB  E0                MOVX    A,@DPTR
   \   02FC  700C              JNZ     ?0047
   \   02FE            ?0046:
    259                          {
    260                              One_pros();
   \   02FE  120000            LCALL   $REFFN One_pros
    261                              if(Minute == 0)
   \   0301  90000B            MOV     DPTR,#Minute
   \   0304  E0                MOVX    A,@DPTR
   \   0305  7003              JNZ     ?0049
   \   0307            ?0048:
    262                                  Ten_pros();
   \   0307  120000            LCALL   $REFFN Ten_pros
   \   030A            ?0049:
   \   030A            ?0047:
   \   030A            ?0045:
    263                          }
    264                      }
    265                      EX0=1;
   \   030A  D2A8              SETB    IE.0
   \   030C            ?0043:
    266                  }
    267          
    268              }
    269          }
   \   030C  0201EE            LJMP    ?0013
    270          
    271          
    272          void Quad_pros(void)
    273          {
   \   030F            Quad_pros:
    274              unsigned int i,wssum;
    275              double sumsin,sumcos,ave;
    276                          //  Wind Speed Guest Average Calculate
    277              wssum=0;
   \   030F  900000            MOV     DPTR,#$LOCBX Quad_pros+2
   \   0312  E4                CLR     A
   \   0313  F0                MOVX    @DPTR,A
   \   0314  A3                INC     DPTR
   \   0315  F0                MOVX    @DPTR,A
    278              for(i=0;i != 12;i++)
   \   0316  900000            MOV     DPTR,#$LOCBX Quad_pros
   \   0319  F0                MOVX    @DPTR,A
   \   031A  A3                INC     DPTR
   \   031B  F0                MOVX    @DPTR,A
   \   031C            ?0051:
   \   031C  900000            MOV     DPTR,#$LOCBX Quad_pros+1
   \   031F  E0                MOVX    A,@DPTR
   \   0320  640C              XRL     A,#12
   \   0322  7006              JNZ     ?0308
   \   0324  900000            MOV     DPTR,#$LOCBX Quad_pros
   \   0327  E0                MOVX    A,@DPTR
   \   0328  6030              JZ      ?0050
   \   032A            ?0308:
   \   032A            ?0052:
    279                  wssum+=Wsdata[i];
   \   032A  900000            MOV     DPTR,#$LOCBX Quad_pros+1
   \   032D  E0                MOVX    A,@DPTR
   \   032E  25E0              ADD     A,ACC
   \   0330  242F              ADD     A,#LOW(Wsdata)
   \   0332  F582              MOV     DPL,A
   \   0334  E4                CLR     A
   \   0335  3400              ADDC    A,#HIGH(Wsdata)
   \   0337  F583              MOV     DPH,A
   \   0339  E0                MOVX    A,@DPTR
   \   033A  FD                MOV     R5,A
   \   033B  A3                INC     DPTR
   \   033C  E0                MOVX    A,@DPTR
   \   033D  FC                MOV     R4,A
   \   033E  900000            MOV     DPTR,#$LOCBX Quad_pros+3
   \   0341  E0                MOVX    A,@DPTR
   \   0342  2C                ADD     A,R4
   \   0343  F0                MOVX    @DPTR,A
   \   0344  900000            MOV     DPTR,#$LOCBX Quad_pros+2
   \   0347  E0                MOVX    A,@DPTR
   \   0348  3D                ADDC    A,R5
   \   0349  F0                MOVX    @DPTR,A
   \   034A  900000            MOV     DPTR,#$LOCBX Quad_pros+1
   \   034D  E0                MOVX    A,@DPTR
   \   034E  04                INC     A
   \   034F  F0                MOVX    @DPTR,A
   \   0350  900000            MOV     DPTR,#$LOCBX Quad_pros
   \   0353  7003              JNZ     ?0309
   \   0355  E0                MOVX    A,@DPTR
   \   0356  04                INC     A
   \   0357  F0                MOVX    @DPTR,A
   \   0358            ?0309:
   \   0358  80C2              SJMP    ?0051
   \   035A            ?0050:
    280              wssum = wssum/3.;
   \   035A  900000            MOV     DPTR,#$LOCBX Quad_pros+2
   \   035D  E0                MOVX    A,@DPTR
   \   035E  FF                MOV     R7,A
   \   035F  A3                INC     DPTR
   \   0360  E0                MOVX    A,@DPTR
   \   0361  FE                MOV     R6,A
   \   0362  900000            MOV     DPTR,#$LOCBX Quad_pros+2
   \   0365  E0                MOVX    A,@DPTR
   \   0366  FD                MOV     R5,A
   \   0367  A3                INC     DPTR
   \   0368  E0                MOVX    A,@DPTR
   \   0369  FC                MOV     R4,A
   \   036A  ED                MOV     A,R5
   \   036B  E4                CLR     A
   \   036C  FE                MOV     R6,A
   \   036D  FF                MOV     R7,A
   \   036E  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   0371  E4                CLR     A
   \   0372  F8                MOV     R0,A
   \   0373  F9                MOV     R1,A
   \   0374  7440              MOV     A,#64
   \   0376  FA                MOV     R2,A
   \   0377  FB                MOV     R3,A
   \   0378  120000            LCALL   ?F_DIV_L02
   \   037B  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    281              wssum = Ws_calc(wssum);
   \   037E  900000            MOV     DPTR,#$LOCBX Quad_pros+2
   \   0381  ED                MOV     A,R5
   \   0382  F0                MOVX    @DPTR,A
   \   0383  A3                INC     DPTR
   \   0384  EC                MOV     A,R4
   \   0385  F0                MOVX    @DPTR,A
   \   0386  900000            MOV     DPTR,#$LOCBX Quad_pros+2
   \   0389  E0                MOVX    A,@DPTR
   \   038A  FD                MOV     R5,A
   \   038B  A3                INC     DPTR
   \   038C  E0                MOVX    A,@DPTR
   \   038D  FC                MOV     R4,A
   \   038E  120000            LCALL   $REFFN Ws_calc
   \   0391  900000            MOV     DPTR,#$LOCBX Quad_pros+2
   \   0394  ED                MOV     A,R5
   \   0395  F0                MOVX    @DPTR,A
   \   0396  A3                INC     DPTR
   \   0397  EC                MOV     A,R4
   \   0398  F0                MOVX    @DPTR,A
    282              if(wssum > WsGmax)
   \   0399  FC                MOV     R4,A
   \   039A  90016F            MOV     DPTR,#WsGmax+1
   \   039D  E0                MOVX    A,@DPTR
   \   039E  C3                CLR     C
   \   039F  9C                SUBB    A,R4
   \   03A0  90016E            MOV     DPTR,#WsGmax
   \   03A3  E0                MOVX    A,@DPTR
   \   03A4  9D                SUBB    A,R5
   \   03A5  4003              JC      $+5
   \   03A7  0204EE            LJMP    ?0055
   \   03AA            ?0054:
    283              {
    284                  ES=0;
   \   03AA  C2AC              CLR     IE.4
    285                  WsGmax = wssum;
   \   03AC  ED                MOV     A,R5
   \   03AD  F0                MOVX    @DPTR,A
   \   03AE  A3                INC     DPTR
   \   03AF  EC                MOV     A,R4
   \   03B0  F0                MOVX    @DPTR,A
    286                  ES=1;
   \   03B1  D2AC              SETB    IE.4
    287                  sumcos=0;
   \   03B3  900000            MOV     DPTR,#$LOCBX Quad_pros+8
   \   03B6  E4                CLR     A
   \   03B7  F0                MOVX    @DPTR,A
   \   03B8  A3                INC     DPTR
   \   03B9  F0                MOVX    @DPTR,A
    288                  sumsin=0;
   \   03BA  900000            MOV     DPTR,#$LOCBX Quad_pros+4
   \   03BD  F0                MOVX    @DPTR,A
   \   03BE  A3                INC     DPTR
   \   03BF  F0                MOVX    @DPTR,A
    289                  for(i=0;i != 12; i++)
   \   03C0  900000            MOV     DPTR,#$LOCBX Quad_pros
   \   03C3  F0                MOVX    @DPTR,A
   \   03C4  A3                INC     DPTR
   \   03C5  F0                MOVX    @DPTR,A
   \   03C6            ?0057:
   \   03C6  900000            MOV     DPTR,#$LOCBX Quad_pros+1
   \   03C9  E0                MOVX    A,@DPTR
   \   03CA  640C              XRL     A,#12
   \   03CC  7006              JNZ     ?0310
   \   03CE  900000            MOV     DPTR,#$LOCBX Quad_pros
   \   03D1  E0                MOVX    A,@DPTR
   \   03D2  605E              JZ      ?0056
   \   03D4            ?0310:
   \   03D4            ?0058:
    290                  {
    291                      ave=(double)(Wddata[i]/10.)*(3.141592/180.);
   \   03D4  900000            MOV     DPTR,#$LOCBX Quad_pros+1
   \   03D7  E0                MOVX    A,@DPTR
   \   03D8  25E0              ADD     A,ACC
   \   03DA  2417              ADD     A,#LOW(Wddata)
   \   03DC  F582              MOV     DPL,A
   \   03DE  E4                CLR     A
   \   03DF  3400              ADDC    A,#HIGH(Wddata)
   \   03E1  F583              MOV     DPH,A
   \   03E3  E0                MOVX    A,@DPTR
   \   03E4  FD                MOV     R5,A
   \   03E5  A3                INC     DPTR
   \   03E6  E0                MOVX    A,@DPTR
   \   03E7  FC                MOV     R4,A
   \   03E8  ED                MOV     A,R5
   \   03E9  E4                CLR     A
   \   03EA  FE                MOV     R6,A
   \   03EB  FF                MOV     R7,A
   \   03EC  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   03EF  E4                CLR     A
   \   03F0  F8                MOV     R0,A
   \   03F1  F9                MOV     R1,A
   \   03F2  7A20              MOV     R2,#32
   \   03F4  7B41              MOV     R3,#65
   \   03F6  120000            LCALL   ?F_DIV_L02
   \   03F9  7833              MOV     R0,#51
   \   03FB  7B3C              MOV     R3,#60
   \   03FD  7A8E              MOV     R2,#142
   \   03FF  79FA              MOV     R1,#250
   \   0401  120000            LCALL   ?F_MUL_L02
    292                      sumsin += sin(ave);
   \   0404  900000            MOV     DPTR,#$LOCBX Quad_pros+12
   \   0407  120000            LCALL   ?STO_R4567_DPTR_L20
   \   040A  120000            LCALL   $REFFN sin
   \   040D  900000            MOV     DPTR,#$LOCBX Quad_pros+4
   \   0410  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    293                      sumcos += cos(ave);
   \   0413  900000            MOV     DPTR,#$LOCBX Quad_pros+12
   \   0416  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0419  120000            LCALL   $REFFN cos
   \   041C  900000            MOV     DPTR,#$LOCBX Quad_pros+8
   \   041F  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0422  900000            MOV     DPTR,#$LOCBX Quad_pros+1
   \   0425  E0                MOVX    A,@DPTR
   \   0426  04                INC     A
   \   0427  F0                MOVX    @DPTR,A
   \   0428  900000            MOV     DPTR,#$LOCBX Quad_pros
   \   042B  7003              JNZ     ?0311
   \   042D  E0                MOVX    A,@DPTR
   \   042E  04                INC     A
   \   042F  F0                MOVX    @DPTR,A
   \   0430            ?0311:
   \   0430  8094              SJMP    ?0057
   \   0432            ?0056:
    294                  }
    295                  ave=(double)(atan(sumsin/sumcos))*(180./3.141592);
   \   0432  900000            MOV     DPTR,#$LOCBX Quad_pros+4
   \   0435  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0438  A3                INC     DPTR
   \   0439  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   043C  120000            LCALL   ?F_DIV_L02
   \   043F  120000            LCALL   $REFFN atan
   \   0442  792E              MOV     R1,#46
   \   0444  7B42              MOV     R3,#66
   \   0446  7A65              MOV     R2,#101
   \   0448  78E4              MOV     R0,#228
   \   044A  120000            LCALL   ?F_MUL_L02
   \   044D  900000            MOV     DPTR,#$LOCBX Quad_pros+12
   \   0450  120000            LCALL   ?STO_R4567_DPTR_L20
    296                  if(sumsin < 0 && sumcos > 0)
   \   0453  900000            MOV     DPTR,#$LOCBX Quad_pros+4
   \   0456  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0459  EF                MOV     A,R7
   \   045A  4E                ORL     A,R6
   \   045B  6003              JZ      ?0312
   \   045D  EF                MOV     A,R7
   \   045E  5480              ANL     A,#128
   \   0460            ?0312:
   \   0460  B2E7              CPL     ACC.7
   \   0462  701F              JNZ     ?0061
   \   0464  A3                INC     DPTR
   \   0465  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0468  EF                MOV     A,R7
   \   0469  4E                ORL     A,R6
   \   046A  6005              JZ      ?0313
   \   046C  EF                MOV     A,R7
   \   046D  5480              ANL     A,#128
   \   046F  B2E7              CPL     ACC.7
   \   0471            ?0313:
   \   0471  B2E7              CPL     ACC.7
   \   0473  700E              JNZ     ?0061
   \   0475            ?0063:
   \   0475            ?0062:
   \   0475            ?0060:
    297                      ave+=360.;
   \   0475  A3                INC     DPTR
   \   0476  7C00              MOV     R4,#0
   \   0478  7D00              MOV     R5,#0
   \   047A  7EB4              MOV     R6,#180
   \   047C  7F43              MOV     R7,#67
   \   047E  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0481  804C              SJMP    ?0064
   \   0483            ?0061:
    298                  else if((sumsin > 0 && sumcos < 0) || (sumsin < 0 && sumcos < 0))
   \   0483  900000            MOV     DPTR,#$LOCBX Quad_pros+4
   \   0486  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0489  EF                MOV     A,R7
   \   048A  4E                ORL     A,R6
   \   048B  6005              JZ      ?0314
   \   048D  EF                MOV     A,R7
   \   048E  5480              ANL     A,#128
   \   0490  B2E7              CPL     ACC.7
   \   0492            ?0314:
   \   0492  B2E7              CPL     ACC.7
   \   0494  700D              JNZ     ?0067
   \   0496  A3                INC     DPTR
   \   0497  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   049A  EF                MOV     A,R7
   \   049B  4E                ORL     A,R6
   \   049C  6003              JZ      ?0315
   \   049E  EF                MOV     A,R7
   \   049F  5480              ANL     A,#128
   \   04A1            ?0315:
   \   04A1  7020              JNZ     ?0065
   \   04A3            ?0068:
   \   04A3            ?0067:
   \   04A3  900000            MOV     DPTR,#$LOCBX Quad_pros+4
   \   04A6  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   04A9  EF                MOV     A,R7
   \   04AA  4E                ORL     A,R6
   \   04AB  6003              JZ      ?0316
   \   04AD  EF                MOV     A,R7
   \   04AE  5480              ANL     A,#128
   \   04B0            ?0316:
   \   04B0  B2E7              CPL     ACC.7
   \   04B2  701B              JNZ     ?0066
   \   04B4  A3                INC     DPTR
   \   04B5  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   04B8  EF                MOV     A,R7
   \   04B9  4E                ORL     A,R6
   \   04BA  6003              JZ      ?0317
   \   04BC  EF                MOV     A,R7
   \   04BD  5480              ANL     A,#128
   \   04BF            ?0317:
   \   04BF  B2E7              CPL     ACC.7
   \   04C1  700C              JNZ     ?0066
   \   04C3            ?0072:
   \   04C3            ?0071:
   \   04C3            ?0069:
   \   04C3            ?0070:
   \   04C3            ?0065:
    299                      ave+=180.;
   \   04C3  A3                INC     DPTR
   \   04C4  7C00              MOV     R4,#0
   \   04C6  7D00              MOV     R5,#0
   \   04C8  7E34              MOV     R6,#52
   \   04CA  7F43              MOV     R7,#67
   \   04CC  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   04CF            ?0066:
   \   04CF            ?0064:
    300                  ES=0;
   \   04CF  C2AC              CLR     IE.4
    301                  WdGmax=(double)ave*10.;
   \   04D1  900000            MOV     DPTR,#$LOCBX Quad_pros+12
   \   04D4  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   04D7  E4                CLR     A
   \   04D8  F8                MOV     R0,A
   \   04D9  F9                MOV     R1,A
   \   04DA  7A20              MOV     R2,#32
   \   04DC  7B41              MOV     R3,#65
   \   04DE  120000            LCALL   ?F_MUL_L02
   \   04E1  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   04E4  90016C            MOV     DPTR,#WdGmax
   \   04E7  ED                MOV     A,R5
   \   04E8  F0                MOVX    @DPTR,A
   \   04E9  A3                INC     DPTR
   \   04EA  EC                MOV     A,R4
   \   04EB  F0                MOVX    @DPTR,A
    302                  ES=1;
   \   04EC  D2AC              SETB    IE.4
   \   04EE            ?0055:
    303              }
    304              TEcount=0;
   \   04EE  900186            MOV     DPTR,#TEcount
   \   04F1  E4                CLR     A
   \   04F2  F0                MOVX    @DPTR,A
   \   04F3  A3                INC     DPTR
   \   04F4  F0                MOVX    @DPTR,A
    305          }
   \   04F5  22                RET
    306          
    307          void Sec_pros(void)
    308          {
   \   04F6            Sec_pros:
    309              unsigned int i,wssum;
    310              double ave,ave2;
    311          
    312              sinSec=0;
   \   04F6  900267            MOV     DPTR,#sinSec
   \   04F9  E4                CLR     A
   \   04FA  F0                MOVX    @DPTR,A
   \   04FB  A3                INC     DPTR
   \   04FC  F0                MOVX    @DPTR,A
    313              cosSec=0;
   \   04FD  900273            MOV     DPTR,#cosSec
   \   0500  F0                MOVX    @DPTR,A
   \   0501  A3                INC     DPTR
   \   0502  F0                MOVX    @DPTR,A
    314              sumSec=0;
   \   0503  90027F            MOV     DPTR,#sumSec
   \   0506  F0                MOVX    @DPTR,A
   \   0507  A3                INC     DPTR
   \   0508  F0                MOVX    @DPTR,A
    315              for(i=9; i != 13; i++)
   \   0509  900000            MOV     DPTR,#$LOCBX Sec_pros
   \   050C  F0                MOVX    @DPTR,A
   \   050D  A3                INC     DPTR
   \   050E  7409              MOV     A,#9
   \   0510  F0                MOVX    @DPTR,A
   \   0511            ?0074:
   \   0511  900000            MOV     DPTR,#$LOCBX Sec_pros+1
   \   0514  E0                MOVX    A,@DPTR
   \   0515  640D              XRL     A,#13
   \   0517  7009              JNZ     ?0318
   \   0519  900000            MOV     DPTR,#$LOCBX Sec_pros
   \   051C  E0                MOVX    A,@DPTR
   \   051D  7003              JNZ     $+5
   \   051F  02063B            LJMP    ?0073
   \   0522            ?0318:
   \   0522            ?0075:
    316              {
    317                  wssum   =  Wsdata[(Wpoint+i)%12];      // Wind Speed Sum
   \   0522  900047            MOV     DPTR,#Wpoint
   \   0525  E0                MOVX    A,@DPTR
   \   0526  7D00              MOV     R5,#0
   \   0528  900000            MOV     DPTR,#$LOCBX Sec_pros+1
   \   052B  FE                MOV     R6,A
   \   052C  E0                MOVX    A,@DPTR
   \   052D  2E                ADD     A,R6
   \   052E  FC                MOV     R4,A
   \   052F  900000            MOV     DPTR,#$LOCBX Sec_pros
   \   0532  E0                MOVX    A,@DPTR
   \   0533  3D                ADDC    A,R5
   \   0534  FD                MOV     R5,A
   \   0535  E4                CLR     A
   \   0536  FB                MOV     R3,A
   \   0537  7A0C              MOV     R2,#12
   \   0539  EC                MOV     A,R4
   \   053A  F8                MOV     R0,A
   \   053B  ED                MOV     A,R5
   \   053C  F9                MOV     R1,A
   \   053D  120000            LCALL   ?UI_MOD_L00
   \   0540  E8                MOV     A,R0
   \   0541  25E0              ADD     A,ACC
   \   0543  242F              ADD     A,#LOW(Wsdata)
   \   0545  F582              MOV     DPL,A
   \   0547  E4                CLR     A
   \   0548  3400              ADDC    A,#HIGH(Wsdata)
   \   054A  F583              MOV     DPH,A
   \   054C  E0                MOVX    A,@DPTR
   \   054D  FD                MOV     R5,A
   \   054E  A3                INC     DPTR
   \   054F  E0                MOVX    A,@DPTR
    318                  sumSec +=  wssum;
   \   0550  FC                MOV     R4,A
   \   0551  ED                MOV     A,R5
   \   0552  FF                MOV     R7,A
   \   0553  EC                MOV     A,R4
   \   0554  FE                MOV     R6,A
   \   0555  900280            MOV     DPTR,#sumSec+1
   \   0558  E0                MOVX    A,@DPTR
   \   0559  2E                ADD     A,R6
   \   055A  F0                MOVX    @DPTR,A
   \   055B  90027F            MOV     DPTR,#sumSec
   \   055E  E0                MOVX    A,@DPTR
   \   055F  3F                ADDC    A,R7
   \   0560  F0                MOVX    @DPTR,A
    319                  sumOne +=  wssum;
   \   0561  900000            MOV     DPTR,#$LOCBX Sec_pros+2
   \   0564  ED                MOV     A,R5
   \   0565  F0                MOVX    @DPTR,A
   \   0566  A3                INC     DPTR
   \   0567  EC                MOV     A,R4
   \   0568  F0                MOVX    @DPTR,A
   \   0569  7E00              MOV     R6,#0
   \   056B  7F00              MOV     R7,#0
   \   056D  900281            MOV     DPTR,#sumOne
   \   0570  120000            LCALL   ?L_ADD_ASG_DPTR_R4567_L01
    320                  sumTen +=  wssum;
   \   0573  900000            MOV     DPTR,#$LOCBX Sec_pros+2
   \   0576  E0                MOVX    A,@DPTR
   \   0577  FD                MOV     R5,A
   \   0578  A3                INC     DPTR
   \   0579  E0                MOVX    A,@DPTR
   \   057A  FC                MOV     R4,A
   \   057B  7E00              MOV     R6,#0
   \   057D  7F00              MOV     R7,#0
   \   057F  900285            MOV     DPTR,#sumTen
   \   0582  120000            LCALL   ?L_ADD_ASG_DPTR_R4567_L01
    321                                                         // Wind Direction Sum
    322                  ave     = (double)(Wddata[(Wpoint+i)%12]/10.)*(3.141592/180.);
   \   0585  900047            MOV     DPTR,#Wpoint
   \   0588  E0                MOVX    A,@DPTR
   \   0589  7D00              MOV     R5,#0
   \   058B  900000            MOV     DPTR,#$LOCBX Sec_pros+1
   \   058E  FE                MOV     R6,A
   \   058F  E0                MOVX    A,@DPTR
   \   0590  2E                ADD     A,R6
   \   0591  FC                MOV     R4,A
   \   0592  900000            MOV     DPTR,#$LOCBX Sec_pros
   \   0595  E0                MOVX    A,@DPTR
   \   0596  3D                ADDC    A,R5
   \   0597  FD                MOV     R5,A
   \   0598  E4                CLR     A
   \   0599  FB                MOV     R3,A
   \   059A  7A0C              MOV     R2,#12
   \   059C  EC                MOV     A,R4
   \   059D  F8                MOV     R0,A
   \   059E  ED                MOV     A,R5
   \   059F  F9                MOV     R1,A
   \   05A0  120000            LCALL   ?UI_MOD_L00
   \   05A3  E8                MOV     A,R0
   \   05A4  25E0              ADD     A,ACC
   \   05A6  2417              ADD     A,#LOW(Wddata)
   \   05A8  F582              MOV     DPL,A
   \   05AA  E4                CLR     A
   \   05AB  3400              ADDC    A,#HIGH(Wddata)
   \   05AD  F583              MOV     DPH,A
   \   05AF  E0                MOVX    A,@DPTR
   \   05B0  FD                MOV     R5,A
   \   05B1  A3                INC     DPTR
   \   05B2  E0                MOVX    A,@DPTR
   \   05B3  FC                MOV     R4,A
   \   05B4  ED                MOV     A,R5
   \   05B5  E4                CLR     A
   \   05B6  FE                MOV     R6,A
   \   05B7  FF                MOV     R7,A
   \   05B8  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   05BB  E4                CLR     A
   \   05BC  F8                MOV     R0,A
   \   05BD  F9                MOV     R1,A
   \   05BE  7A20              MOV     R2,#32
   \   05C0  7B41              MOV     R3,#65
   \   05C2  120000            LCALL   ?F_DIV_L02
   \   05C5  7833              MOV     R0,#51
   \   05C7  7B3C              MOV     R3,#60
   \   05C9  7A8E              MOV     R2,#142
   \   05CB  79FA              MOV     R1,#250
   \   05CD  120000            LCALL   ?F_MUL_L02
    323                  ave2    = sin(ave);
   \   05D0  900000            MOV     DPTR,#$LOCBX Sec_pros+4
   \   05D3  120000            LCALL   ?STO_R4567_DPTR_L20
   \   05D6  120000            LCALL   $REFFN sin
    324                  sinSec += ave2;
   \   05D9  900000            MOV     DPTR,#$LOCBX Sec_pros+8
   \   05DC  120000            LCALL   ?STO_R4567_DPTR_L20
   \   05DF  900267            MOV     DPTR,#sinSec
   \   05E2  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    325                  sinOne += ave2;
   \   05E5  900000            MOV     DPTR,#$LOCBX Sec_pros+8
   \   05E8  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   05EB  90026B            MOV     DPTR,#sinOne
   \   05EE  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    326                  sinTen += ave2;
   \   05F1  900000            MOV     DPTR,#$LOCBX Sec_pros+8
   \   05F4  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   05F7  90026F            MOV     DPTR,#sinTen
   \   05FA  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    327                  ave2    = cos(ave);
   \   05FD  900000            MOV     DPTR,#$LOCBX Sec_pros+4
   \   0600  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0603  120000            LCALL   $REFFN cos
    328                  cosSec += ave2;
   \   0606  900000            MOV     DPTR,#$LOCBX Sec_pros+8
   \   0609  120000            LCALL   ?STO_R4567_DPTR_L20
   \   060C  900273            MOV     DPTR,#cosSec
   \   060F  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    329                  cosOne += ave2;
   \   0612  900000            MOV     DPTR,#$LOCBX Sec_pros+8
   \   0615  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0618  900277            MOV     DPTR,#cosOne
   \   061B  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    330                  cosTen += ave2;
   \   061E  900000            MOV     DPTR,#$LOCBX Sec_pros+8
   \   0621  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0624  90027B            MOV     DPTR,#cosTen
   \   0627  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   062A  900000            MOV     DPTR,#$LOCBX Sec_pros+1
   \   062D  E0                MOVX    A,@DPTR
   \   062E  04                INC     A
   \   062F  F0                MOVX    @DPTR,A
   \   0630  900000            MOV     DPTR,#$LOCBX Sec_pros
   \   0633  7003              JNZ     ?0319
   \   0635  E0                MOVX    A,@DPTR
   \   0636  04                INC     A
   \   0637  F0                MOVX    @DPTR,A
   \   0638            ?0319:
   \   0638  020511            LJMP    ?0074
   \   063B            ?0073:
    331              }
    332              ave=(double)(atan(sinSec/cosSec))*(180./3.141592);
   \   063B  900267            MOV     DPTR,#sinSec
   \   063E  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0641  900273            MOV     DPTR,#cosSec
   \   0644  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   0647  120000            LCALL   ?F_DIV_L02
   \   064A  120000            LCALL   $REFFN atan
   \   064D  792E              MOV     R1,#46
   \   064F  7B42              MOV     R3,#66
   \   0651  7A65              MOV     R2,#101
   \   0653  78E4              MOV     R0,#228
   \   0655  120000            LCALL   ?F_MUL_L02
   \   0658  900000            MOV     DPTR,#$LOCBX Sec_pros+4
   \   065B  120000            LCALL   ?STO_R4567_DPTR_L20
    333              if(sinSec < 0 && cosSec > 0)
   \   065E  900267            MOV     DPTR,#sinSec
   \   0661  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0664  EF                MOV     A,R7
   \   0665  4E                ORL     A,R6
   \   0666  6003              JZ      ?0320
   \   0668  EF                MOV     A,R7
   \   0669  5480              ANL     A,#128
   \   066B            ?0320:
   \   066B  B2E7              CPL     ACC.7
   \   066D  7023              JNZ     ?0078
   \   066F  900273            MOV     DPTR,#cosSec
   \   0672  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0675  EF                MOV     A,R7
   \   0676  4E                ORL     A,R6
   \   0677  6005              JZ      ?0321
   \   0679  EF                MOV     A,R7
   \   067A  5480              ANL     A,#128
   \   067C  B2E7              CPL     ACC.7
   \   067E            ?0321:
   \   067E  B2E7              CPL     ACC.7
   \   0680  7010              JNZ     ?0078
   \   0682            ?0080:
   \   0682            ?0079:
   \   0682            ?0077:
    334                  ave+=360.;
   \   0682  900000            MOV     DPTR,#$LOCBX Sec_pros+4
   \   0685  7C00              MOV     R4,#0
   \   0687  7D00              MOV     R5,#0
   \   0689  7EB4              MOV     R6,#180
   \   068B  7F43              MOV     R7,#67
   \   068D  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0690  8052              SJMP    ?0081
   \   0692            ?0078:
    335              else if((sinSec > 0 && cosSec < 0) || (sinSec < 0 && cosSec < 0))
   \   0692  900267            MOV     DPTR,#sinSec
   \   0695  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0698  EF                MOV     A,R7
   \   0699  4E                ORL     A,R6
   \   069A  6005              JZ      ?0322
   \   069C  EF                MOV     A,R7
   \   069D  5480              ANL     A,#128
   \   069F  B2E7              CPL     ACC.7
   \   06A1            ?0322:
   \   06A1  B2E7              CPL     ACC.7
   \   06A3  700F              JNZ     ?0084
   \   06A5  900273            MOV     DPTR,#cosSec
   \   06A8  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   06AB  EF                MOV     A,R7
   \   06AC  4E                ORL     A,R6
   \   06AD  6003              JZ      ?0323
   \   06AF  EF                MOV     A,R7
   \   06B0  5480              ANL     A,#128
   \   06B2            ?0323:
   \   06B2  7022              JNZ     ?0082
   \   06B4            ?0085:
   \   06B4            ?0084:
   \   06B4  900267            MOV     DPTR,#sinSec
   \   06B7  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   06BA  EF                MOV     A,R7
   \   06BB  4E                ORL     A,R6
   \   06BC  6003              JZ      ?0324
   \   06BE  EF                MOV     A,R7
   \   06BF  5480              ANL     A,#128
   \   06C1            ?0324:
   \   06C1  B2E7              CPL     ACC.7
   \   06C3  701F              JNZ     ?0083
   \   06C5  900273            MOV     DPTR,#cosSec
   \   06C8  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   06CB  EF                MOV     A,R7
   \   06CC  4E                ORL     A,R6
   \   06CD  6003              JZ      ?0325
   \   06CF  EF                MOV     A,R7
   \   06D0  5480              ANL     A,#128
   \   06D2            ?0325:
   \   06D2  B2E7              CPL     ACC.7
   \   06D4  700E              JNZ     ?0083
   \   06D6            ?0089:
   \   06D6            ?0088:
   \   06D6            ?0086:
   \   06D6            ?0087:
   \   06D6            ?0082:
    336                  ave+=180.;
   \   06D6  900000            MOV     DPTR,#$LOCBX Sec_pros+4
   \   06D9  7C00              MOV     R4,#0
   \   06DB  7D00              MOV     R5,#0
   \   06DD  7E34              MOV     R6,#52
   \   06DF  7F43              MOV     R7,#67
   \   06E1  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   06E4            ?0083:
   \   06E4            ?0081:
    337          
    338              Wsreal=sumSec;
   \   06E4  90027F            MOV     DPTR,#sumSec
   \   06E7  E0                MOVX    A,@DPTR
   \   06E8  FD                MOV     R5,A
   \   06E9  A3                INC     DPTR
   \   06EA  E0                MOVX    A,@DPTR
   \   06EB  90000F            MOV     DPTR,#Wsreal
   \   06EE  CD                XCH     A,R5
   \   06EF  F0                MOVX    @DPTR,A
   \   06F0  A3                INC     DPTR
   \   06F1  CD                XCH     A,R5
   \   06F2  F0                MOVX    @DPTR,A
    339              i=Ws_calc(sumSec);
   \   06F3  90027F            MOV     DPTR,#sumSec
   \   06F6  E0                MOVX    A,@DPTR
   \   06F7  FD                MOV     R5,A
   \   06F8  A3                INC     DPTR
   \   06F9  E0                MOVX    A,@DPTR
   \   06FA  FC                MOV     R4,A
   \   06FB  120000            LCALL   $REFFN Ws_calc
   \   06FE  900000            MOV     DPTR,#$LOCBX Sec_pros
   \   0701  ED                MOV     A,R5
   \   0702  F0                MOVX    @DPTR,A
   \   0703  A3                INC     DPTR
   \   0704  EC                MOV     A,R4
   \   0705  F0                MOVX    @DPTR,A
    340              ES=0;
   \   0706  C2AC              CLR     IE.4
    341              WsSec=i;
    342              WdSec=(double)ave*10.;
   \   0708  9000C2            MOV     DPTR,#WsSec
   \   070B  CD                XCH     A,R5
   \   070C  F0                MOVX    @DPTR,A
   \   070D  A3                INC     DPTR
   \   070E  CD                XCH     A,R5
   \   070F  F0                MOVX    @DPTR,A
   \   0710  900000            MOV     DPTR,#$LOCBX Sec_pros+4
   \   0713  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0716  E4                CLR     A
   \   0717  F8                MOV     R0,A
   \   0718  F9                MOV     R1,A
   \   0719  7A20              MOV     R2,#32
   \   071B  7B41              MOV     R3,#65
   \   071D  120000            LCALL   ?F_MUL_L02
   \   0720  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    343              WsSecd[Second]=WsSec;
   \   0723  9000C2            MOV     DPTR,#WsSec
   \   0726  E0                MOVX    A,@DPTR
   \   0727  FF                MOV     R7,A
   \   0728  A3                INC     DPTR
   \   0729  E0                MOVX    A,@DPTR
   \   072A  FE                MOV     R6,A
   \   072B  90000C            MOV     DPTR,#Second
   \   072E  E0                MOVX    A,@DPTR
   \   072F  25E0              ADD     A,ACC
   \   0731  24C4              ADD     A,#LOW(WsSecd)
   \   0733  F582              MOV     DPL,A
   \   0735  E4                CLR     A
   \   0736  3400              ADDC    A,#HIGH(WsSecd)
   \   0738  F583              MOV     DPH,A
   \   073A  EF                MOV     A,R7
   \   073B  F0                MOVX    @DPTR,A
   \   073C  A3                INC     DPTR
   \   073D  EE                MOV     A,R6
   \   073E  F0                MOVX    @DPTR,A
    344              WdSecd[Second]=WdSec;
   \   073F  90000C            MOV     DPTR,#Second
   \   0742  E0                MOVX    A,@DPTR
   \   0743  25E0              ADD     A,ACC
   \   0745  244A              ADD     A,#LOW(WdSecd)
   \   0747  F582              MOV     DPL,A
   \   0749  E4                CLR     A
   \   074A  3400              ADDC    A,#HIGH(WdSecd)
   \   074C  F583              MOV     DPH,A
   \   074E  ED                MOV     A,R5
   \   074F  F0                MOVX    @DPTR,A
   \   0750  A3                INC     DPTR
   \   0751  EC                MOV     A,R4
   \   0752  F0                MOVX    @DPTR,A
   \   0753  900048            MOV     DPTR,#WdSec
   \   0756  ED                MOV     A,R5
   \   0757  F0                MOVX    @DPTR,A
   \   0758  A3                INC     DPTR
   \   0759  EC                MOV     A,R4
   \   075A  F0                MOVX    @DPTR,A
    345              ES=1;
   \   075B  D2AC              SETB    IE.4
    346              if(Init)
   \   075D  200703            JB      Init,$+6
   \   0760  020811            LJMP    ?0091
   \   0763            ?0090:
    347              {
    348                  Init=0;
   \   0763  C207              CLR     Init
    349                  ES=0;
   \   0765  C2AC              CLR     IE.4
    350                  WdMin  = WdSec;
   \   0767  90013C            MOV     DPTR,#WdMin
   \   076A  CD                XCH     A,R5
   \   076B  F0                MOVX    @DPTR,A
   \   076C  A3                INC     DPTR
   \   076D  CD                XCH     A,R5
   \   076E  F0                MOVX    @DPTR,A
    351                  WdTen  = WdMin;
   \   076F  90013C            MOV     DPTR,#WdMin
   \   0772  E0                MOVX    A,@DPTR
   \   0773  FD                MOV     R5,A
   \   0774  A3                INC     DPTR
   \   0775  E0                MOVX    A,@DPTR
   \   0776  90016A            MOV     DPTR,#WdTen
   \   0779  CD                XCH     A,R5
   \   077A  F0                MOVX    @DPTR,A
   \   077B  A3                INC     DPTR
   \   077C  CD                XCH     A,R5
   \   077D  F0                MOVX    @DPTR,A
    352                  WdGmax = WdSec;
   \   077E  900048            MOV     DPTR,#WdSec
   \   0781  E0                MOVX    A,@DPTR
   \   0782  FD                MOV     R5,A
   \   0783  A3                INC     DPTR
   \   0784  E0                MOVX    A,@DPTR
   \   0785  90016C            MOV     DPTR,#WdGmax
   \   0788  CD                XCH     A,R5
   \   0789  F0                MOVX    @DPTR,A
   \   078A  A3                INC     DPTR
   \   078B  CD                XCH     A,R5
   \   078C  F0                MOVX    @DPTR,A
    353                  WdMmax = WdSec;
   \   078D  900048            MOV     DPTR,#WdSec
   \   0790  E0                MOVX    A,@DPTR
   \   0791  FD                MOV     R5,A
   \   0792  A3                INC     DPTR
   \   0793  E0                MOVX    A,@DPTR
   \   0794  900170            MOV     DPTR,#WdMmax
   \   0797  CD                XCH     A,R5
   \   0798  F0                MOVX    @DPTR,A
   \   0799  A3                INC     DPTR
   \   079A  CD                XCH     A,R5
   \   079B  F0                MOVX    @DPTR,A
    354                  WdTmax = WdSec;
   \   079C  900048            MOV     DPTR,#WdSec
   \   079F  E0                MOVX    A,@DPTR
   \   07A0  FD                MOV     R5,A
   \   07A1  A3                INC     DPTR
   \   07A2  E0                MOVX    A,@DPTR
   \   07A3  900174            MOV     DPTR,#WdTmax
   \   07A6  CD                XCH     A,R5
   \   07A7  F0                MOVX    @DPTR,A
   \   07A8  A3                INC     DPTR
   \   07A9  CD                XCH     A,R5
   \   07AA  F0                MOVX    @DPTR,A
    355                  WdThvalue=WdSec;
   \   07AB  900048            MOV     DPTR,#WdSec
   \   07AE  E0                MOVX    A,@DPTR
   \   07AF  FD                MOV     R5,A
   \   07B0  A3                INC     DPTR
   \   07B1  E0                MOVX    A,@DPTR
   \   07B2  900180            MOV     DPTR,#WdThvalue
   \   07B5  CD                XCH     A,R5
   \   07B6  F0                MOVX    @DPTR,A
   \   07B7  A3                INC     DPTR
   \   07B8  CD                XCH     A,R5
   \   07B9  F0                MOVX    @DPTR,A
    356          
    357                  WsSec  = WsSec*1.33;
   \   07BA  9000C2            MOV     DPTR,#WsSec
   \   07BD  E0                MOVX    A,@DPTR
   \   07BE  FD                MOV     R5,A
   \   07BF  A3                INC     DPTR
   \   07C0  E0                MOVX    A,@DPTR
   \   07C1  FC                MOV     R4,A
   \   07C2  ED                MOV     A,R5
   \   07C3  E4                CLR     A
   \   07C4  FE                MOV     R6,A
   \   07C5  FF                MOV     R7,A
   \   07C6  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   07C9  793D              MOV     R1,#61
   \   07CB  7B3F              MOV     R3,#63
   \   07CD  7871              MOV     R0,#113
   \   07CF  7AAA              MOV     R2,#170
   \   07D1  120000            LCALL   ?F_MUL_L02
   \   07D4  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    358                  WsMin  = WsSec;
   \   07D7  900152            MOV     DPTR,#WsMin
   \   07DA  ED                MOV     A,R5
   \   07DB  F0                MOVX    @DPTR,A
   \   07DC  A3                INC     DPTR
   \   07DD  EC                MOV     A,R4
   \   07DE  F0                MOVX    @DPTR,A
    359                  WsTen  = WsSec;
   \   07DF  900168            MOV     DPTR,#WsTen
   \   07E2  ED                MOV     A,R5
   \   07E3  F0                MOVX    @DPTR,A
   \   07E4  A3                INC     DPTR
   \   07E5  EC                MOV     A,R4
   \   07E6  F0                MOVX    @DPTR,A
    360                  WsGmax = WsSec;
   \   07E7  90016E            MOV     DPTR,#WsGmax
   \   07EA  ED                MOV     A,R5
   \   07EB  F0                MOVX    @DPTR,A
   \   07EC  A3                INC     DPTR
   \   07ED  EC                MOV     A,R4
   \   07EE  F0                MOVX    @DPTR,A
    361                  WsMmax = WsSec;
   \   07EF  900172            MOV     DPTR,#WsMmax
   \   07F2  ED                MOV     A,R5
   \   07F3  F0                MOVX    @DPTR,A
   \   07F4  A3                INC     DPTR
   \   07F5  EC                MOV     A,R4
   \   07F6  F0                MOVX    @DPTR,A
    362                  WsTmax = WsSec;
   \   07F7  900176            MOV     DPTR,#WsTmax
   \   07FA  ED                MOV     A,R5
   \   07FB  F0                MOVX    @DPTR,A
   \   07FC  A3                INC     DPTR
   \   07FD  EC                MOV     A,R4
   \   07FE  F0                MOVX    @DPTR,A
    363                  WsThvalue=WsSec;
   \   07FF  900182            MOV     DPTR,#WsThvalue
   \   0802  ED                MOV     A,R5
   \   0803  F0                MOVX    @DPTR,A
   \   0804  A3                INC     DPTR
   \   0805  EC                MOV     A,R4
   \   0806  F0                MOVX    @DPTR,A
   \   0807  9000C2            MOV     DPTR,#WsSec
   \   080A  ED                MOV     A,R5
   \   080B  F0                MOVX    @DPTR,A
   \   080C  A3                INC     DPTR
   \   080D  EC                MOV     A,R4
   \   080E  F0                MOVX    @DPTR,A
    364                  ES=1;
   \   080F  D2AC              SETB    IE.4
   \   0811            ?0091:
    365              }
    366          
    367              if(WsSec != WsEvalue)
   \   0811  9000C2            MOV     DPTR,#WsSec
   \   0814  E0                MOVX    A,@DPTR
   \   0815  FD                MOV     R5,A
   \   0816  A3                INC     DPTR
   \   0817  E0                MOVX    A,@DPTR
   \   0818  FC                MOV     R4,A
   \   0819  90017B            MOV     DPTR,#WsEvalue+1
   \   081C  E0                MOVX    A,@DPTR
   \   081D  6C                XRL     A,R4
   \   081E  7007              JNZ     ?0326
   \   0820  90017A            MOV     DPTR,#WsEvalue
   \   0823  E0                MOVX    A,@DPTR
   \   0824  6D                XRL     A,R5
   \   0825  603A              JZ      ?0093
   \   0827            ?0326:
   \   0827            ?0092:
    368              {
    369                  if(WdSec == WdEvalue)
   \   0827  900048            MOV     DPTR,#WdSec
   \   082A  E0                MOVX    A,@DPTR
   \   082B  FD                MOV     R5,A
   \   082C  A3                INC     DPTR
   \   082D  E0                MOVX    A,@DPTR
   \   082E  FC                MOV     R4,A
   \   082F  900179            MOV     DPTR,#WdEvalue+1
   \   0832  E0                MOVX    A,@DPTR
   \   0833  6C                XRL     A,R4
   \   0834  7005              JNZ     ?0327
   \   0836  900178            MOV     DPTR,#WdEvalue
   \   0839  E0                MOVX    A,@DPTR
   \   083A  6D                XRL     A,R5
   \   083B            ?0327:
   \   083B  701D              JNZ     ?0095
   \   083D            ?0094:
    370                  {
    371                      if(WdEcount < 21600)    /* Wd = 6 Hour Fix Then Error */
   \   083D  C3                CLR     C
   \   083E  90017D            MOV     DPTR,#WdEcount+1
   \   0841  E0                MOVX    A,@DPTR
   \   0842  9460              SUBB    A,#96
   \   0844  90017C            MOV     DPTR,#WdEcount
   \   0847  E0                MOVX    A,@DPTR
   \   0848  9454              SUBB    A,#84
   \   084A  500C              JNC     ?0097
   \   084C            ?0096:
    372                          WdEcount++;
   \   084C  A3                INC     DPTR
   \   084D  E0                MOVX    A,@DPTR
   \   084E  04                INC     A
   \   084F  F0                MOVX    @DPTR,A
   \   0850  90017C            MOV     DPTR,#WdEcount
   \   0853  7003              JNZ     ?0328
   \   0855  E0                MOVX    A,@DPTR
   \   0856  04                INC     A
   \   0857  F0                MOVX    @DPTR,A
   \   0858            ?0328:
   \   0858            ?0097:
    373                  }
    374                  else
   \   0858  8007              SJMP    ?0098
   \   085A            ?0095:
    375                      WdEcount=0;
   \   085A  90017C            MOV     DPTR,#WdEcount
   \   085D  E4                CLR     A
   \   085E  F0                MOVX    @DPTR,A
   \   085F  A3                INC     DPTR
   \   0860  F0                MOVX    @DPTR,A
   \   0861            ?0098:
   \   0861            ?0093:
    376              }
    377              if(WdSec != WdEvalue)
   \   0861  900048            MOV     DPTR,#WdSec
   \   0864  E0                MOVX    A,@DPTR
   \   0865  FD                MOV     R5,A
   \   0866  A3                INC     DPTR
   \   0867  E0                MOVX    A,@DPTR
   \   0868  FC                MOV     R4,A
   \   0869  900179            MOV     DPTR,#WdEvalue+1
   \   086C  E0                MOVX    A,@DPTR
   \   086D  6C                XRL     A,R4
   \   086E  7007              JNZ     ?0329
   \   0870  900178            MOV     DPTR,#WdEvalue
   \   0873  E0                MOVX    A,@DPTR
   \   0874  6D                XRL     A,R5
   \   0875  603A              JZ      ?0100
   \   0877            ?0329:
   \   0877            ?0099:
    378              {
    379                  if(WsSec == WsEvalue)
   \   0877  9000C2            MOV     DPTR,#WsSec
   \   087A  E0                MOVX    A,@DPTR
   \   087B  FD                MOV     R5,A
   \   087C  A3                INC     DPTR
   \   087D  E0                MOVX    A,@DPTR
   \   087E  FC                MOV     R4,A
   \   087F  90017B            MOV     DPTR,#WsEvalue+1
   \   0882  E0                MOVX    A,@DPTR
   \   0883  6C                XRL     A,R4
   \   0884  7005              JNZ     ?0330
   \   0886  90017A            MOV     DPTR,#WsEvalue
   \   0889  E0                MOVX    A,@DPTR
   \   088A  6D                XRL     A,R5
   \   088B            ?0330:
   \   088B  701D              JNZ     ?0102
   \   088D            ?0101:
    380                  {
    381                      if(WsEcount < 21600)
   \   088D  C3                CLR     C
   \   088E  90017F            MOV     DPTR,#WsEcount+1
   \   0891  E0                MOVX    A,@DPTR
   \   0892  9460              SUBB    A,#96
   \   0894  90017E            MOV     DPTR,#WsEcount
   \   0897  E0                MOVX    A,@DPTR
   \   0898  9454              SUBB    A,#84
   \   089A  500C              JNC     ?0104
   \   089C            ?0103:
    382                          WsEcount++;
   \   089C  A3                INC     DPTR
   \   089D  E0                MOVX    A,@DPTR
   \   089E  04                INC     A
   \   089F  F0                MOVX    @DPTR,A
   \   08A0  90017E            MOV     DPTR,#WsEcount
   \   08A3  7003              JNZ     ?0331
   \   08A5  E0                MOVX    A,@DPTR
   \   08A6  04                INC     A
   \   08A7  F0                MOVX    @DPTR,A
   \   08A8            ?0331:
   \   08A8            ?0104:
    383                  }
    384                  else
   \   08A8  8007              SJMP    ?0105
   \   08AA            ?0102:
    385                      WsEcount=0;
   \   08AA  90017E            MOV     DPTR,#WsEcount
   \   08AD  E4                CLR     A
   \   08AE  F0                MOVX    @DPTR,A
   \   08AF  A3                INC     DPTR
   \   08B0  F0                MOVX    @DPTR,A
   \   08B1            ?0105:
   \   08B1            ?0100:
    386              }
    387          
    388              if((WdSec == WdEvalue) && (WsSec == WsEvalue))
   \   08B1  900048            MOV     DPTR,#WdSec
   \   08B4  E0                MOVX    A,@DPTR
   \   08B5  FD                MOV     R5,A
   \   08B6  A3                INC     DPTR
   \   08B7  E0                MOVX    A,@DPTR
   \   08B8  FC                MOV     R4,A
   \   08B9  900179            MOV     DPTR,#WdEvalue+1
   \   08BC  E0                MOVX    A,@DPTR
   \   08BD  6C                XRL     A,R4
   \   08BE  7005              JNZ     ?0332
   \   08C0  900178            MOV     DPTR,#WdEvalue
   \   08C3  E0                MOVX    A,@DPTR
   \   08C4  6D                XRL     A,R5
   \   08C5            ?0332:
   \   08C5  7033              JNZ     ?0107
   \   08C7  9000C2            MOV     DPTR,#WsSec
   \   08CA  E0                MOVX    A,@DPTR
   \   08CB  FD                MOV     R5,A
   \   08CC  A3                INC     DPTR
   \   08CD  E0                MOVX    A,@DPTR
   \   08CE  FC                MOV     R4,A
   \   08CF  90017B            MOV     DPTR,#WsEvalue+1
   \   08D2  E0                MOVX    A,@DPTR
   \   08D3  6C                XRL     A,R4
   \   08D4  7005              JNZ     ?0333
   \   08D6  90017A            MOV     DPTR,#WsEvalue
   \   08D9  E0                MOVX    A,@DPTR
   \   08DA  6D                XRL     A,R5
   \   08DB            ?0333:
   \   08DB  701D              JNZ     ?0107
   \   08DD            ?0109:
   \   08DD            ?0108:
   \   08DD            ?0106:
    389              {
    390                  if(WdsEcount < 43200)       /* All Stop Then 12 Hour */
   \   08DD  C3                CLR     C
   \   08DE  900185            MOV     DPTR,#WdsEcount+1
   \   08E1  E0                MOVX    A,@DPTR
   \   08E2  94C0              SUBB    A,#192
   \   08E4  900184            MOV     DPTR,#WdsEcount
   \   08E7  E0                MOVX    A,@DPTR
   \   08E8  94A8              SUBB    A,#168
   \   08EA  500C              JNC     ?0111
   \   08EC            ?0110:
    391                      WdsEcount++;
   \   08EC  A3                INC     DPTR
   \   08ED  E0                MOVX    A,@DPTR
   \   08EE  04                INC     A
   \   08EF  F0                MOVX    @DPTR,A
   \   08F0  900184            MOV     DPTR,#WdsEcount
   \   08F3  7003              JNZ     ?0334
   \   08F5  E0                MOVX    A,@DPTR
   \   08F6  04                INC     A
   \   08F7  F0                MOVX    @DPTR,A
   \   08F8            ?0334:
   \   08F8            ?0111:
    392              }
    393              else
   \   08F8  8007              SJMP    ?0112
   \   08FA            ?0107:
    394                  WdsEcount=0;
   \   08FA  900184            MOV     DPTR,#WdsEcount
   \   08FD  E4                CLR     A
   \   08FE  F0                MOVX    @DPTR,A
   \   08FF  A3                INC     DPTR
   \   0900  F0                MOVX    @DPTR,A
   \   0901            ?0112:
    395                  
    396              WdEvalue=WdSec;
   \   0901  900048            MOV     DPTR,#WdSec
   \   0904  E0                MOVX    A,@DPTR
   \   0905  FD                MOV     R5,A
   \   0906  A3                INC     DPTR
   \   0907  E0                MOVX    A,@DPTR
   \   0908  900178            MOV     DPTR,#WdEvalue
   \   090B  CD                XCH     A,R5
   \   090C  F0                MOVX    @DPTR,A
   \   090D  A3                INC     DPTR
   \   090E  CD                XCH     A,R5
   \   090F  F0                MOVX    @DPTR,A
    397              WsEvalue=WsSec;
   \   0910  9000C2            MOV     DPTR,#WsSec
   \   0913  E0                MOVX    A,@DPTR
   \   0914  FD                MOV     R5,A
   \   0915  A3                INC     DPTR
   \   0916  E0                MOVX    A,@DPTR
   \   0917  90017A            MOV     DPTR,#WsEvalue
   \   091A  CD                XCH     A,R5
   \   091B  F0                MOVX    @DPTR,A
   \   091C  A3                INC     DPTR
   \   091D  CD                XCH     A,R5
   \   091E  F0                MOVX    @DPTR,A
    398          }
   \   091F  22                RET
    399          
    400          void One_pros(void)
    401          {
   \   0920            One_pros:
    402              unsigned int i;
    403              double ave;
    404          
    405              ave=(double)(atan(sinOne/cosOne))*(180/3.141592);
   \   0920  90026B            MOV     DPTR,#sinOne
   \   0923  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0926  900277            MOV     DPTR,#cosOne
   \   0929  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   092C  120000            LCALL   ?F_DIV_L02
   \   092F  120000            LCALL   $REFFN atan
   \   0932  792E              MOV     R1,#46
   \   0934  7B42              MOV     R3,#66
   \   0936  7A65              MOV     R2,#101
   \   0938  78E4              MOV     R0,#228
   \   093A  120000            LCALL   ?F_MUL_L02
   \   093D  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   0940  120000            LCALL   ?STO_R4567_DPTR_L20
    406              if(sinOne < 0 && cosOne > 0)
   \   0943  90026B            MOV     DPTR,#sinOne
   \   0946  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0949  EF                MOV     A,R7
   \   094A  4E                ORL     A,R6
   \   094B  6003              JZ      ?0335
   \   094D  EF                MOV     A,R7
   \   094E  5480              ANL     A,#128
   \   0950            ?0335:
   \   0950  B2E7              CPL     ACC.7
   \   0952  7023              JNZ     ?0114
   \   0954  900277            MOV     DPTR,#cosOne
   \   0957  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   095A  EF                MOV     A,R7
   \   095B  4E                ORL     A,R6
   \   095C  6005              JZ      ?0336
   \   095E  EF                MOV     A,R7
   \   095F  5480              ANL     A,#128
   \   0961  B2E7              CPL     ACC.7
   \   0963            ?0336:
   \   0963  B2E7              CPL     ACC.7
   \   0965  7010              JNZ     ?0114
   \   0967            ?0116:
   \   0967            ?0115:
   \   0967            ?0113:
    407                  ave+=360.;
   \   0967  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   096A  7C00              MOV     R4,#0
   \   096C  7D00              MOV     R5,#0
   \   096E  7EB4              MOV     R6,#180
   \   0970  7F43              MOV     R7,#67
   \   0972  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0975  8052              SJMP    ?0117
   \   0977            ?0114:
    408              else if((sinOne > 0 && cosOne < 0) || (sinOne < 0 && cosOne < 0))
   \   0977  90026B            MOV     DPTR,#sinOne
   \   097A  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   097D  EF                MOV     A,R7
   \   097E  4E                ORL     A,R6
   \   097F  6005              JZ      ?0337
   \   0981  EF                MOV     A,R7
   \   0982  5480              ANL     A,#128
   \   0984  B2E7              CPL     ACC.7
   \   0986            ?0337:
   \   0986  B2E7              CPL     ACC.7
   \   0988  700F              JNZ     ?0120
   \   098A  900277            MOV     DPTR,#cosOne
   \   098D  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0990  EF                MOV     A,R7
   \   0991  4E                ORL     A,R6
   \   0992  6003              JZ      ?0338
   \   0994  EF                MOV     A,R7
   \   0995  5480              ANL     A,#128
   \   0997            ?0338:
   \   0997  7022              JNZ     ?0118
   \   0999            ?0121:
   \   0999            ?0120:
   \   0999  90026B            MOV     DPTR,#sinOne
   \   099C  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   099F  EF                MOV     A,R7
   \   09A0  4E                ORL     A,R6
   \   09A1  6003              JZ      ?0339
   \   09A3  EF                MOV     A,R7
   \   09A4  5480              ANL     A,#128
   \   09A6            ?0339:
   \   09A6  B2E7              CPL     ACC.7
   \   09A8  701F              JNZ     ?0119
   \   09AA  900277            MOV     DPTR,#cosOne
   \   09AD  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   09B0  EF                MOV     A,R7
   \   09B1  4E                ORL     A,R6
   \   09B2  6003              JZ      ?0340
   \   09B4  EF                MOV     A,R7
   \   09B5  5480              ANL     A,#128
   \   09B7            ?0340:
   \   09B7  B2E7              CPL     ACC.7
   \   09B9  700E              JNZ     ?0119
   \   09BB            ?0125:
   \   09BB            ?0124:
   \   09BB            ?0122:
   \   09BB            ?0123:
   \   09BB            ?0118:
    409                  ave+=180.;
   \   09BB  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   09BE  7C00              MOV     R4,#0
   \   09C0  7D00              MOV     R5,#0
   \   09C2  7E34              MOV     R6,#52
   \   09C4  7F43              MOV     R7,#67
   \   09C6  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   09C9            ?0119:
   \   09C9            ?0117:
    410              i=Ws_calc(sumOne/60);
   \   09C9  900281            MOV     DPTR,#sumOne
   \   09CC  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   09CF  E4                CLR     A
   \   09D0  F9                MOV     R1,A
   \   09D1  FA                MOV     R2,A
   \   09D2  FB                MOV     R3,A
   \   09D3  783C              MOV     R0,#60
   \   09D5  120000            LCALL   ?SL_DIV_L01
   \   09D8  120000            LCALL   $REFFN Ws_calc
   \   09DB  900000            MOV     DPTR,#$LOCBX One_pros
   \   09DE  ED                MOV     A,R5
   \   09DF  F0                MOVX    @DPTR,A
   \   09E0  A3                INC     DPTR
   \   09E1  EC                MOV     A,R4
   \   09E2  F0                MOVX    @DPTR,A
    411              ES=0;
   \   09E3  C2AC              CLR     IE.4
    412              WsMin=i;
   \   09E5  900152            MOV     DPTR,#WsMin
   \   09E8  CD                XCH     A,R5
   \   09E9  F0                MOVX    @DPTR,A
   \   09EA  A3                INC     DPTR
   \   09EB  CD                XCH     A,R5
   \   09EC  F0                MOVX    @DPTR,A
    413              WdMin=(double)ave*10.;
   \   09ED  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   09F0  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   09F3  E4                CLR     A
   \   09F4  F8                MOV     R0,A
   \   09F5  F9                MOV     R1,A
   \   09F6  7A20              MOV     R2,#32
   \   09F8  7B41              MOV     R3,#65
   \   09FA  120000            LCALL   ?F_MUL_L02
   \   09FD  120000            LCALL   ?R4567_FLT_TO_LONG_L02
    414              ES=1;
   \   0A00  D2AC              SETB    IE.4
    415          
    416              WsMind[Minute]=WsMin;
   \   0A02  900152            MOV     DPTR,#WsMin
   \   0A05  E0                MOVX    A,@DPTR
   \   0A06  FF                MOV     R7,A
   \   0A07  A3                INC     DPTR
   \   0A08  E0                MOVX    A,@DPTR
   \   0A09  FE                MOV     R6,A
   \   0A0A  90000B            MOV     DPTR,#Minute
   \   0A0D  E0                MOVX    A,@DPTR
   \   0A0E  25E0              ADD     A,ACC
   \   0A10  2454              ADD     A,#LOW(WsMind)
   \   0A12  F582              MOV     DPL,A
   \   0A14  E4                CLR     A
   \   0A15  3401              ADDC    A,#HIGH(WsMind)
   \   0A17  F583              MOV     DPH,A
   \   0A19  EF                MOV     A,R7
   \   0A1A  F0                MOVX    @DPTR,A
   \   0A1B  A3                INC     DPTR
   \   0A1C  EE                MOV     A,R6
   \   0A1D  F0                MOVX    @DPTR,A
    417              WdMind[Minute]=WdMin;
   \   0A1E  90000B            MOV     DPTR,#Minute
   \   0A21  E0                MOVX    A,@DPTR
   \   0A22  25E0              ADD     A,ACC
   \   0A24  243E              ADD     A,#LOW(WdMind)
   \   0A26  F582              MOV     DPL,A
   \   0A28  E4                CLR     A
   \   0A29  3401              ADDC    A,#HIGH(WdMind)
   \   0A2B  F583              MOV     DPH,A
   \   0A2D  ED                MOV     A,R5
   \   0A2E  F0                MOVX    @DPTR,A
   \   0A2F  A3                INC     DPTR
   \   0A30  EC                MOV     A,R4
   \   0A31  F0                MOVX    @DPTR,A
   \   0A32  90013C            MOV     DPTR,#WdMin
   \   0A35  ED                MOV     A,R5
   \   0A36  F0                MOVX    @DPTR,A
   \   0A37  A3                INC     DPTR
   \   0A38  EC                MOV     A,R4
   \   0A39  F0                MOVX    @DPTR,A
    418          
    419              ES=0;
   \   0A3A  C2AC              CLR     IE.4
    420              WsMmax=0;
   \   0A3C  900172            MOV     DPTR,#WsMmax
   \   0A3F  E4                CLR     A
   \   0A40  F0                MOVX    @DPTR,A
   \   0A41  A3                INC     DPTR
   \   0A42  F0                MOVX    @DPTR,A
    421              WdMmax=0;
   \   0A43  900170            MOV     DPTR,#WdMmax
   \   0A46  F0                MOVX    @DPTR,A
   \   0A47  A3                INC     DPTR
   \   0A48  F0                MOVX    @DPTR,A
    422              for(i=0;i != 60; i++)
   \   0A49  900000            MOV     DPTR,#$LOCBX One_pros
   \   0A4C  F0                MOVX    @DPTR,A
   \   0A4D  A3                INC     DPTR
   \   0A4E  F0                MOVX    @DPTR,A
   \   0A4F            ?0127:
   \   0A4F  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0A52  E0                MOVX    A,@DPTR
   \   0A53  643C              XRL     A,#60
   \   0A55  7009              JNZ     ?0341
   \   0A57  900000            MOV     DPTR,#$LOCBX One_pros
   \   0A5A  E0                MOVX    A,@DPTR
   \   0A5B  7003              JNZ     $+5
   \   0A5D  020ADB            LJMP    ?0126
   \   0A60            ?0341:
   \   0A60            ?0128:
    423              {
    424                  if(WsSecd[i] > WsMmax)
   \   0A60  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0A63  E0                MOVX    A,@DPTR
   \   0A64  25E0              ADD     A,ACC
   \   0A66  24C4              ADD     A,#LOW(WsSecd)
   \   0A68  F582              MOV     DPL,A
   \   0A6A  E4                CLR     A
   \   0A6B  3400              ADDC    A,#HIGH(WsSecd)
   \   0A6D  F583              MOV     DPH,A
   \   0A6F  E0                MOVX    A,@DPTR
   \   0A70  FD                MOV     R5,A
   \   0A71  A3                INC     DPTR
   \   0A72  E0                MOVX    A,@DPTR
   \   0A73  FC                MOV     R4,A
   \   0A74  900173            MOV     DPTR,#WsMmax+1
   \   0A77  E0                MOVX    A,@DPTR
   \   0A78  C3                CLR     C
   \   0A79  9C                SUBB    A,R4
   \   0A7A  900172            MOV     DPTR,#WsMmax
   \   0A7D  E0                MOVX    A,@DPTR
   \   0A7E  9D                SUBB    A,R5
   \   0A7F  5036              JNC     ?0131
   \   0A81            ?0130:
    425                  {
    426                      WdMmax=WdSecd[i];
   \   0A81  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0A84  E0                MOVX    A,@DPTR
   \   0A85  25E0              ADD     A,ACC
   \   0A87  244A              ADD     A,#LOW(WdSecd)
   \   0A89  F582              MOV     DPL,A
   \   0A8B  E4                CLR     A
   \   0A8C  3400              ADDC    A,#HIGH(WdSecd)
   \   0A8E  F583              MOV     DPH,A
   \   0A90  E0                MOVX    A,@DPTR
   \   0A91  FD                MOV     R5,A
   \   0A92  A3                INC     DPTR
   \   0A93  E0                MOVX    A,@DPTR
   \   0A94  900170            MOV     DPTR,#WdMmax
   \   0A97  CD                XCH     A,R5
   \   0A98  F0                MOVX    @DPTR,A
   \   0A99  A3                INC     DPTR
   \   0A9A  CD                XCH     A,R5
   \   0A9B  F0                MOVX    @DPTR,A
    427                      WsMmax=WsSecd[i];
   \   0A9C  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0A9F  E0                MOVX    A,@DPTR
   \   0AA0  25E0              ADD     A,ACC
   \   0AA2  24C4              ADD     A,#LOW(WsSecd)
   \   0AA4  F582              MOV     DPL,A
   \   0AA6  E4                CLR     A
   \   0AA7  3400              ADDC    A,#HIGH(WsSecd)
   \   0AA9  F583              MOV     DPH,A
   \   0AAB  E0                MOVX    A,@DPTR
   \   0AAC  FD                MOV     R5,A
   \   0AAD  A3                INC     DPTR
   \   0AAE  E0                MOVX    A,@DPTR
   \   0AAF  900172            MOV     DPTR,#WsMmax
   \   0AB2  CD                XCH     A,R5
   \   0AB3  F0                MOVX    @DPTR,A
   \   0AB4  A3                INC     DPTR
   \   0AB5  CD                XCH     A,R5
   \   0AB6  F0                MOVX    @DPTR,A
   \   0AB7            ?0131:
    428                  }
    429                  WsSecd[i]=0;
   \   0AB7  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0ABA  E0                MOVX    A,@DPTR
   \   0ABB  25E0              ADD     A,ACC
   \   0ABD  24C4              ADD     A,#LOW(WsSecd)
   \   0ABF  F582              MOV     DPL,A
   \   0AC1  E4                CLR     A
   \   0AC2  3400              ADDC    A,#HIGH(WsSecd)
   \   0AC4  F583              MOV     DPH,A
   \   0AC6  E4                CLR     A
   \   0AC7  F0                MOVX    @DPTR,A
   \   0AC8  A3                INC     DPTR
   \   0AC9  F0                MOVX    @DPTR,A
   \   0ACA  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0ACD  E0                MOVX    A,@DPTR
   \   0ACE  04                INC     A
   \   0ACF  F0                MOVX    @DPTR,A
   \   0AD0  900000            MOV     DPTR,#$LOCBX One_pros
   \   0AD3  7003              JNZ     ?0342
   \   0AD5  E0                MOVX    A,@DPTR
   \   0AD6  04                INC     A
   \   0AD7  F0                MOVX    @DPTR,A
   \   0AD8            ?0342:
   \   0AD8  020A4F            LJMP    ?0127
   \   0ADB            ?0126:
    430              }
    431              ES=1;
   \   0ADB  D2AC              SETB    IE.4
    432          
    433              sumOne=0;
   \   0ADD  900281            MOV     DPTR,#sumOne
   \   0AE0  E4                CLR     A
   \   0AE1  F0                MOVX    @DPTR,A
   \   0AE2  A3                INC     DPTR
   \   0AE3  F0                MOVX    @DPTR,A
   \   0AE4  A3                INC     DPTR
   \   0AE5  F0                MOVX    @DPTR,A
   \   0AE6  A3                INC     DPTR
   \   0AE7  F0                MOVX    @DPTR,A
    434              sinOne=0;
   \   0AE8  90026B            MOV     DPTR,#sinOne
   \   0AEB  F0                MOVX    @DPTR,A
   \   0AEC  A3                INC     DPTR
   \   0AED  F0                MOVX    @DPTR,A
    435              cosOne=0;
   \   0AEE  900277            MOV     DPTR,#cosOne
   \   0AF1  F0                MOVX    @DPTR,A
   \   0AF2  A3                INC     DPTR
   \   0AF3  F0                MOVX    @DPTR,A
    436              for(i=8;i != 11; i++)
   \   0AF4  900000            MOV     DPTR,#$LOCBX One_pros
   \   0AF7  F0                MOVX    @DPTR,A
   \   0AF8  A3                INC     DPTR
   \   0AF9  7408              MOV     A,#8
   \   0AFB  F0                MOVX    @DPTR,A
   \   0AFC            ?0133:
   \   0AFC  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0AFF  E0                MOVX    A,@DPTR
   \   0B00  640B              XRL     A,#11
   \   0B02  7009              JNZ     ?0343
   \   0B04  900000            MOV     DPTR,#$LOCBX One_pros
   \   0B07  E0                MOVX    A,@DPTR
   \   0B08  7003              JNZ     $+5
   \   0B0A  020BC0            LJMP    ?0132
   \   0B0D            ?0343:
   \   0B0D            ?0134:
    437              {
    438                  sumOne+=WsMind[(Minute+i)%10];
   \   0B0D  90000B            MOV     DPTR,#Minute
   \   0B10  E0                MOVX    A,@DPTR
   \   0B11  7D00              MOV     R5,#0
   \   0B13  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0B16  FE                MOV     R6,A
   \   0B17  E0                MOVX    A,@DPTR
   \   0B18  2E                ADD     A,R6
   \   0B19  FC                MOV     R4,A
   \   0B1A  900000            MOV     DPTR,#$LOCBX One_pros
   \   0B1D  E0                MOVX    A,@DPTR
   \   0B1E  3D                ADDC    A,R5
   \   0B1F  FD                MOV     R5,A
   \   0B20  E4                CLR     A
   \   0B21  FB                MOV     R3,A
   \   0B22  7A0A              MOV     R2,#10
   \   0B24  EC                MOV     A,R4
   \   0B25  F8                MOV     R0,A
   \   0B26  ED                MOV     A,R5
   \   0B27  F9                MOV     R1,A
   \   0B28  120000            LCALL   ?UI_MOD_L00
   \   0B2B  E8                MOV     A,R0
   \   0B2C  25E0              ADD     A,ACC
   \   0B2E  2454              ADD     A,#LOW(WsMind)
   \   0B30  F582              MOV     DPL,A
   \   0B32  E4                CLR     A
   \   0B33  3401              ADDC    A,#HIGH(WsMind)
   \   0B35  F583              MOV     DPH,A
   \   0B37  E0                MOVX    A,@DPTR
   \   0B38  FD                MOV     R5,A
   \   0B39  A3                INC     DPTR
   \   0B3A  E0                MOVX    A,@DPTR
   \   0B3B  FC                MOV     R4,A
   \   0B3C  7E00              MOV     R6,#0
   \   0B3E  7F00              MOV     R7,#0
   \   0B40  900281            MOV     DPTR,#sumOne
   \   0B43  120000            LCALL   ?L_ADD_ASG_DPTR_R4567_L01
    439                  ave=(double)(WdMind[(Minute+i)%10]/10.)*(3.141592/180.);
   \   0B46  90000B            MOV     DPTR,#Minute
   \   0B49  E0                MOVX    A,@DPTR
   \   0B4A  7D00              MOV     R5,#0
   \   0B4C  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0B4F  FE                MOV     R6,A
   \   0B50  E0                MOVX    A,@DPTR
   \   0B51  2E                ADD     A,R6
   \   0B52  FC                MOV     R4,A
   \   0B53  900000            MOV     DPTR,#$LOCBX One_pros
   \   0B56  E0                MOVX    A,@DPTR
   \   0B57  3D                ADDC    A,R5
   \   0B58  FD                MOV     R5,A
   \   0B59  E4                CLR     A
   \   0B5A  FB                MOV     R3,A
   \   0B5B  7A0A              MOV     R2,#10
   \   0B5D  EC                MOV     A,R4
   \   0B5E  F8                MOV     R0,A
   \   0B5F  ED                MOV     A,R5
   \   0B60  F9                MOV     R1,A
   \   0B61  120000            LCALL   ?UI_MOD_L00
   \   0B64  E8                MOV     A,R0
   \   0B65  25E0              ADD     A,ACC
   \   0B67  243E              ADD     A,#LOW(WdMind)
   \   0B69  F582              MOV     DPL,A
   \   0B6B  E4                CLR     A
   \   0B6C  3401              ADDC    A,#HIGH(WdMind)
   \   0B6E  F583              MOV     DPH,A
   \   0B70  E0                MOVX    A,@DPTR
   \   0B71  FD                MOV     R5,A
   \   0B72  A3                INC     DPTR
   \   0B73  E0                MOVX    A,@DPTR
   \   0B74  FC                MOV     R4,A
   \   0B75  ED                MOV     A,R5
   \   0B76  E4                CLR     A
   \   0B77  FE                MOV     R6,A
   \   0B78  FF                MOV     R7,A
   \   0B79  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   0B7C  E4                CLR     A
   \   0B7D  F8                MOV     R0,A
   \   0B7E  F9                MOV     R1,A
   \   0B7F  7A20              MOV     R2,#32
   \   0B81  7B41              MOV     R3,#65
   \   0B83  120000            LCALL   ?F_DIV_L02
   \   0B86  7833              MOV     R0,#51
   \   0B88  7B3C              MOV     R3,#60
   \   0B8A  7A8E              MOV     R2,#142
   \   0B8C  79FA              MOV     R1,#250
   \   0B8E  120000            LCALL   ?F_MUL_L02
    440                  sinOne += sin(ave);
   \   0B91  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   0B94  120000            LCALL   ?STO_R4567_DPTR_L20
   \   0B97  120000            LCALL   $REFFN sin
   \   0B9A  90026B            MOV     DPTR,#sinOne
   \   0B9D  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    441                  cosOne += cos(ave);
   \   0BA0  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   0BA3  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0BA6  120000            LCALL   $REFFN cos
   \   0BA9  900277            MOV     DPTR,#cosOne
   \   0BAC  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0BAF  900000            MOV     DPTR,#$LOCBX One_pros+1
   \   0BB2  E0                MOVX    A,@DPTR
   \   0BB3  04                INC     A
   \   0BB4  F0                MOVX    @DPTR,A
   \   0BB5  900000            MOV     DPTR,#$LOCBX One_pros
   \   0BB8  7003              JNZ     ?0344
   \   0BBA  E0                MOVX    A,@DPTR
   \   0BBB  04                INC     A
   \   0BBC  F0                MOVX    @DPTR,A
   \   0BBD            ?0344:
   \   0BBD  020AFC            LJMP    ?0133
   \   0BC0            ?0132:
    442              }
    443              ave=(double)(atan(sinOne/cosOne))*(180./3.141592);
   \   0BC0  90026B            MOV     DPTR,#sinOne
   \   0BC3  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0BC6  900277            MOV     DPTR,#cosOne
   \   0BC9  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   0BCC  120000            LCALL   ?F_DIV_L02
   \   0BCF  120000            LCALL   $REFFN atan
   \   0BD2  792E              MOV     R1,#46
   \   0BD4  7B42              MOV     R3,#66
   \   0BD6  7A65              MOV     R2,#101
   \   0BD8  78E4              MOV     R0,#228
   \   0BDA  120000            LCALL   ?F_MUL_L02
   \   0BDD  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   0BE0  120000            LCALL   ?STO_R4567_DPTR_L20
    444              if(sinOne < 0 && cosOne > 0)
   \   0BE3  90026B            MOV     DPTR,#sinOne
   \   0BE6  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0BE9  EF                MOV     A,R7
   \   0BEA  4E                ORL     A,R6
   \   0BEB  6003              JZ      ?0345
   \   0BED  EF                MOV     A,R7
   \   0BEE  5480              ANL     A,#128
   \   0BF0            ?0345:
   \   0BF0  B2E7              CPL     ACC.7
   \   0BF2  7023              JNZ     ?0137
   \   0BF4  900277            MOV     DPTR,#cosOne
   \   0BF7  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0BFA  EF                MOV     A,R7
   \   0BFB  4E                ORL     A,R6
   \   0BFC  6005              JZ      ?0346
   \   0BFE  EF                MOV     A,R7
   \   0BFF  5480              ANL     A,#128
   \   0C01  B2E7              CPL     ACC.7
   \   0C03            ?0346:
   \   0C03  B2E7              CPL     ACC.7
   \   0C05  7010              JNZ     ?0137
   \   0C07            ?0139:
   \   0C07            ?0138:
   \   0C07            ?0136:
    445                  ave+=360.;
   \   0C07  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   0C0A  7C00              MOV     R4,#0
   \   0C0C  7D00              MOV     R5,#0
   \   0C0E  7EB4              MOV     R6,#180
   \   0C10  7F43              MOV     R7,#67
   \   0C12  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0C15  8052              SJMP    ?0140
   \   0C17            ?0137:
    446              else if((sinOne > 0 && cosOne < 0) || (sinOne < 0 && cosOne < 0))
   \   0C17  90026B            MOV     DPTR,#sinOne
   \   0C1A  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C1D  EF                MOV     A,R7
   \   0C1E  4E                ORL     A,R6
   \   0C1F  6005              JZ      ?0347
   \   0C21  EF                MOV     A,R7
   \   0C22  5480              ANL     A,#128
   \   0C24  B2E7              CPL     ACC.7
   \   0C26            ?0347:
   \   0C26  B2E7              CPL     ACC.7
   \   0C28  700F              JNZ     ?0143
   \   0C2A  900277            MOV     DPTR,#cosOne
   \   0C2D  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C30  EF                MOV     A,R7
   \   0C31  4E                ORL     A,R6
   \   0C32  6003              JZ      ?0348
   \   0C34  EF                MOV     A,R7
   \   0C35  5480              ANL     A,#128
   \   0C37            ?0348:
   \   0C37  7022              JNZ     ?0141
   \   0C39            ?0144:
   \   0C39            ?0143:
   \   0C39  90026B            MOV     DPTR,#sinOne
   \   0C3C  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C3F  EF                MOV     A,R7
   \   0C40  4E                ORL     A,R6
   \   0C41  6003              JZ      ?0349
   \   0C43  EF                MOV     A,R7
   \   0C44  5480              ANL     A,#128
   \   0C46            ?0349:
   \   0C46  B2E7              CPL     ACC.7
   \   0C48  701F              JNZ     ?0142
   \   0C4A  900277            MOV     DPTR,#cosOne
   \   0C4D  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C50  EF                MOV     A,R7
   \   0C51  4E                ORL     A,R6
   \   0C52  6003              JZ      ?0350
   \   0C54  EF                MOV     A,R7
   \   0C55  5480              ANL     A,#128
   \   0C57            ?0350:
   \   0C57  B2E7              CPL     ACC.7
   \   0C59  700E              JNZ     ?0142
   \   0C5B            ?0148:
   \   0C5B            ?0147:
   \   0C5B            ?0145:
   \   0C5B            ?0146:
   \   0C5B            ?0141:
    447                  ave+=180.;
   \   0C5B  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   0C5E  7C00              MOV     R4,#0
   \   0C60  7D00              MOV     R5,#0
   \   0C62  7E34              MOV     R6,#52
   \   0C64  7F43              MOV     R7,#67
   \   0C66  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0C69            ?0142:
   \   0C69            ?0140:
    448          
    449              ES=0;
   \   0C69  C2AC              CLR     IE.4
    450              WsThvalue=sumOne/3.;
   \   0C6B  900281            MOV     DPTR,#sumOne
   \   0C6E  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C71  120000            LCALL   ?R4567_LONG_TO_FLT_L02
   \   0C74  E4                CLR     A
   \   0C75  F8                MOV     R0,A
   \   0C76  F9                MOV     R1,A
   \   0C77  7440              MOV     A,#64
   \   0C79  FA                MOV     R2,A
   \   0C7A  FB                MOV     R3,A
   \   0C7B  120000            LCALL   ?F_DIV_L02
   \   0C7E  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0C81  900182            MOV     DPTR,#WsThvalue
   \   0C84  ED                MOV     A,R5
   \   0C85  F0                MOVX    @DPTR,A
   \   0C86  A3                INC     DPTR
   \   0C87  EC                MOV     A,R4
   \   0C88  F0                MOVX    @DPTR,A
    451              WdThvalue=(double)ave*10.;
   \   0C89  900000            MOV     DPTR,#$LOCBX One_pros+2
   \   0C8C  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0C8F  E4                CLR     A
   \   0C90  F8                MOV     R0,A
   \   0C91  F9                MOV     R1,A
   \   0C92  7A20              MOV     R2,#32
   \   0C94  7B41              MOV     R3,#65
   \   0C96  120000            LCALL   ?F_MUL_L02
   \   0C99  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0C9C  900180            MOV     DPTR,#WdThvalue
   \   0C9F  ED                MOV     A,R5
   \   0CA0  F0                MOVX    @DPTR,A
   \   0CA1  A3                INC     DPTR
   \   0CA2  EC                MOV     A,R4
   \   0CA3  F0                MOVX    @DPTR,A
    452              ES=1;
   \   0CA4  D2AC              SETB    IE.4
    453          
    454              sumOne=0;
   \   0CA6  900281            MOV     DPTR,#sumOne
   \   0CA9  E4                CLR     A
   \   0CAA  F0                MOVX    @DPTR,A
   \   0CAB  A3                INC     DPTR
   \   0CAC  F0                MOVX    @DPTR,A
   \   0CAD  A3                INC     DPTR
   \   0CAE  F0                MOVX    @DPTR,A
   \   0CAF  A3                INC     DPTR
   \   0CB0  F0                MOVX    @DPTR,A
    455              sinOne=0;
   \   0CB1  90026B            MOV     DPTR,#sinOne
   \   0CB4  F0                MOVX    @DPTR,A
   \   0CB5  A3                INC     DPTR
   \   0CB6  F0                MOVX    @DPTR,A
    456              cosOne=0;
   \   0CB7  900277            MOV     DPTR,#cosOne
   \   0CBA  F0                MOVX    @DPTR,A
   \   0CBB  A3                INC     DPTR
   \   0CBC  F0                MOVX    @DPTR,A
    457          }
   \   0CBD  22                RET
    458          
    459          void Ten_pros(void)
    460          {
   \   0CBE            Ten_pros:
    461              unsigned int i;
    462              double ave;
    463          
    464              ave=(atan(sinTen/cosTen))*(180./3.141592);
   \   0CBE  90026F            MOV     DPTR,#sinTen
   \   0CC1  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0CC4  90027B            MOV     DPTR,#cosTen
   \   0CC7  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   0CCA  120000            LCALL   ?F_DIV_L02
   \   0CCD  120000            LCALL   $REFFN atan
   \   0CD0  792E              MOV     R1,#46
   \   0CD2  7B42              MOV     R3,#66
   \   0CD4  7A65              MOV     R2,#101
   \   0CD6  78E4              MOV     R0,#228
   \   0CD8  120000            LCALL   ?F_MUL_L02
   \   0CDB  900000            MOV     DPTR,#$LOCBX Ten_pros+2
   \   0CDE  120000            LCALL   ?STO_R4567_DPTR_L20
    465              if(sinTen < 0 && cosTen > 0)
   \   0CE1  90026F            MOV     DPTR,#sinTen
   \   0CE4  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0CE7  EF                MOV     A,R7
   \   0CE8  4E                ORL     A,R6
   \   0CE9  6003              JZ      ?0351
   \   0CEB  EF                MOV     A,R7
   \   0CEC  5480              ANL     A,#128
   \   0CEE            ?0351:
   \   0CEE  B2E7              CPL     ACC.7
   \   0CF0  7023              JNZ     ?0150
   \   0CF2  90027B            MOV     DPTR,#cosTen
   \   0CF5  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0CF8  EF                MOV     A,R7
   \   0CF9  4E                ORL     A,R6
   \   0CFA  6005              JZ      ?0352
   \   0CFC  EF                MOV     A,R7
   \   0CFD  5480              ANL     A,#128
   \   0CFF  B2E7              CPL     ACC.7
   \   0D01            ?0352:
   \   0D01  B2E7              CPL     ACC.7
   \   0D03  7010              JNZ     ?0150
   \   0D05            ?0152:
   \   0D05            ?0151:
   \   0D05            ?0149:
    466                  ave+=360.;
   \   0D05  900000            MOV     DPTR,#$LOCBX Ten_pros+2
   \   0D08  7C00              MOV     R4,#0
   \   0D0A  7D00              MOV     R5,#0
   \   0D0C  7EB4              MOV     R6,#180
   \   0D0E  7F43              MOV     R7,#67
   \   0D10  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0D13  8052              SJMP    ?0153
   \   0D15            ?0150:
    467              else if((sinTen > 0 && cosTen < 0) || (sinTen < 0 && cosTen < 0))
   \   0D15  90026F            MOV     DPTR,#sinTen
   \   0D18  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0D1B  EF                MOV     A,R7
   \   0D1C  4E                ORL     A,R6
   \   0D1D  6005              JZ      ?0353
   \   0D1F  EF                MOV     A,R7
   \   0D20  5480              ANL     A,#128
   \   0D22  B2E7              CPL     ACC.7
   \   0D24            ?0353:
   \   0D24  B2E7              CPL     ACC.7
   \   0D26  700F              JNZ     ?0156
   \   0D28  90027B            MOV     DPTR,#cosTen
   \   0D2B  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0D2E  EF                MOV     A,R7
   \   0D2F  4E                ORL     A,R6
   \   0D30  6003              JZ      ?0354
   \   0D32  EF                MOV     A,R7
   \   0D33  5480              ANL     A,#128
   \   0D35            ?0354:
   \   0D35  7022              JNZ     ?0154
   \   0D37            ?0157:
   \   0D37            ?0156:
   \   0D37  90026F            MOV     DPTR,#sinTen
   \   0D3A  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0D3D  EF                MOV     A,R7
   \   0D3E  4E                ORL     A,R6
   \   0D3F  6003              JZ      ?0355
   \   0D41  EF                MOV     A,R7
   \   0D42  5480              ANL     A,#128
   \   0D44            ?0355:
   \   0D44  B2E7              CPL     ACC.7
   \   0D46  701F              JNZ     ?0155
   \   0D48  90027B            MOV     DPTR,#cosTen
   \   0D4B  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0D4E  EF                MOV     A,R7
   \   0D4F  4E                ORL     A,R6
   \   0D50  6003              JZ      ?0356
   \   0D52  EF                MOV     A,R7
   \   0D53  5480              ANL     A,#128
   \   0D55            ?0356:
   \   0D55  B2E7              CPL     ACC.7
   \   0D57  700E              JNZ     ?0155
   \   0D59            ?0161:
   \   0D59            ?0160:
   \   0D59            ?0158:
   \   0D59            ?0159:
   \   0D59            ?0154:
    468                  ave+=180.;
   \   0D59  900000            MOV     DPTR,#$LOCBX Ten_pros+2
   \   0D5C  7C00              MOV     R4,#0
   \   0D5E  7D00              MOV     R5,#0
   \   0D60  7E34              MOV     R6,#52
   \   0D62  7F43              MOV     R7,#67
   \   0D64  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
   \   0D67            ?0155:
   \   0D67            ?0153:
    469              i=Ws_calc(sumTen/600.);
   \   0D67  900285            MOV     DPTR,#sumTen
   \   0D6A  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0D6D  120000            LCALL   ?R4567_LONG_TO_FLT_L02
   \   0D70  E4                CLR     A
   \   0D71  F8                MOV     R0,A
   \   0D72  F9                MOV     R1,A
   \   0D73  7A16              MOV     R2,#22
   \   0D75  7B44              MOV     R3,#68
   \   0D77  120000            LCALL   ?F_DIV_L02
   \   0D7A  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0D7D  120000            LCALL   $REFFN Ws_calc
   \   0D80  900000            MOV     DPTR,#$LOCBX Ten_pros
   \   0D83  ED                MOV     A,R5
   \   0D84  F0                MOVX    @DPTR,A
   \   0D85  A3                INC     DPTR
   \   0D86  EC                MOV     A,R4
   \   0D87  F0                MOVX    @DPTR,A
    470              ES=0;
   \   0D88  C2AC              CLR     IE.4
    471              WsTen=i;
   \   0D8A  900168            MOV     DPTR,#WsTen
   \   0D8D  CD                XCH     A,R5
   \   0D8E  F0                MOVX    @DPTR,A
   \   0D8F  A3                INC     DPTR
   \   0D90  CD                XCH     A,R5
   \   0D91  F0                MOVX    @DPTR,A
    472              WdTen=(double)ave*10.;
   \   0D92  900000            MOV     DPTR,#$LOCBX Ten_pros+2
   \   0D95  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0D98  E4                CLR     A
   \   0D99  F8                MOV     R0,A
   \   0D9A  F9                MOV     R1,A
   \   0D9B  7A20              MOV     R2,#32
   \   0D9D  7B41              MOV     R3,#65
   \   0D9F  120000            LCALL   ?F_MUL_L02
   \   0DA2  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   0DA5  90016A            MOV     DPTR,#WdTen
   \   0DA8  ED                MOV     A,R5
   \   0DA9  F0                MOVX    @DPTR,A
   \   0DAA  A3                INC     DPTR
   \   0DAB  EC                MOV     A,R4
   \   0DAC  F0                MOVX    @DPTR,A
    473          
    474              WsTmax=0;
   \   0DAD  900176            MOV     DPTR,#WsTmax
   \   0DB0  E4                CLR     A
   \   0DB1  F0                MOVX    @DPTR,A
   \   0DB2  A3                INC     DPTR
   \   0DB3  F0                MOVX    @DPTR,A
    475              WdTmax=0;
   \   0DB4  900174            MOV     DPTR,#WdTmax
   \   0DB7  F0                MOVX    @DPTR,A
   \   0DB8  A3                INC     DPTR
   \   0DB9  F0                MOVX    @DPTR,A
    476              for(i=0;i != 10; i++)
   \   0DBA  900000            MOV     DPTR,#$LOCBX Ten_pros
   \   0DBD  F0                MOVX    @DPTR,A
   \   0DBE  A3                INC     DPTR
   \   0DBF  F0                MOVX    @DPTR,A
   \   0DC0            ?0163:
   \   0DC0  900000            MOV     DPTR,#$LOCBX Ten_pros+1
   \   0DC3  E0                MOVX    A,@DPTR
   \   0DC4  640A              XRL     A,#10
   \   0DC6  7006              JNZ     ?0357
   \   0DC8  900000            MOV     DPTR,#$LOCBX Ten_pros
   \   0DCB  E0                MOVX    A,@DPTR
   \   0DCC  6067              JZ      ?0162
   \   0DCE            ?0357:
   \   0DCE            ?0164:
    477              {
    478                  if(WsMind[i] > WsTmax)
   \   0DCE  900000            MOV     DPTR,#$LOCBX Ten_pros+1
   \   0DD1  E0                MOVX    A,@DPTR
   \   0DD2  25E0              ADD     A,ACC
   \   0DD4  2454              ADD     A,#LOW(WsMind)
   \   0DD6  F582              MOV     DPL,A
   \   0DD8  E4                CLR     A
   \   0DD9  3401              ADDC    A,#HIGH(WsMind)
   \   0DDB  F583              MOV     DPH,A
   \   0DDD  E0                MOVX    A,@DPTR
   \   0DDE  FD                MOV     R5,A
   \   0DDF  A3                INC     DPTR
   \   0DE0  E0                MOVX    A,@DPTR
   \   0DE1  FC                MOV     R4,A
   \   0DE2  900177            MOV     DPTR,#WsTmax+1
   \   0DE5  E0                MOVX    A,@DPTR
   \   0DE6  C3                CLR     C
   \   0DE7  9C                SUBB    A,R4
   \   0DE8  900176            MOV     DPTR,#WsTmax
   \   0DEB  E0                MOVX    A,@DPTR
   \   0DEC  9D                SUBB    A,R5
   \   0DED  5036              JNC     ?0167
   \   0DEF            ?0166:
    479                  {
    480                      WdTmax=WdMind[i];
   \   0DEF  900000            MOV     DPTR,#$LOCBX Ten_pros+1
   \   0DF2  E0                MOVX    A,@DPTR
   \   0DF3  25E0              ADD     A,ACC
   \   0DF5  243E              ADD     A,#LOW(WdMind)
   \   0DF7  F582              MOV     DPL,A
   \   0DF9  E4                CLR     A
   \   0DFA  3401              ADDC    A,#HIGH(WdMind)
   \   0DFC  F583              MOV     DPH,A
   \   0DFE  E0                MOVX    A,@DPTR
   \   0DFF  FD                MOV     R5,A
   \   0E00  A3                INC     DPTR
   \   0E01  E0                MOVX    A,@DPTR
   \   0E02  900174            MOV     DPTR,#WdTmax
   \   0E05  CD                XCH     A,R5
   \   0E06  F0                MOVX    @DPTR,A
   \   0E07  A3                INC     DPTR
   \   0E08  CD                XCH     A,R5
   \   0E09  F0                MOVX    @DPTR,A
    481                      WsTmax=WsMind[i];
   \   0E0A  900000            MOV     DPTR,#$LOCBX Ten_pros+1
   \   0E0D  E0                MOVX    A,@DPTR
   \   0E0E  25E0              ADD     A,ACC
   \   0E10  2454              ADD     A,#LOW(WsMind)
   \   0E12  F582              MOV     DPL,A
   \   0E14  E4                CLR     A
   \   0E15  3401              ADDC    A,#HIGH(WsMind)
   \   0E17  F583              MOV     DPH,A
   \   0E19  E0                MOVX    A,@DPTR
   \   0E1A  FD                MOV     R5,A
   \   0E1B  A3                INC     DPTR
   \   0E1C  E0                MOVX    A,@DPTR
   \   0E1D  900176            MOV     DPTR,#WsTmax
   \   0E20  CD                XCH     A,R5
   \   0E21  F0                MOVX    @DPTR,A
   \   0E22  A3                INC     DPTR
   \   0E23  CD                XCH     A,R5
   \   0E24  F0                MOVX    @DPTR,A
   \   0E25            ?0167:
   \   0E25  900000            MOV     DPTR,#$LOCBX Ten_pros+1
   \   0E28  E0                MOVX    A,@DPTR
   \   0E29  04                INC     A
   \   0E2A  F0                MOVX    @DPTR,A
   \   0E2B  900000            MOV     DPTR,#$LOCBX Ten_pros
   \   0E2E  7003              JNZ     ?0358
   \   0E30  E0                MOVX    A,@DPTR
   \   0E31  04                INC     A
   \   0E32  F0                MOVX    @DPTR,A
   \   0E33            ?0358:
   \   0E33  808B              SJMP    ?0163
   \   0E35            ?0162:
    482                  }
    483              }
    484              ES=1;
   \   0E35  D2AC              SETB    IE.4
    485              sumTen=0;
   \   0E37  900285            MOV     DPTR,#sumTen
   \   0E3A  E4                CLR     A
   \   0E3B  F0                MOVX    @DPTR,A
   \   0E3C  A3                INC     DPTR
   \   0E3D  F0                MOVX    @DPTR,A
   \   0E3E  A3                INC     DPTR
   \   0E3F  F0                MOVX    @DPTR,A
   \   0E40  A3                INC     DPTR
   \   0E41  F0                MOVX    @DPTR,A
    486              sinTen=0;
   \   0E42  90026F            MOV     DPTR,#sinTen
   \   0E45  F0                MOVX    @DPTR,A
   \   0E46  A3                INC     DPTR
   \   0E47  F0                MOVX    @DPTR,A
    487              cosTen=0;
   \   0E48  90027B            MOV     DPTR,#cosTen
   \   0E4B  F0                MOVX    @DPTR,A
   \   0E4C  A3                INC     DPTR
   \   0E4D  F0                MOVX    @DPTR,A
    488          }
   \   0E4E  22                RET
    489          
    490          
    491          interrupt void T0_int(void)
    492          {
   \   0E4F            T0_int:
    493          
    494          }
   \   0E4F  32                RETI
    495          
    496          interrupt void T2_int(void)
    497          {
   \   0E50            T2_int:
   \   0E50  C0E0              PUSH    ACC
   \   0E52  C082              PUSH    DPL
   \   0E54  C083              PUSH    DPH
   \   0E56  C0D0              PUSH    PSW
    498              TR2=0;          /* Timer 2 Stop */
   \   0E58  C2CA              CLR     T2CON.2
    499              TH2=0x00;
   \   0E5A  75CD00            MOV     205,#0
    500              TL2=0x00;
   \   0E5D  75CC00            MOV     204,#0
    501          
    502              if(TEcount > 20)
   \   0E60  D3                SETB    C
   \   0E61  900187            MOV     DPTR,#TEcount+1
   \   0E64  E0                MOVX    A,@DPTR
   \   0E65  9414              SUBB    A,#20
   \   0E67  900186            MOV     DPTR,#TEcount
   \   0E6A  E0                MOVX    A,@DPTR
   \   0E6B  9400              SUBB    A,#0
   \   0E6D  4004              JC      ?0169
   \   0E6F            ?0168:
    503                  Terror=1;
   \   0E6F  D20C              SETB    Terror
    504              else
   \   0E71  800E              SJMP    ?0170
   \   0E73            ?0169:
    505              {
    506                  Terror=0;
   \   0E73  C20C              CLR     Terror
    507                  TEcount++;
   \   0E75  A3                INC     DPTR
   \   0E76  E0                MOVX    A,@DPTR
   \   0E77  04                INC     A
   \   0E78  F0                MOVX    @DPTR,A
   \   0E79  900186            MOV     DPTR,#TEcount
   \   0E7C  7003              JNZ     ?0359
   \   0E7E  E0                MOVX    A,@DPTR
   \   0E7F  04                INC     A
   \   0E80  F0                MOVX    @DPTR,A
   \   0E81            ?0359:
   \   0E81            ?0170:
    508              }
    509          
    510              RCAP2L=0x00;
   \   0E81  75CA00            MOV     202,#0
    511              RCAP2H=0x00;
   \   0E84  75CB00            MOV     203,#0
    512              TR2=1;          /* Timer 2 Run */
   \   0E87  D2CA              SETB    T2CON.2
    513              TF2=0;
   \   0E89  C2CF              CLR     T2CON.7
    514          }
   \   0E8B  D0D0              POP     PSW
   \   0E8D  D083              POP     DPH
   \   0E8F  D082              POP     DPL
   \   0E91  D0E0              POP     ACC
   \   0E93  32                RETI
    515          
    516          interrupt void EX0_int(void)
    517          {
   \   0E94            EX0_int:
   \   0E94  C0E0              PUSH    ACC
   \   0E96  C0F0              PUSH    B
   \   0E98  C082              PUSH    DPL
   \   0E9A  C083              PUSH    DPH
   \   0E9C  C0D0              PUSH    PSW
   \   0E9E  E8                MOV     A,R0
   \   0E9F  C0E0              PUSH    ACC
   \   0EA1  E9                MOV     A,R1
   \   0EA2  C0E0              PUSH    ACC
   \   0EA4  EA                MOV     A,R2
   \   0EA5  C0E0              PUSH    ACC
   \   0EA7  EB                MOV     A,R3
   \   0EA8  C0E0              PUSH    ACC
   \   0EAA  EC                MOV     A,R4
   \   0EAB  C0E0              PUSH    ACC
   \   0EAD  ED                MOV     A,R5
   \   0EAE  C0E0              PUSH    ACC
   \   0EB0  EE                MOV     A,R6
   \   0EB1  C0E0              PUSH    ACC
   \   0EB3  EF                MOV     A,R7
   \   0EB4  C0E0              PUSH    ACC
    518              unsigned int i;
    519          
    520              if(Quad++ == 3)
   \   0EB6  90000A            MOV     DPTR,#Quad
   \   0EB9  E0                MOVX    A,@DPTR
   \   0EBA  FC                MOV     R4,A
   \   0EBB  04                INC     A
   \   0EBC  F0                MOVX    @DPTR,A
   \   0EBD  EC                MOV     A,R4
   \   0EBE  B4031F            CJNE    A,#3,?0172
   \   0EC1            ?0171:
    521              {
    522                  Quad=0;
   \   0EC1  E4                CLR     A
   \   0EC2  F0                MOVX    @DPTR,A
    523                  ES=0;
   \   0EC3  C2AC              CLR     IE.4
    524                  if(++Second == 60)
   \   0EC5  90000C            MOV     DPTR,#Second
   \   0EC8  E0                MOVX    A,@DPTR
   \   0EC9  04                INC     A
   \   0ECA  F0                MOVX    @DPTR,A
   \   0ECB  B43C10            CJNE    A,#60,?0174
   \   0ECE            ?0173:
    525                  {
    526                      Second=0;
   \   0ECE  E4                CLR     A
   \   0ECF  F0                MOVX    @DPTR,A
    527                      Minute=++Minute%10;
   \   0ED0  90000B            MOV     DPTR,#Minute
   \   0ED3  E0                MOVX    A,@DPTR
   \   0ED4  FF                MOV     R7,A
   \   0ED5  0F                INC     R7
   \   0ED6  EF                MOV     A,R7
   \   0ED7  75F00A            MOV     B,#10
   \   0EDA  84                DIV     AB
   \   0EDB  E5F0              MOV     A,B
   \   0EDD  F0                MOVX    @DPTR,A
   \   0EDE            ?0174:
    528                  }
    529                  ES=1;
   \   0EDE  D2AC              SETB    IE.4
   \   0EE0            ?0172:
    530              }
    531              P3.5 = 0;                               // Holding
   \   0EE0  C2B5              CLR     P3.5
    532              for(i=0; i < 15; i++)
   \   0EE2  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0EE5  E4                CLR     A
   \   0EE6  F0                MOVX    @DPTR,A
   \   0EE7  A3                INC     DPTR
   \   0EE8  F0                MOVX    @DPTR,A
   \   0EE9            ?0176:
   \   0EE9  C3                CLR     C
   \   0EEA  900000            MOV     DPTR,#$LOCBX EX0_int+1
   \   0EED  E0                MOVX    A,@DPTR
   \   0EEE  940F              SUBB    A,#15
   \   0EF0  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0EF3  E0                MOVX    A,@DPTR
   \   0EF4  9400              SUBB    A,#0
   \   0EF6  5026              JNC     ?0175
   \   0EF8            ?0177:
    533              {
    534                  i++;
   \   0EF8  A3                INC     DPTR
   \   0EF9  E0                MOVX    A,@DPTR
   \   0EFA  04                INC     A
   \   0EFB  F0                MOVX    @DPTR,A
   \   0EFC  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0EFF  7003              JNZ     ?0360
   \   0F01  E0                MOVX    A,@DPTR
   \   0F02  04                INC     A
   \   0F03  F0                MOVX    @DPTR,A
   \   0F04            ?0360:
    535                  i--;
   \   0F04  A3                INC     DPTR
   \   0F05  E0                MOVX    A,@DPTR
   \   0F06  24FF              ADD     A,#255
   \   0F08  F0                MOVX    @DPTR,A
   \   0F09  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F0C  E0                MOVX    A,@DPTR
   \   0F0D  34FF              ADDC    A,#255
   \   0F0F  F0                MOVX    @DPTR,A
   \   0F10  A3                INC     DPTR
   \   0F11  E0                MOVX    A,@DPTR
   \   0F12  04                INC     A
   \   0F13  F0                MOVX    @DPTR,A
   \   0F14  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F17  7003              JNZ     ?0361
   \   0F19  E0                MOVX    A,@DPTR
   \   0F1A  04                INC     A
   \   0F1B  F0                MOVX    @DPTR,A
   \   0F1C            ?0361:
   \   0F1C  80CB              SJMP    ?0176
   \   0F1E            ?0175:
    536              }                                       // Delay
    537              write_XDATA(ADCMSB,0xff);               // Converting Start
   \   0F1E  74FF              MOV     A,#255
   \   0F20  90C000            MOV     DPTR,#49152
   \   0F23  F0                MOVX    @DPTR,A
    538              for(i=0; i < 10; i++)
   \   0F24  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F27  E4                CLR     A
   \   0F28  F0                MOVX    @DPTR,A
   \   0F29  A3                INC     DPTR
   \   0F2A  F0                MOVX    @DPTR,A
   \   0F2B            ?0180:
   \   0F2B  C3                CLR     C
   \   0F2C  900000            MOV     DPTR,#$LOCBX EX0_int+1
   \   0F2F  E0                MOVX    A,@DPTR
   \   0F30  940A              SUBB    A,#10
   \   0F32  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F35  E0                MOVX    A,@DPTR
   \   0F36  9400              SUBB    A,#0
   \   0F38  5026              JNC     ?0179
   \   0F3A            ?0181:
    539              {
    540                  i++;
   \   0F3A  A3                INC     DPTR
   \   0F3B  E0                MOVX    A,@DPTR
   \   0F3C  04                INC     A
   \   0F3D  F0                MOVX    @DPTR,A
   \   0F3E  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F41  7003              JNZ     ?0362
   \   0F43  E0                MOVX    A,@DPTR
   \   0F44  04                INC     A
   \   0F45  F0                MOVX    @DPTR,A
   \   0F46            ?0362:
    541                  i--;
   \   0F46  A3                INC     DPTR
   \   0F47  E0                MOVX    A,@DPTR
   \   0F48  24FF              ADD     A,#255
   \   0F4A  F0                MOVX    @DPTR,A
   \   0F4B  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F4E  E0                MOVX    A,@DPTR
   \   0F4F  34FF              ADDC    A,#255
   \   0F51  F0                MOVX    @DPTR,A
   \   0F52  A3                INC     DPTR
   \   0F53  E0                MOVX    A,@DPTR
   \   0F54  04                INC     A
   \   0F55  F0                MOVX    @DPTR,A
   \   0F56  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F59  7003              JNZ     ?0363
   \   0F5B  E0                MOVX    A,@DPTR
   \   0F5C  04                INC     A
   \   0F5D  F0                MOVX    @DPTR,A
   \   0F5E            ?0363:
   \   0F5E  80CB              SJMP    ?0180
   \   0F60            ?0179:
    542              }
    543              i=0;                                    // Delay
   \   0F60  E4                CLR     A
   \   0F61  F0                MOVX    @DPTR,A
   \   0F62  A3                INC     DPTR
   \   0F63  F0                MOVX    @DPTR,A
   \   0F64            ?0184:
    544              while(P3.3 == 1)                        // Converting Delay
   \   0F64  30B320            JNB     P3.3,?0183
   \   0F67            ?0185:
    545              {
    546                  if(i++ > 100)
   \   0F67  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F6A  E0                MOVX    A,@DPTR
   \   0F6B  FD                MOV     R5,A
   \   0F6C  A3                INC     DPTR
   \   0F6D  E0                MOVX    A,@DPTR
   \   0F6E  FC                MOV     R4,A
   \   0F6F  E0                MOVX    A,@DPTR
   \   0F70  04                INC     A
   \   0F71  F0                MOVX    @DPTR,A
   \   0F72  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F75  7003              JNZ     ?0364
   \   0F77  E0                MOVX    A,@DPTR
   \   0F78  04                INC     A
   \   0F79  F0                MOVX    @DPTR,A
   \   0F7A            ?0364:
   \   0F7A  D3                SETB    C
   \   0F7B  EC                MOV     A,R4
   \   0F7C  9464              SUBB    A,#100
   \   0F7E  ED                MOV     A,R5
   \   0F7F  9400              SUBB    A,#0
   \   0F81  4002              JC      ?0187
   \   0F83            ?0186:
    547                      break;
   \   0F83  8002              SJMP    ?0183
   \   0F85            ?0187:
   \   0F85  80DD              SJMP    ?0184
   \   0F87            ?0183:
    548              }
    549              if(i > 100)
   \   0F87  D3                SETB    C
   \   0F88  900000            MOV     DPTR,#$LOCBX EX0_int+1
   \   0F8B  E0                MOVX    A,@DPTR
   \   0F8C  9464              SUBB    A,#100
   \   0F8E  900000            MOV     DPTR,#$LOCBX EX0_int
   \   0F91  E0                MOVX    A,@DPTR
   \   0F92  9400              SUBB    A,#0
   \   0F94  4004              JC      ?0189
   \   0F96            ?0188:
    550                  Aderr=1;
   \   0F96  D209              SETB    Aderr
    551              else
   \   0F98  8002              SJMP    ?0190
   \   0F9A            ?0189:
    552                  Aderr=0;
   \   0F9A  C209              CLR     Aderr
   \   0F9C            ?0190:
    553          
    554              ES=0;
   \   0F9C  C2AC              CLR     IE.4
    555              Wdreal  = read_XDATA(ADCLSB) >> 4;
   \   0F9E  90C001            MOV     DPTR,#49153
   \   0FA1  E0                MOVX    A,@DPTR
   \   0FA2  C4                SWAP    A
   \   0FA3  540F              ANL     A,#15
   \   0FA5  7D00              MOV     R5,#0
    556              Wdreal |= read_XDATA(ADCMSB) << 4;      // Measuring Wind Direction
   \   0FA7  FC                MOV     R4,A
   \   0FA8  8D82              MOV     DPL,R5
   \   0FAA  E0                MOVX    A,@DPTR
   \   0FAB  7F00              MOV     R7,#0
   \   0FAD  7E04              MOV     R6,#4
   \   0FAF            ?0365:
   \   0FAF  25E0              ADD     A,ACC
   \   0FB1  CF                XCH     A,R7
   \   0FB2  33                RLC     A
   \   0FB3  CF                XCH     A,R7
   \   0FB4  DEF9              DJNZ    R6,?0365
   \   0FB6  FE                MOV     R6,A
   \   0FB7  EC                MOV     A,R4
   \   0FB8  4E                ORL     A,R6
   \   0FB9  FC                MOV     R4,A
   \   0FBA  ED                MOV     A,R5
   \   0FBB  4F                ORL     A,R7
   \   0FBC  90000D            MOV     DPTR,#Wdreal
   \   0FBF  F0                MOVX    @DPTR,A
   \   0FC0  A3                INC     DPTR
   \   0FC1  CC                XCH     A,R4
   \   0FC2  F0                MOVX    @DPTR,A
   \   0FC3  CC                XCH     A,R4
    557              ES=1;
   \   0FC4  D2AC              SETB    IE.4
    558              P3.5 = 1;                               // Sampling
   \   0FC6  D2B5              SETB    P3.5
    559          
    560              TR0=0;                                  // Timer Stop
   \   0FC8  C28C              CLR     TCON.4
    561              Nws  = TH0 << 8;                        // Capturing Wind Speed
   \   0FCA  E58C              MOV     A,TH0
   \   0FCC  7D00              MOV     R5,#0
   \   0FCE  7C00              MOV     R4,#0
   \   0FD0  FD                MOV     R5,A
   \   0FD1  EC                MOV     A,R4
   \   0FD2  ED                MOV     A,R5
   \   0FD3  33                RLC     A
   \   0FD4  95E0              SUBB    A,ACC
   \   0FD6  FE                MOV     R6,A
   \   0FD7  FF                MOV     R7,A
   \   0FD8  900002            MOV     DPTR,#Nws
   \   0FDB  120000            LCALL   ?STO_R4567_DPTR_L20
    562              Nws |= TL0;
   \   0FDE  E58A              MOV     A,TL0
   \   0FE0  FC                MOV     R4,A
   \   0FE1  7D00              MOV     R5,#0
   \   0FE3  7E00              MOV     R6,#0
   \   0FE5  7F00              MOV     R7,#0
   \   0FE7  900002            MOV     DPTR,#Nws
   \   0FEA  120000            LCALL   ?L_OR_ASG_DPTR_R4567_L01
    563              TR0=1;                                  // Timer Run
   \   0FED  D28C              SETB    TCON.4
    564              if(Ows > Nws)
   \   0FEF  900006            MOV     DPTR,#Ows
   \   0FF2  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   0FF5  900002            MOV     DPTR,#Nws
   \   0FF8  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   0FFB  7407              MOV     A,#7
   \   0FFD  120000            LCALL   ?L_CMP_L01
   \   1000  701E              JNZ     ?0192
   \   1002            ?0191:
    565                  Wsabs=(Nws+0x10000)-Ows;
   \   1002  E8                MOV     A,R0
   \   1003  FC                MOV     R4,A
   \   1004  E9                MOV     A,R1
   \   1005  FD                MOV     R5,A
   \   1006  C3                CLR     C
   \   1007  900009            MOV     DPTR,#Ows+3
   \   100A  E0                MOVX    A,@DPTR
   \   100B  FE                MOV     R6,A
   \   100C  EC                MOV     A,R4
   \   100D  9E                SUBB    A,R6
   \   100E  FC                MOV     R4,A
   \   100F  900008            MOV     DPTR,#Ows+2
   \   1012  E0                MOVX    A,@DPTR
   \   1013  FE                MOV     R6,A
   \   1014  ED                MOV     A,R5
   \   1015  9E                SUBB    A,R6
   \   1016  900011            MOV     DPTR,#Wsabs
   \   1019  F0                MOVX    @DPTR,A
   \   101A  A3                INC     DPTR
   \   101B  CC                XCH     A,R4
   \   101C  F0                MOVX    @DPTR,A
   \   101D  CC                XCH     A,R4
    566              else
   \   101E  801C              SJMP    ?0193
   \   1020            ?0192:
    567                  Wsabs=Nws-Ows;
   \   1020  E8                MOV     A,R0
   \   1021  FC                MOV     R4,A
   \   1022  E9                MOV     A,R1
   \   1023  FD                MOV     R5,A
   \   1024  C3                CLR     C
   \   1025  900009            MOV     DPTR,#Ows+3
   \   1028  E0                MOVX    A,@DPTR
   \   1029  FE                MOV     R6,A
   \   102A  EC                MOV     A,R4
   \   102B  9E                SUBB    A,R6
   \   102C  FC                MOV     R4,A
   \   102D  900008            MOV     DPTR,#Ows+2
   \   1030  E0                MOVX    A,@DPTR
   \   1031  FE                MOV     R6,A
   \   1032  ED                MOV     A,R5
   \   1033  9E                SUBB    A,R6
   \   1034  900011            MOV     DPTR,#Wsabs
   \   1037  F0                MOVX    @DPTR,A
   \   1038  A3                INC     DPTR
   \   1039  CC                XCH     A,R4
   \   103A  F0                MOVX    @DPTR,A
   \   103B  CC                XCH     A,R4
   \   103C            ?0193:
    568              Ows=Nws;
   \   103C  900006            MOV     DPTR,#Ows
   \   103F  120000            LCALL   ?STO_R0123_DPTR_L20
    569                                                      // Calculation W_D
    570              oldv=0;
   \   1042  90025B            MOV     DPTR,#oldv
   \   1045  E4                CLR     A
   \   1046  F0                MOVX    @DPTR,A
   \   1047  A3                INC     DPTR
   \   1048  F0                MOVX    @DPTR,A
    571              flag=0;
   \   1049  90025F            MOV     DPTR,#flag
   \   104C  F0                MOVX    @DPTR,A
   \   104D  A3                INC     DPTR
   \   104E  F0                MOVX    @DPTR,A
    572              Sens=0;
   \   104F  C205              CLR     Sens
    573              for(i=0; i != 16; i++)
   \   1051  900000            MOV     DPTR,#$LOCBX EX0_int
   \   1054  F0                MOVX    @DPTR,A
   \   1055  A3                INC     DPTR
   \   1056  F0                MOVX    @DPTR,A
   \   1057            ?0195:
   \   1057  900000            MOV     DPTR,#$LOCBX EX0_int+1
   \   105A  E0                MOVX    A,@DPTR
   \   105B  6410              XRL     A,#16
   \   105D  7009              JNZ     ?0366
   \   105F  900000            MOV     DPTR,#$LOCBX EX0_int
   \   1062  E0                MOVX    A,@DPTR
   \   1063  7003              JNZ     $+5
   \   1065  0211A9            LJMP    ?0194
   \   1068            ?0366:
   \   1068            ?0196:
    574              {
    575                  flag += 22.5;
   \   1068  90025F            MOV     DPTR,#flag
   \   106B  7C00              MOV     R4,#0
   \   106D  7D00              MOV     R5,#0
   \   106F  7EB4              MOV     R6,#180
   \   1071  7F41              MOV     R7,#65
   \   1073  120000            LCALL   ?F_ADD_ASG_DPTR_R4567_L02
    576                  newv=Adirection[i];
   \   1076  900000            MOV     DPTR,#$LOCBX EX0_int+1
   \   1079  E0                MOVX    A,@DPTR
   \   107A  25E0              ADD     A,ACC
   \   107C  90028A            MOV     DPTR,#Adirection
   \   107F  FB                MOV     R3,A
   \   1080  93                MOVC    A,@A+DPTR
   \   1081  CB                XCH     A,R3
   \   1082  04                INC     A
   \   1083  93                MOVC    A,@A+DPTR
    577                  if( Wdreal < newv && Wdreal >= oldv)
   \   1084  90025D            MOV     DPTR,#newv
   \   1087  CB                XCH     A,R3
   \   1088  F0                MOVX    @DPTR,A
   \   1089  A3                INC     DPTR
   \   108A  CB                XCH     A,R3
   \   108B  F0                MOVX    @DPTR,A
   \   108C  FA                MOV     R2,A
   \   108D  90000E            MOV     DPTR,#Wdreal+1
   \   1090  E0                MOVX    A,@DPTR
   \   1091  C3                CLR     C
   \   1092  9A                SUBB    A,R2
   \   1093  90000D            MOV     DPTR,#Wdreal
   \   1096  E0                MOVX    A,@DPTR
   \   1097  9B                SUBB    A,R3
   \   1098  4003              JC      $+5
   \   109A  021189            LJMP    ?0199
   \   109D  E0                MOVX    A,@DPTR
   \   109E  FB                MOV     R3,A
   \   109F  A3                INC     DPTR
   \   10A0  E0                MOVX    A,@DPTR
   \   10A1  FA                MOV     R2,A
   \   10A2  90025C            MOV     DPTR,#oldv+1
   \   10A5  E0                MOVX    A,@DPTR
   \   10A6  D3                SETB    C
   \   10A7  9A                SUBB    A,R2
   \   10A8  90025B            MOV     DPTR,#oldv
   \   10AB  E0                MOVX    A,@DPTR
   \   10AC  9B                SUBB    A,R3
   \   10AD  4003              JC      $+5
   \   10AF  021189            LJMP    ?0199
   \   10B2            ?0201:
   \   10B2            ?0200:
   \   10B2            ?0198:
    578                  {
    579                      Sens=1;
   \   10B2  D205              SETB    Sens
    580                      value=(flag-(flag-22.5))/(newv-oldv);
   \   10B4  E4                CLR     A
   \   10B5  F8                MOV     R0,A
   \   10B6  F9                MOV     R1,A
   \   10B7  7AB4              MOV     R2,#180
   \   10B9  7BC1              MOV     R3,#193
   \   10BB  120000            LCALL   ?F_ADD_L02
   \   10BE  EE                MOV     A,R6
   \   10BF  4F                ORL     A,R7
   \   10C0  6004              JZ      $+6
   \   10C2  EF                MOV     A,R7
   \   10C3  6480              XRL     A,#128
   \   10C5  FF                MOV     R7,A
   \   10C6  90025F            MOV     DPTR,#flag
   \   10C9  120000            LCALL   ?LD_R0123_XDPTR_L20
   \   10CC  120000            LCALL   ?F_ADD_L02
   \   10CF  90025D            MOV     DPTR,#newv
   \   10D2  E0                MOVX    A,@DPTR
   \   10D3  FB                MOV     R3,A
   \   10D4  A3                INC     DPTR
   \   10D5  E0                MOVX    A,@DPTR
   \   10D6  C3                CLR     C
   \   10D7  90025C            MOV     DPTR,#oldv+1
   \   10DA  F9                MOV     R1,A
   \   10DB  E0                MOVX    A,@DPTR
   \   10DC  C9                XCH     A,R1
   \   10DD  99                SUBB    A,R1
   \   10DE  FA                MOV     R2,A
   \   10DF  90025B            MOV     DPTR,#oldv
   \   10E2  E0                MOVX    A,@DPTR
   \   10E3  F9                MOV     R1,A
   \   10E4  EB                MOV     A,R3
   \   10E5  99                SUBB    A,R1
   \   10E6  FB                MOV     R3,A
   \   10E7  EA                MOV     A,R2
   \   10E8  F8                MOV     R0,A
   \   10E9  CB                XCH     A,R3
   \   10EA  F9                MOV     R1,A
   \   10EB  CB                XCH     A,R3
   \   10EC  EB                MOV     A,R3
   \   10ED  E4                CLR     A
   \   10EE  FA                MOV     R2,A
   \   10EF  FB                MOV     R3,A
   \   10F0  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   10F3  120000            LCALL   ?F_DIV_L02
    581                      Wdvalue=(float)((value*Wdreal)-(value*oldv)+(flag-22.5)) * 10.;
   \   10F6  90000D            MOV     DPTR,#Wdreal
   \   10F9  E0                MOVX    A,@DPTR
   \   10FA  FB                MOV     R3,A
   \   10FB  A3                INC     DPTR
   \   10FC  E0                MOVX    A,@DPTR
   \   10FD  F8                MOV     R0,A
   \   10FE  CB                XCH     A,R3
   \   10FF  F9                MOV     R1,A
   \   1100  CB                XCH     A,R3
   \   1101  EB                MOV     A,R3
   \   1102  E4                CLR     A
   \   1103  FA                MOV     R2,A
   \   1104  FB                MOV     R3,A
   \   1105  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1108  900263            MOV     DPTR,#value
   \   110B  120000            LCALL   ?STO_R4567_DPTR_L20
   \   110E  120000            LCALL   ?F_MUL_L02
   \   1111  EF                MOV     A,R7
   \   1112  C0E0              PUSH    ACC
   \   1114  EE                MOV     A,R6
   \   1115  C0E0              PUSH    ACC
   \   1117  ED                MOV     A,R5
   \   1118  C0E0              PUSH    ACC
   \   111A  EC                MOV     A,R4
   \   111B  C0E0              PUSH    ACC
   \   111D  90025F            MOV     DPTR,#flag
   \   1120  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   1123  E4                CLR     A
   \   1124  F8                MOV     R0,A
   \   1125  F9                MOV     R1,A
   \   1126  7AB4              MOV     R2,#180
   \   1128  7BC1              MOV     R3,#193
   \   112A  120000            LCALL   ?F_ADD_L02
   \   112D  D0E0              POP     ACC
   \   112F  F8                MOV     R0,A
   \   1130  D0E0              POP     ACC
   \   1132  F9                MOV     R1,A
   \   1133  D0E0              POP     ACC
   \   1135  FA                MOV     R2,A
   \   1136  D0E0              POP     ACC
   \   1138  FB                MOV     R3,A
   \   1139  120000            LCALL   ?F_ADD_L02
   \   113C  90025B            MOV     DPTR,#oldv
   \   113F  E0                MOVX    A,@DPTR
   \   1140  FB                MOV     R3,A
   \   1141  A3                INC     DPTR
   \   1142  E0                MOVX    A,@DPTR
   \   1143  F8                MOV     R0,A
   \   1144  CB                XCH     A,R3
   \   1145  F9                MOV     R1,A
   \   1146  CB                XCH     A,R3
   \   1147  EB                MOV     A,R3
   \   1148  E4                CLR     A
   \   1149  FA                MOV     R2,A
   \   114A  FB                MOV     R3,A
   \   114B  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   114E  EF                MOV     A,R7
   \   114F  C0E0              PUSH    ACC
   \   1151  EE                MOV     A,R6
   \   1152  C0E0              PUSH    ACC
   \   1154  ED                MOV     A,R5
   \   1155  C0E0              PUSH    ACC
   \   1157  EC                MOV     A,R4
   \   1158  C0E0              PUSH    ACC
   \   115A  900263            MOV     DPTR,#value
   \   115D  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   1160  120000            LCALL   ?F_MUL_L02
   \   1163  D0E0              POP     ACC
   \   1165  F8                MOV     R0,A
   \   1166  D0E0              POP     ACC
   \   1168  F9                MOV     R1,A
   \   1169  D0E0              POP     ACC
   \   116B  FA                MOV     R2,A
   \   116C  D0E0              POP     ACC
   \   116E  FB                MOV     R3,A
   \   116F  120000            LCALL   ?F_SUB_R_L02
   \   1172  E4                CLR     A
   \   1173  F8                MOV     R0,A
   \   1174  F9                MOV     R1,A
   \   1175  7A20              MOV     R2,#32
   \   1177  7B41              MOV     R3,#65
   \   1179  120000            LCALL   ?F_MUL_L02
   \   117C  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   117F  900013            MOV     DPTR,#Wdvalue
   \   1182  ED                MOV     A,R5
   \   1183  F0                MOVX    @DPTR,A
   \   1184  A3                INC     DPTR
   \   1185  EC                MOV     A,R4
   \   1186  F0                MOVX    @DPTR,A
    582                      break;
   \   1187  8020              SJMP    ?0194
   \   1189            ?0199:
    583                  }
    584                  else
    585                      oldv=newv;
   \   1189  90025D            MOV     DPTR,#newv
   \   118C  E0                MOVX    A,@DPTR
   \   118D  FD                MOV     R5,A
   \   118E  A3                INC     DPTR
   \   118F  E0                MOVX    A,@DPTR
   \   1190  90025B            MOV     DPTR,#oldv
   \   1193  CD                XCH     A,R5
   \   1194  F0                MOVX    @DPTR,A
   \   1195  A3                INC     DPTR
   \   1196  CD                XCH     A,R5
   \   1197  F0                MOVX    @DPTR,A
   \   1198  900000            MOV     DPTR,#$LOCBX EX0_int+1
   \   119B  E0                MOVX    A,@DPTR
   \   119C  04                INC     A
   \   119D  F0                MOVX    @DPTR,A
   \   119E  900000            MOV     DPTR,#$LOCBX EX0_int
   \   11A1  7003              JNZ     ?0367
   \   11A3  E0                MOVX    A,@DPTR
   \   11A4  04                INC     A
   \   11A5  F0                MOVX    @DPTR,A
   \   11A6            ?0367:
   \   11A6  021057            LJMP    ?0195
   \   11A9            ?0194:
    586              }
    587              if(!Sens)
   \   11A9  200509            JB      Sens,?0203
   \   11AC            ?0202:
    588                  Wdvalue=3599;
   \   11AC  900013            MOV     DPTR,#Wdvalue
   \   11AF  740E              MOV     A,#14
   \   11B1  F0                MOVX    @DPTR,A
   \   11B2  A3                INC     DPTR
   \   11B3  04                INC     A
   \   11B4  F0                MOVX    @DPTR,A
   \   11B5            ?0203:
    589                                      // Data Store
    590              Wpoint = ++Wpoint%12;
   \   11B5  900047            MOV     DPTR,#Wpoint
   \   11B8  E0                MOVX    A,@DPTR
   \   11B9  FF                MOV     R7,A
   \   11BA  0F                INC     R7
   \   11BB  EF                MOV     A,R7
   \   11BC  75F00C            MOV     B,#12
   \   11BF  84                DIV     AB
   \   11C0  E5F0              MOV     A,B
    591              Wddata[Wpoint]=Wdvalue;
   \   11C2  FC                MOV     R4,A
   \   11C3  900013            MOV     DPTR,#Wdvalue
   \   11C6  E0                MOVX    A,@DPTR
   \   11C7  FF                MOV     R7,A
   \   11C8  A3                INC     DPTR
   \   11C9  E0                MOVX    A,@DPTR
   \   11CA  FE                MOV     R6,A
   \   11CB  EC                MOV     A,R4
   \   11CC  900047            MOV     DPTR,#Wpoint
   \   11CF  F0                MOVX    @DPTR,A
   \   11D0  25E0              ADD     A,ACC
   \   11D2  2417              ADD     A,#LOW(Wddata)
   \   11D4  F582              MOV     DPL,A
   \   11D6  E4                CLR     A
   \   11D7  3400              ADDC    A,#HIGH(Wddata)
   \   11D9  F583              MOV     DPH,A
   \   11DB  EF                MOV     A,R7
   \   11DC  F0                MOVX    @DPTR,A
   \   11DD  A3                INC     DPTR
   \   11DE  EE                MOV     A,R6
   \   11DF  F0                MOVX    @DPTR,A
    592              Wsdata[Wpoint]=Wsabs;
   \   11E0  900011            MOV     DPTR,#Wsabs
   \   11E3  E0                MOVX    A,@DPTR
   \   11E4  FF                MOV     R7,A
   \   11E5  A3                INC     DPTR
   \   11E6  E0                MOVX    A,@DPTR
   \   11E7  FE                MOV     R6,A
   \   11E8  EC                MOV     A,R4
   \   11E9  25E0              ADD     A,ACC
   \   11EB  242F              ADD     A,#LOW(Wsdata)
   \   11ED  F582              MOV     DPL,A
   \   11EF  E4                CLR     A
   \   11F0  3400              ADDC    A,#HIGH(Wsdata)
   \   11F2  F583              MOV     DPH,A
   \   11F4  EF                MOV     A,R7
   \   11F5  F0                MOVX    @DPTR,A
   \   11F6  A3                INC     DPTR
   \   11F7  EE                MOV     A,R6
   \   11F8  F0                MOVX    @DPTR,A
    593              MeasQ=1;
   \   11F9  D206              SETB    MeasQ
    594          }
   \   11FB  D0E0              POP     ACC
   \   11FD  FF                MOV     R7,A
   \   11FE  D0E0              POP     ACC
   \   1200  FE                MOV     R6,A
   \   1201  D0E0              POP     ACC
   \   1203  FD                MOV     R5,A
   \   1204  D0E0              POP     ACC
   \   1206  FC                MOV     R4,A
   \   1207  D0E0              POP     ACC
   \   1209  FB                MOV     R3,A
   \   120A  D0E0              POP     ACC
   \   120C  FA                MOV     R2,A
   \   120D  D0E0              POP     ACC
   \   120F  F9                MOV     R1,A
   \   1210  D0E0              POP     ACC
   \   1212  F8                MOV     R0,A
   \   1213  D0D0              POP     PSW
   \   1215  D083              POP     DPH
   \   1217  D082              POP     DPL
   \   1219  D0F0              POP     B
   \   121B  D0E0              POP     ACC
   \   121D  32                RETI
    595          
    596          interrupt void SCON_int(void)
    597          {
   \   121E            SCON_int:
   \   121E  C0E0              PUSH    ACC
   \   1220  C082              PUSH    DPL
   \   1222  C083              PUSH    DPH
   \   1224  C0D0              PUSH    PSW
   \   1226  EA                MOV     A,R2
   \   1227  C0E0              PUSH    ACC
   \   1229  EB                MOV     A,R3
   \   122A  C0E0              PUSH    ACC
   \   122C  EC                MOV     A,R4
   \   122D  C0E0              PUSH    ACC
   \   122F  ED                MOV     A,R5
   \   1230  C0E0              PUSH    ACC
   \   1232  EE                MOV     A,R6
   \   1233  C0E0              PUSH    ACC
   \   1235  EF                MOV     A,R7
   \   1236  C0E0              PUSH    ACC
    598              unsigned char i,j;
    599          
    600              if(RI == 1)
   \   1238  209803            JB      SCON.0,$+6
   \   123B  021A71            LJMP    ?0205
   \   123E            ?0204:
    601              {
    602                  RI=0;
   \   123E  C298              CLR     SCON.0
    603                  Receve=1;
   \   1240  D203              SETB    Receve
    604                  BlueL=1;
   \   1242  D296              SETB    P1.6
    605                  Blueb=LightL;
   \   1244  900255            MOV     DPTR,#Blueb
   \   1247  7410              MOV     A,#16
   \   1249  F0                MOVX    @DPTR,A
   \   124A  A3                INC     DPTR
   \   124B  E4                CLR     A
   \   124C  F0                MOVX    @DPTR,A
    606                  Rbuf[Rpoint++]=SBUF;
   \   124D  E599              MOV     A,SBUF
   \   124F  9001EC            MOV     DPTR,#Rpoint
   \   1252  FE                MOV     R6,A
   \   1253  E0                MOVX    A,@DPTR
   \   1254  FD                MOV     R5,A
   \   1255  A3                INC     DPTR
   \   1256  E0                MOVX    A,@DPTR
   \   1257  FC                MOV     R4,A
   \   1258  E0                MOVX    A,@DPTR
   \   1259  04                INC     A
   \   125A  F0                MOVX    @DPTR,A
   \   125B  9001EC            MOV     DPTR,#Rpoint
   \   125E  7003              JNZ     ?0368
   \   1260  E0                MOVX    A,@DPTR
   \   1261  04                INC     A
   \   1262  F0                MOVX    @DPTR,A
   \   1263            ?0368:
   \   1263  EC                MOV     A,R4
   \   1264  2488              ADD     A,#LOW(Rbuf)
   \   1266  F582              MOV     DPL,A
   \   1268  E4                CLR     A
   \   1269  3401              ADDC    A,#HIGH(Rbuf)
   \   126B  F583              MOV     DPH,A
   \   126D  EE                MOV     A,R6
   \   126E  F0                MOVX    @DPTR,A
    607          
    608                  if( Rbuf[Rpoint-1]  == 0xfe && Rbuf[Rpoint-2]  == 0xff
    609                   && Rbuf[Rpoint-10] == 0xff && Rbuf[Rpoint-11] == 0xff)
   \   126F  9001ED            MOV     DPTR,#Rpoint+1
   \   1272  E0                MOVX    A,@DPTR
   \   1273  14                DEC     A
   \   1274  2488              ADD     A,#LOW(Rbuf)
   \   1276  F582              MOV     DPL,A
   \   1278  E4                CLR     A
   \   1279  3401              ADDC    A,#HIGH(Rbuf)
   \   127B  F583              MOV     DPH,A
   \   127D  E0                MOVX    A,@DPTR
   \   127E  B4FE02            CJNE    A,#254,$+5
   \   1281  8003              SJMP    $+5
   \   1283  021A5E            LJMP    ?0207
   \   1286  9001ED            MOV     DPTR,#Rpoint+1
   \   1289  E0                MOVX    A,@DPTR
   \   128A  24FE              ADD     A,#254
   \   128C  2488              ADD     A,#LOW(Rbuf)
   \   128E  F582              MOV     DPL,A
   \   1290  E4                CLR     A
   \   1291  3401              ADDC    A,#HIGH(Rbuf)
   \   1293  F583              MOV     DPH,A
   \   1295  E0                MOVX    A,@DPTR
   \   1296  04                INC     A
   \   1297  6003              JZ      $+5
   \   1299  021A5E            LJMP    ?0207
   \   129C  9001ED            MOV     DPTR,#Rpoint+1
   \   129F  E0                MOVX    A,@DPTR
   \   12A0  24F6              ADD     A,#246
   \   12A2  2488              ADD     A,#LOW(Rbuf)
   \   12A4  F582              MOV     DPL,A
   \   12A6  E4                CLR     A
   \   12A7  3401              ADDC    A,#HIGH(Rbuf)
   \   12A9  F583              MOV     DPH,A
   \   12AB  E0                MOVX    A,@DPTR
   \   12AC  04                INC     A
   \   12AD  6003              JZ      $+5
   \   12AF  021A5E            LJMP    ?0207
   \   12B2  9001ED            MOV     DPTR,#Rpoint+1
   \   12B5  E0                MOVX    A,@DPTR
   \   12B6  24F5              ADD     A,#245
   \   12B8  2488              ADD     A,#LOW(Rbuf)
   \   12BA  F582              MOV     DPL,A
   \   12BC  E4                CLR     A
   \   12BD  3401              ADDC    A,#HIGH(Rbuf)
   \   12BF  F583              MOV     DPH,A
   \   12C1  E0                MOVX    A,@DPTR
   \   12C2  04                INC     A
   \   12C3  6003              JZ      $+5
   \   12C5  021A5E            LJMP    ?0207
   \   12C8            ?0209:
   \   12C8            ?0208:
   \   12C8            ?0206:
    610                  {
    611                      j=0;
   \   12C8  E4                CLR     A
   \   12C9  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   12CC  F0                MOVX    @DPTR,A
    612                      for(i=9; i != 3; i--)
   \   12CD  7409              MOV     A,#9
   \   12CF  900000            MOV     DPTR,#$LOCBX SCON_int
   \   12D2  F0                MOVX    @DPTR,A
   \   12D3            ?0211:
   \   12D3  900000            MOV     DPTR,#$LOCBX SCON_int
   \   12D6  E0                MOVX    A,@DPTR
   \   12D7  6403              XRL     A,#3
   \   12D9  6021              JZ      ?0210
   \   12DB            ?0212:
    613                          j ^= Rbuf[Rpoint-i];                // Calculation Check_sum
   \   12DB  E0                MOVX    A,@DPTR
   \   12DC  FC                MOV     R4,A
   \   12DD  9001ED            MOV     DPTR,#Rpoint+1
   \   12E0  E0                MOVX    A,@DPTR
   \   12E1  C3                CLR     C
   \   12E2  9C                SUBB    A,R4
   \   12E3  2488              ADD     A,#LOW(Rbuf)
   \   12E5  F582              MOV     DPL,A
   \   12E7  E4                CLR     A
   \   12E8  3401              ADDC    A,#HIGH(Rbuf)
   \   12EA  F583              MOV     DPH,A
   \   12EC  E0                MOVX    A,@DPTR
   \   12ED  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   12F0  FC                MOV     R4,A
   \   12F1  E0                MOVX    A,@DPTR
   \   12F2  6C                XRL     A,R4
   \   12F3  F0                MOVX    @DPTR,A
   \   12F4  900000            MOV     DPTR,#$LOCBX SCON_int
   \   12F7  E0                MOVX    A,@DPTR
   \   12F8  14                DEC     A
   \   12F9  F0                MOVX    @DPTR,A
   \   12FA  80D7              SJMP    ?0211
   \   12FC            ?0210:
    614                      if(j == Rbuf[Rpoint-3])
   \   12FC  9001ED            MOV     DPTR,#Rpoint+1
   \   12FF  E0                MOVX    A,@DPTR
   \   1300  24FD              ADD     A,#253
   \   1302  2488              ADD     A,#LOW(Rbuf)
   \   1304  F582              MOV     DPL,A
   \   1306  E4                CLR     A
   \   1307  3401              ADDC    A,#HIGH(Rbuf)
   \   1309  F583              MOV     DPH,A
   \   130B  E0                MOVX    A,@DPTR
   \   130C  FC                MOV     R4,A
   \   130D  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1310  E0                MOVX    A,@DPTR
   \   1311  6C                XRL     A,R4
   \   1312  6003              JZ      $+5
   \   1314  021A5E            LJMP    ?0215
   \   1317            ?0214:
    615                      {
    616                          if(Rbuf[Rpoint-8] == ID)            // Wind Direction Call
   \   1317  9001ED            MOV     DPTR,#Rpoint+1
   \   131A  E0                MOVX    A,@DPTR
   \   131B  24F8              ADD     A,#248
   \   131D  2488              ADD     A,#LOW(Rbuf)
   \   131F  F582              MOV     DPL,A
   \   1321  E4                CLR     A
   \   1322  3401              ADDC    A,#HIGH(Rbuf)
   \   1324  F583              MOV     DPH,A
   \   1326  E0                MOVX    A,@DPTR
   \   1327  FC                MOV     R4,A
   \   1328  900254            MOV     DPTR,#ID
   \   132B  E0                MOVX    A,@DPTR
   \   132C  6C                XRL     A,R4
   \   132D  6003              JZ      $+5
   \   132F  02168F            LJMP    ?0217
   \   1332            ?0216:
    617                          {
    618                              switch(Rbuf[Rpoint-9])
   \   1332  9001ED            MOV     DPTR,#Rpoint+1
   \   1335  E0                MOVX    A,@DPTR
   \   1336  24F7              ADD     A,#247
   \   1338  2488              ADD     A,#LOW(Rbuf)
   \   133A  F582              MOV     DPL,A
   \   133C  E4                CLR     A
   \   133D  3401              ADDC    A,#HIGH(Rbuf)
   \   133F  F583              MOV     DPH,A
   \   1341  E0                MOVX    A,@DPTR
   \   1342  B44D02            CJNE    A,#77,$+5
   \   1345  8003              SJMP    $+5
   \   1347  0213FE            LJMP    ?0224
   \   134A            ?0219:
    619                              {
    620                                  case 'M':
    621                                      Rpoint=0;
   \   134A  9001EC            MOV     DPTR,#Rpoint
   \   134D  E4                CLR     A
   \   134E  F0                MOVX    @DPTR,A
   \   134F  A3                INC     DPTR
   \   1350  F0                MOVX    @DPTR,A
    622                                      Sbuf[16]= 0xff;          // Head
   \   1351  14                DEC     A
   \   1352  9001FE            MOV     DPTR,#Sbuf+16
   \   1355  F0                MOVX    @DPTR,A
    623                                      Sbuf[15]= 0xff;
   \   1356  9001FD            MOV     DPTR,#Sbuf+15
   \   1359  F0                MOVX    @DPTR,A
    624                                      Sbuf[14]= 'M';
   \   135A  744D              MOV     A,#77
   \   135C  9001FC            MOV     DPTR,#Sbuf+14
   \   135F  F0                MOVX    @DPTR,A
    625                                      Sbuf[13]= Wdsta;
   \   1360  900000            MOV     DPTR,#Wdsta
   \   1363  E0                MOVX    A,@DPTR
   \   1364  9001FB            MOV     DPTR,#Sbuf+13
   \   1367  F0                MOVX    @DPTR,A
    626                                      Sbuf[12]= 0;            // Sensor Code
   \   1368  E4                CLR     A
   \   1369  9001FA            MOV     DPTR,#Sbuf+12
   \   136C  F0                MOVX    @DPTR,A
    627                                      Sbuf[11]= ID;           // sensor code & ID
   \   136D  900254            MOV     DPTR,#ID
   \   1370  E0                MOVX    A,@DPTR
   \   1371  9001F9            MOV     DPTR,#Sbuf+11
   \   1374  F0                MOVX    @DPTR,A
    628                                      Sbuf[10]= WdSec >> 8;
   \   1375  900048            MOV     DPTR,#WdSec
   \   1378  E0                MOVX    A,@DPTR
   \   1379  FD                MOV     R5,A
   \   137A  A3                INC     DPTR
   \   137B  E0                MOVX    A,@DPTR
   \   137C  ED                MOV     A,R5
   \   137D  7D00              MOV     R5,#0
   \   137F  9001F8            MOV     DPTR,#Sbuf+10
   \   1382  F0                MOVX    @DPTR,A
    629                                      Sbuf[9] = WdSec;
   \   1383  900049            MOV     DPTR,#WdSec+1
   \   1386  E0                MOVX    A,@DPTR
   \   1387  9001F7            MOV     DPTR,#Sbuf+9
   \   138A  F0                MOVX    @DPTR,A
    630                                      Sbuf[8] = 0;
   \   138B  ED                MOV     A,R5
   \   138C  9001F6            MOV     DPTR,#Sbuf+8
   \   138F  F0                MOVX    @DPTR,A
    631                                      Sbuf[7] = 0;
   \   1390  9001F5            MOV     DPTR,#Sbuf+7
   \   1393  F0                MOVX    @DPTR,A
    632                                      Sbuf[6] = 0;
   \   1394  9001F4            MOV     DPTR,#Sbuf+6
   \   1397  F0                MOVX    @DPTR,A
    633                                      Sbuf[5] = 0;
   \   1398  9001F3            MOV     DPTR,#Sbuf+5
   \   139B  F0                MOVX    @DPTR,A
    634                                      Sbuf[4] = WdGmax >> 8;
   \   139C  90016C            MOV     DPTR,#WdGmax
   \   139F  E0                MOVX    A,@DPTR
   \   13A0  FD                MOV     R5,A
   \   13A1  A3                INC     DPTR
   \   13A2  E0                MOVX    A,@DPTR
   \   13A3  ED                MOV     A,R5
   \   13A4  7D00              MOV     R5,#0
   \   13A6  9001F2            MOV     DPTR,#Sbuf+4
   \   13A9  F0                MOVX    @DPTR,A
    635                                      Sbuf[3] = WdGmax;
   \   13AA  90016D            MOV     DPTR,#WdGmax+1
   \   13AD  E0                MOVX    A,@DPTR
   \   13AE  9001F1            MOV     DPTR,#Sbuf+3
   \   13B1  F0                MOVX    @DPTR,A
    636                                      Sbuf[2] = 0;
   \   13B2  ED                MOV     A,R5
   \   13B3  9001F0            MOV     DPTR,#Sbuf+2
   \   13B6  F0                MOVX    @DPTR,A
    637                                      for(j=14;j != 2;j--)
   \   13B7  740E              MOV     A,#14
   \   13B9  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   13BC  F0                MOVX    @DPTR,A
   \   13BD            ?0221:
   \   13BD  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   13C0  E0                MOVX    A,@DPTR
   \   13C1  6402              XRL     A,#2
   \   13C3  601A              JZ      ?0220
   \   13C5            ?0222:
    638                                          Sbuf[2] ^= Sbuf[j];
   \   13C5  E0                MOVX    A,@DPTR
   \   13C6  24EE              ADD     A,#LOW(Sbuf)
   \   13C8  F582              MOV     DPL,A
   \   13CA  E4                CLR     A
   \   13CB  3401              ADDC    A,#HIGH(Sbuf)
   \   13CD  F583              MOV     DPH,A
   \   13CF  E0                MOVX    A,@DPTR
   \   13D0  9001F0            MOV     DPTR,#Sbuf+2
   \   13D3  FC                MOV     R4,A
   \   13D4  E0                MOVX    A,@DPTR
   \   13D5  6C                XRL     A,R4
   \   13D6  F0                MOVX    @DPTR,A
   \   13D7  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   13DA  E0                MOVX    A,@DPTR
   \   13DB  14                DEC     A
   \   13DC  F0                MOVX    @DPTR,A
   \   13DD  80DE              SJMP    ?0221
   \   13DF            ?0220:
    639                                      Sbuf[1] = 0xff;
   \   13DF  74FF              MOV     A,#255
   \   13E1  9001EF            MOV     DPTR,#Sbuf+1
   \   13E4  F0                MOVX    @DPTR,A
    640                                      Sbuf[0] = 0xfe;
   \   13E5  14                DEC     A
   \   13E6  9001EE            MOV     DPTR,#Sbuf
   \   13E9  F0                MOVX    @DPTR,A
    641                                      Spoint=16;
   \   13EA  900252            MOV     DPTR,#Spoint
   \   13ED  E4                CLR     A
   \   13EE  F0                MOVX    @DPTR,A
   \   13EF  A3                INC     DPTR
   \   13F0  7410              MOV     A,#16
   \   13F2  F0                MOVX    @DPTR,A
    642                                      Comon=1;
   \   13F3  D202              SETB    Comon
    643                                      SBUF=Sbuf[16];
   \   13F5  9001FE            MOV     DPTR,#Sbuf+16
   \   13F8  E0                MOVX    A,@DPTR
   \   13F9  F599              MOV     SBUF,A
    644                                      break;
   \   13FB  02168F            LJMP    ?0218
   \   13FE            ?0224:
   \   13FE  B44F02            CJNE    A,#79,$+5
   \   1401  8003              SJMP    $+5
   \   1403  0214C8            LJMP    ?0229
    645                                  case 'O':
    646                                      Rpoint=0;
   \   1406  9001EC            MOV     DPTR,#Rpoint
   \   1409  E4                CLR     A
   \   140A  F0                MOVX    @DPTR,A
   \   140B  A3                INC     DPTR
   \   140C  F0                MOVX    @DPTR,A
    647                                      Sbuf[16]= 0xff;      // Head
   \   140D  14                DEC     A
   \   140E  9001FE            MOV     DPTR,#Sbuf+16
   \   1411  F0                MOVX    @DPTR,A
    648                                      Sbuf[15]= 0xff;
   \   1412  9001FD            MOV     DPTR,#Sbuf+15
   \   1415  F0                MOVX    @DPTR,A
    649                                      Sbuf[14]= 'O';
   \   1416  744F              MOV     A,#79
   \   1418  9001FC            MOV     DPTR,#Sbuf+14
   \   141B  F0                MOVX    @DPTR,A
    650                                      Sbuf[13]= Wdsta;
   \   141C  900000            MOV     DPTR,#Wdsta
   \   141F  E0                MOVX    A,@DPTR
   \   1420  9001FB            MOV     DPTR,#Sbuf+13
   \   1423  F0                MOVX    @DPTR,A
    651                                      Sbuf[12]= 0;        // Sensor Code
   \   1424  E4                CLR     A
   \   1425  9001FA            MOV     DPTR,#Sbuf+12
   \   1428  F0                MOVX    @DPTR,A
    652                                      Sbuf[11]= ID;       // Sensor ID
   \   1429  900254            MOV     DPTR,#ID
   \   142C  E0                MOVX    A,@DPTR
   \   142D  9001F9            MOV     DPTR,#Sbuf+11
   \   1430  F0                MOVX    @DPTR,A
    653                                      Sbuf[10]= WdMin >> 8;
   \   1431  90013C            MOV     DPTR,#WdMin
   \   1434  E0                MOVX    A,@DPTR
   \   1435  FD                MOV     R5,A
   \   1436  A3                INC     DPTR
   \   1437  E0                MOVX    A,@DPTR
   \   1438  ED                MOV     A,R5
   \   1439  7D00              MOV     R5,#0
   \   143B  9001F8            MOV     DPTR,#Sbuf+10
   \   143E  F0                MOVX    @DPTR,A
    654                                      Sbuf[9] = WdMin;
   \   143F  90013D            MOV     DPTR,#WdMin+1
   \   1442  E0                MOVX    A,@DPTR
   \   1443  9001F7            MOV     DPTR,#Sbuf+9
   \   1446  F0                MOVX    @DPTR,A
    655                                      Sbuf[8] = WdThvalue >> 8;
   \   1447  900180            MOV     DPTR,#WdThvalue
   \   144A  E0                MOVX    A,@DPTR
   \   144B  FD                MOV     R5,A
   \   144C  A3                INC     DPTR
   \   144D  E0                MOVX    A,@DPTR
   \   144E  ED                MOV     A,R5
   \   144F  7D00              MOV     R5,#0
   \   1451  9001F6            MOV     DPTR,#Sbuf+8
   \   1454  F0                MOVX    @DPTR,A
    656                                      Sbuf[7] = WdThvalue;
   \   1455  900181            MOV     DPTR,#WdThvalue+1
   \   1458  E0                MOVX    A,@DPTR
   \   1459  9001F5            MOV     DPTR,#Sbuf+7
   \   145C  F0                MOVX    @DPTR,A
    657                                      Sbuf[6] = 0;
   \   145D  ED                MOV     A,R5
   \   145E  9001F4            MOV     DPTR,#Sbuf+6
   \   1461  F0                MOVX    @DPTR,A
    658                                      Sbuf[5] = 0;
   \   1462  9001F3            MOV     DPTR,#Sbuf+5
   \   1465  F0                MOVX    @DPTR,A
    659                                      Sbuf[4]=WdGmax >> 8;
   \   1466  90016C            MOV     DPTR,#WdGmax
   \   1469  E0                MOVX    A,@DPTR
   \   146A  FD                MOV     R5,A
   \   146B  A3                INC     DPTR
   \   146C  E0                MOVX    A,@DPTR
   \   146D  ED                MOV     A,R5
   \   146E  7D00              MOV     R5,#0
   \   1470  9001F2            MOV     DPTR,#Sbuf+4
   \   1473  F0                MOVX    @DPTR,A
    660                                      Sbuf[3]=WdGmax;
   \   1474  90016D            MOV     DPTR,#WdGmax+1
   \   1477  E0                MOVX    A,@DPTR
   \   1478  9001F1            MOV     DPTR,#Sbuf+3
   \   147B  F0                MOVX    @DPTR,A
    661                                      Sbuf[2] = 0;
   \   147C  ED                MOV     A,R5
   \   147D  9001F0            MOV     DPTR,#Sbuf+2
   \   1480  F0                MOVX    @DPTR,A
    662                                      for(j=14;j != 2;j--)
   \   1481  740E              MOV     A,#14
   \   1483  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1486  F0                MOVX    @DPTR,A
   \   1487            ?0226:
   \   1487  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   148A  E0                MOVX    A,@DPTR
   \   148B  6402              XRL     A,#2
   \   148D  601A              JZ      ?0225
   \   148F            ?0227:
    663                                          Sbuf[2] ^= Sbuf[j];
   \   148F  E0                MOVX    A,@DPTR
   \   1490  24EE              ADD     A,#LOW(Sbuf)
   \   1492  F582              MOV     DPL,A
   \   1494  E4                CLR     A
   \   1495  3401              ADDC    A,#HIGH(Sbuf)
   \   1497  F583              MOV     DPH,A
   \   1499  E0                MOVX    A,@DPTR
   \   149A  9001F0            MOV     DPTR,#Sbuf+2
   \   149D  FC                MOV     R4,A
   \   149E  E0                MOVX    A,@DPTR
   \   149F  6C                XRL     A,R4
   \   14A0  F0                MOVX    @DPTR,A
   \   14A1  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   14A4  E0                MOVX    A,@DPTR
   \   14A5  14                DEC     A
   \   14A6  F0                MOVX    @DPTR,A
   \   14A7  80DE              SJMP    ?0226
   \   14A9            ?0225:
    664                                      Sbuf[1] = 0xff;
   \   14A9  74FF              MOV     A,#255
   \   14AB  9001EF            MOV     DPTR,#Sbuf+1
   \   14AE  F0                MOVX    @DPTR,A
    665                                      Sbuf[0] = 0xfe;
   \   14AF  14                DEC     A
   \   14B0  9001EE            MOV     DPTR,#Sbuf
   \   14B3  F0                MOVX    @DPTR,A
    666                                      Spoint=16;
   \   14B4  900252            MOV     DPTR,#Spoint
   \   14B7  E4                CLR     A
   \   14B8  F0                MOVX    @DPTR,A
   \   14B9  A3                INC     DPTR
   \   14BA  7410              MOV     A,#16
   \   14BC  F0                MOVX    @DPTR,A
    667                                      Comon=1;
   \   14BD  D202              SETB    Comon
    668                                      SBUF=Sbuf[16];
   \   14BF  9001FE            MOV     DPTR,#Sbuf+16
   \   14C2  E0                MOVX    A,@DPTR
   \   14C3  F599              MOV     SBUF,A
    669                                      break;
   \   14C5  02168F            LJMP    ?0218
   \   14C8            ?0229:
   \   14C8  B45402            CJNE    A,#84,$+5
   \   14CB  8003              SJMP    $+5
   \   14CD  021580            LJMP    ?0234
    670                                  case 'T':
    671                                      Rpoint=0;
   \   14D0  9001EC            MOV     DPTR,#Rpoint
   \   14D3  E4                CLR     A
   \   14D4  F0                MOVX    @DPTR,A
   \   14D5  A3                INC     DPTR
   \   14D6  F0                MOVX    @DPTR,A
    672                                      Sbuf[16]= 0xff;      /* Head */
   \   14D7  14                DEC     A
   \   14D8  9001FE            MOV     DPTR,#Sbuf+16
   \   14DB  F0                MOVX    @DPTR,A
    673                                      Sbuf[15]=0xff;
   \   14DC  9001FD            MOV     DPTR,#Sbuf+15
   \   14DF  F0                MOVX    @DPTR,A
    674                                      Sbuf[14]= 'T';
   \   14E0  7454              MOV     A,#84
   \   14E2  9001FC            MOV     DPTR,#Sbuf+14
   \   14E5  F0                MOVX    @DPTR,A
    675                                      Sbuf[13]= 0;
   \   14E6  E4                CLR     A
   \   14E7  9001FB            MOV     DPTR,#Sbuf+13
   \   14EA  F0                MOVX    @DPTR,A
    676                                      Sbuf[12]= 0;        // Sensor Code
   \   14EB  9001FA            MOV     DPTR,#Sbuf+12
   \   14EE  F0                MOVX    @DPTR,A
    677                                      Sbuf[11]= ID;       // Sensor ID
   \   14EF  900254            MOV     DPTR,#ID
   \   14F2  E0                MOVX    A,@DPTR
   \   14F3  9001F9            MOV     DPTR,#Sbuf+11
   \   14F6  F0                MOVX    @DPTR,A
    678                                      Sbuf[10]= WdTen >> 8;
   \   14F7  90016A            MOV     DPTR,#WdTen
   \   14FA  E0                MOVX    A,@DPTR
   \   14FB  FD                MOV     R5,A
   \   14FC  A3                INC     DPTR
   \   14FD  E0                MOVX    A,@DPTR
   \   14FE  ED                MOV     A,R5
   \   14FF  7D00              MOV     R5,#0
   \   1501  9001F8            MOV     DPTR,#Sbuf+10
   \   1504  F0                MOVX    @DPTR,A
    679                                      Sbuf[9] = WdTen;
   \   1505  90016B            MOV     DPTR,#WdTen+1
   \   1508  E0                MOVX    A,@DPTR
   \   1509  9001F7            MOV     DPTR,#Sbuf+9
   \   150C  F0                MOVX    @DPTR,A
    680                                      Sbuf[8] = 0;
   \   150D  ED                MOV     A,R5
   \   150E  9001F6            MOV     DPTR,#Sbuf+8
   \   1511  F0                MOVX    @DPTR,A
    681                                      Sbuf[7] = 0;
   \   1512  9001F5            MOV     DPTR,#Sbuf+7
   \   1515  F0                MOVX    @DPTR,A
    682                                      Sbuf[6] = 0;
   \   1516  9001F4            MOV     DPTR,#Sbuf+6
   \   1519  F0                MOVX    @DPTR,A
    683                                      Sbuf[5] = 0;
   \   151A  9001F3            MOV     DPTR,#Sbuf+5
   \   151D  F0                MOVX    @DPTR,A
    684                                      Sbuf[4]=WdGmax >> 8;
   \   151E  90016C            MOV     DPTR,#WdGmax
   \   1521  E0                MOVX    A,@DPTR
   \   1522  FD                MOV     R5,A
   \   1523  A3                INC     DPTR
   \   1524  E0                MOVX    A,@DPTR
   \   1525  ED                MOV     A,R5
   \   1526  7D00              MOV     R5,#0
   \   1528  9001F2            MOV     DPTR,#Sbuf+4
   \   152B  F0                MOVX    @DPTR,A
    685                                      Sbuf[3]=WdGmax;
   \   152C  90016D            MOV     DPTR,#WdGmax+1
   \   152F  E0                MOVX    A,@DPTR
   \   1530  9001F1            MOV     DPTR,#Sbuf+3
   \   1533  F0                MOVX    @DPTR,A
    686                                      Sbuf[2] = 0;
   \   1534  ED                MOV     A,R5
   \   1535  9001F0            MOV     DPTR,#Sbuf+2
   \   1538  F0                MOVX    @DPTR,A
    687                                      for(j=14;j != 2;j--)
   \   1539  740E              MOV     A,#14
   \   153B  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   153E  F0                MOVX    @DPTR,A
   \   153F            ?0231:
   \   153F  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1542  E0                MOVX    A,@DPTR
   \   1543  6402              XRL     A,#2
   \   1545  601A              JZ      ?0230
   \   1547            ?0232:
    688                                          Sbuf[2] ^= Sbuf[j];
   \   1547  E0                MOVX    A,@DPTR
   \   1548  24EE              ADD     A,#LOW(Sbuf)
   \   154A  F582              MOV     DPL,A
   \   154C  E4                CLR     A
   \   154D  3401              ADDC    A,#HIGH(Sbuf)
   \   154F  F583              MOV     DPH,A
   \   1551  E0                MOVX    A,@DPTR
   \   1552  9001F0            MOV     DPTR,#Sbuf+2
   \   1555  FC                MOV     R4,A
   \   1556  E0                MOVX    A,@DPTR
   \   1557  6C                XRL     A,R4
   \   1558  F0                MOVX    @DPTR,A
   \   1559  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   155C  E0                MOVX    A,@DPTR
   \   155D  14                DEC     A
   \   155E  F0                MOVX    @DPTR,A
   \   155F  80DE              SJMP    ?0231
   \   1561            ?0230:
    689                                      Sbuf[1] = 0xff;
   \   1561  74FF              MOV     A,#255
   \   1563  9001EF            MOV     DPTR,#Sbuf+1
   \   1566  F0                MOVX    @DPTR,A
    690                                      Sbuf[0] = 0xfe;
   \   1567  14                DEC     A
   \   1568  9001EE            MOV     DPTR,#Sbuf
   \   156B  F0                MOVX    @DPTR,A
    691                                      Spoint=16;
   \   156C  900252            MOV     DPTR,#Spoint
   \   156F  E4                CLR     A
   \   1570  F0                MOVX    @DPTR,A
   \   1571  A3                INC     DPTR
   \   1572  7410              MOV     A,#16
   \   1574  F0                MOVX    @DPTR,A
    692                                      Comon=1;
   \   1575  D202              SETB    Comon
    693                                      SBUF=Sbuf[16];
   \   1577  9001FE            MOV     DPTR,#Sbuf+16
   \   157A  E0                MOVX    A,@DPTR
   \   157B  F599              MOV     SBUF,A
    694                                      break;
   \   157D  02168F            LJMP    ?0218
   \   1580            ?0234:
   \   1580  B45202            CJNE    A,#82,$+5
   \   1583  8003              SJMP    $+5
   \   1585  021649            LJMP    ?0239
    695                                  case 'R':                   // Call Real Value
    696                                      Rpoint=0;
   \   1588  9001EC            MOV     DPTR,#Rpoint
   \   158B  E4                CLR     A
   \   158C  F0                MOVX    @DPTR,A
   \   158D  A3                INC     DPTR
   \   158E  F0                MOVX    @DPTR,A
    697                                      Sbuf[16]= 0xff;         // Head
   \   158F  14                DEC     A
   \   1590  9001FE            MOV     DPTR,#Sbuf+16
   \   1593  F0                MOVX    @DPTR,A
    698                                      Sbuf[15]= 0xff;
   \   1594  9001FD            MOV     DPTR,#Sbuf+15
   \   1597  F0                MOVX    @DPTR,A
    699                                      Sbuf[14]= 'R';
   \   1598  7452              MOV     A,#82
   \   159A  9001FC            MOV     DPTR,#Sbuf+14
   \   159D  F0                MOVX    @DPTR,A
    700                                      Sbuf[13]= Wdsta;
   \   159E  900000            MOV     DPTR,#Wdsta
   \   15A1  E0                MOVX    A,@DPTR
   \   15A2  9001FB            MOV     DPTR,#Sbuf+13
   \   15A5  F0                MOVX    @DPTR,A
    701                                      Sbuf[12]= 0;            // Sensor Code
   \   15A6  E4                CLR     A
   \   15A7  9001FA            MOV     DPTR,#Sbuf+12
   \   15AA  F0                MOVX    @DPTR,A
    702                                      Sbuf[11]= ID;           // Sensor ID
   \   15AB  900254            MOV     DPTR,#ID
   \   15AE  E0                MOVX    A,@DPTR
   \   15AF  9001F9            MOV     DPTR,#Sbuf+11
   \   15B2  F0                MOVX    @DPTR,A
    703                                      Sbuf[10]= Wdreal >> 8;
   \   15B3  90000D            MOV     DPTR,#Wdreal
   \   15B6  E0                MOVX    A,@DPTR
   \   15B7  FD                MOV     R5,A
   \   15B8  A3                INC     DPTR
   \   15B9  E0                MOVX    A,@DPTR
   \   15BA  ED                MOV     A,R5
   \   15BB  7D00              MOV     R5,#0
   \   15BD  9001F8            MOV     DPTR,#Sbuf+10
   \   15C0  F0                MOVX    @DPTR,A
    704                                      Sbuf[9] = Wdreal;
   \   15C1  90000E            MOV     DPTR,#Wdreal+1
   \   15C4  E0                MOVX    A,@DPTR
   \   15C5  9001F7            MOV     DPTR,#Sbuf+9
   \   15C8  F0                MOVX    @DPTR,A
    705                                      Sbuf[8] = WdSec >> 8;
   \   15C9  900048            MOV     DPTR,#WdSec
   \   15CC  E0                MOVX    A,@DPTR
   \   15CD  FD                MOV     R5,A
   \   15CE  A3                INC     DPTR
   \   15CF  E0                MOVX    A,@DPTR
   \   15D0  ED                MOV     A,R5
   \   15D1  7D00              MOV     R5,#0
   \   15D3  9001F6            MOV     DPTR,#Sbuf+8
   \   15D6  F0                MOVX    @DPTR,A
    706                                      Sbuf[7] = WdSec;
   \   15D7  900049            MOV     DPTR,#WdSec+1
   \   15DA  E0                MOVX    A,@DPTR
   \   15DB  9001F5            MOV     DPTR,#Sbuf+7
   \   15DE  F0                MOVX    @DPTR,A
    707                                      Sbuf[6] = 0;
   \   15DF  ED                MOV     A,R5
   \   15E0  9001F4            MOV     DPTR,#Sbuf+6
   \   15E3  F0                MOVX    @DPTR,A
    708                                      Sbuf[5] = 0;
   \   15E4  9001F3            MOV     DPTR,#Sbuf+5
   \   15E7  F0                MOVX    @DPTR,A
    709                                      Sbuf[4] = WdGmax >> 8;
   \   15E8  90016C            MOV     DPTR,#WdGmax
   \   15EB  E0                MOVX    A,@DPTR
   \   15EC  FD                MOV     R5,A
   \   15ED  A3                INC     DPTR
   \   15EE  E0                MOVX    A,@DPTR
   \   15EF  ED                MOV     A,R5
   \   15F0  7D00              MOV     R5,#0
   \   15F2  9001F2            MOV     DPTR,#Sbuf+4
   \   15F5  F0                MOVX    @DPTR,A
    710                                      Sbuf[3] = WdGmax;
   \   15F6  90016D            MOV     DPTR,#WdGmax+1
   \   15F9  E0                MOVX    A,@DPTR
   \   15FA  9001F1            MOV     DPTR,#Sbuf+3
   \   15FD  F0                MOVX    @DPTR,A
    711                                      Sbuf[2] = 0;
   \   15FE  ED                MOV     A,R5
   \   15FF  9001F0            MOV     DPTR,#Sbuf+2
   \   1602  F0                MOVX    @DPTR,A
    712                                      for(j=14;j != 2;j--)
   \   1603  740E              MOV     A,#14
   \   1605  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1608  F0                MOVX    @DPTR,A
   \   1609            ?0236:
   \   1609  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   160C  E0                MOVX    A,@DPTR
   \   160D  6402              XRL     A,#2
   \   160F  601A              JZ      ?0235
   \   1611            ?0237:
    713                                          Sbuf[2] ^= Sbuf[j];
   \   1611  E0                MOVX    A,@DPTR
   \   1612  24EE              ADD     A,#LOW(Sbuf)
   \   1614  F582              MOV     DPL,A
   \   1616  E4                CLR     A
   \   1617  3401              ADDC    A,#HIGH(Sbuf)
   \   1619  F583              MOV     DPH,A
   \   161B  E0                MOVX    A,@DPTR
   \   161C  9001F0            MOV     DPTR,#Sbuf+2
   \   161F  FC                MOV     R4,A
   \   1620  E0                MOVX    A,@DPTR
   \   1621  6C                XRL     A,R4
   \   1622  F0                MOVX    @DPTR,A
   \   1623  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1626  E0                MOVX    A,@DPTR
   \   1627  14                DEC     A
   \   1628  F0                MOVX    @DPTR,A
   \   1629  80DE              SJMP    ?0236
   \   162B            ?0235:
    714                                      Sbuf[1] = 0xff;
   \   162B  74FF              MOV     A,#255
   \   162D  9001EF            MOV     DPTR,#Sbuf+1
   \   1630  F0                MOVX    @DPTR,A
    715                                      Sbuf[0] = 0xfe;
   \   1631  14                DEC     A
   \   1632  9001EE            MOV     DPTR,#Sbuf
   \   1635  F0                MOVX    @DPTR,A
    716                                      Spoint=16;
   \   1636  900252            MOV     DPTR,#Spoint
   \   1639  E4                CLR     A
   \   163A  F0                MOVX    @DPTR,A
   \   163B  A3                INC     DPTR
   \   163C  7410              MOV     A,#16
   \   163E  F0                MOVX    @DPTR,A
    717                                      Comon=1;
   \   163F  D202              SETB    Comon
    718                                      SBUF=Sbuf[16];
   \   1641  9001FE            MOV     DPTR,#Sbuf+16
   \   1644  E0                MOVX    A,@DPTR
   \   1645  F599              MOV     SBUF,A
    719                                      break;
   \   1647  8046              SJMP    ?0218
   \   1649            ?0239:
   \   1649  B44043            CJNE    A,#64,?0218
    720                                  case '@':
    721                                      WdGmax=Rbuf[Rpoint-5] << 8 | Rbuf[Rpoint-4];
   \   164C  9001EC            MOV     DPTR,#Rpoint
   \   164F  E0                MOVX    A,@DPTR
   \   1650  FF                MOV     R7,A
   \   1651  A3                INC     DPTR
   \   1652  E0                MOVX    A,@DPTR
   \   1653  FE                MOV     R6,A
   \   1654  24FB              ADD     A,#251
   \   1656  2488              ADD     A,#LOW(Rbuf)
   \   1658  F582              MOV     DPL,A
   \   165A  E4                CLR     A
   \   165B  3401              ADDC    A,#HIGH(Rbuf)
   \   165D  F583              MOV     DPH,A
   \   165F  E0                MOVX    A,@DPTR
   \   1660  7D00              MOV     R5,#0
   \   1662  7C00              MOV     R4,#0
   \   1664  CE                XCH     A,R6
   \   1665  FA                MOV     R2,A
   \   1666  CE                XCH     A,R6
   \   1667  FD                MOV     R5,A
   \   1668  EA                MOV     A,R2
   \   1669  24FC              ADD     A,#252
   \   166B  2488              ADD     A,#LOW(Rbuf)
   \   166D  F582              MOV     DPL,A
   \   166F  E4                CLR     A
   \   1670  3401              ADDC    A,#HIGH(Rbuf)
   \   1672  F583              MOV     DPH,A
   \   1674  E0                MOVX    A,@DPTR
   \   1675  7B00              MOV     R3,#0
   \   1677  FA                MOV     R2,A
   \   1678  EC                MOV     A,R4
   \   1679  4A                ORL     A,R2
   \   167A  FC                MOV     R4,A
   \   167B  ED                MOV     A,R5
   \   167C  90016C            MOV     DPTR,#WdGmax
   \   167F  F0                MOVX    @DPTR,A
   \   1680  A3                INC     DPTR
   \   1681  CC                XCH     A,R4
   \   1682  F0                MOVX    @DPTR,A
   \   1683  CC                XCH     A,R4
    722                                      Rpoint=0;
   \   1684  EB                MOV     A,R3
   \   1685  FE                MOV     R6,A
   \   1686  FF                MOV     R7,A
   \   1687  9001EC            MOV     DPTR,#Rpoint
   \   168A  F0                MOVX    @DPTR,A
   \   168B  A3                INC     DPTR
   \   168C  F0                MOVX    @DPTR,A
    723                                      break;
   \   168D  8000              SJMP    ?0218
   \   168F            ?0218:
   \   168F            ?0217:
    724                              }
    725                          }
    726                          if(Rbuf[Rpoint-8] == ID+1)          // Wind Speed Call
   \   168F  9001ED            MOV     DPTR,#Rpoint+1
   \   1692  E0                MOVX    A,@DPTR
   \   1693  24F8              ADD     A,#248
   \   1695  2488              ADD     A,#LOW(Rbuf)
   \   1697  F582              MOV     DPL,A
   \   1699  E4                CLR     A
   \   169A  3401              ADDC    A,#HIGH(Rbuf)
   \   169C  F583              MOV     DPH,A
   \   169E  E0                MOVX    A,@DPTR
   \   169F  7D00              MOV     R5,#0
   \   16A1  FC                MOV     R4,A
   \   16A2  900254            MOV     DPTR,#ID
   \   16A5  E0                MOVX    A,@DPTR
   \   16A6  7F00              MOV     R7,#0
   \   16A8  04                INC     A
   \   16A9  FE                MOV     R6,A
   \   16AA  7001              JNZ     ?0369
   \   16AC  0F                INC     R7
   \   16AD            ?0369:
   \   16AD  EC                MOV     A,R4
   \   16AE  6E                XRL     A,R6
   \   16AF  7002              JNZ     ?0370
   \   16B1  ED                MOV     A,R5
   \   16B2  6F                XRL     A,R7
   \   16B3            ?0370:
   \   16B3  6003              JZ      $+5
   \   16B5  021A1F            LJMP    ?0241
   \   16B8            ?0240:
    727                          {
    728                              switch(Rbuf[Rpoint-9])
   \   16B8  9001ED            MOV     DPTR,#Rpoint+1
   \   16BB  E0                MOVX    A,@DPTR
   \   16BC  24F7              ADD     A,#247
   \   16BE  2488              ADD     A,#LOW(Rbuf)
   \   16C0  F582              MOV     DPL,A
   \   16C2  E4                CLR     A
   \   16C3  3401              ADDC    A,#HIGH(Rbuf)
   \   16C5  F583              MOV     DPH,A
   \   16C7  E0                MOVX    A,@DPTR
   \   16C8  B44D02            CJNE    A,#77,$+5
   \   16CB  8003              SJMP    $+5
   \   16CD  021786            LJMP    ?0248
   \   16D0            ?0243:
    729                              {
    730                                  case 'M':
    731                                      Rpoint=0;
   \   16D0  9001EC            MOV     DPTR,#Rpoint
   \   16D3  E4                CLR     A
   \   16D4  F0                MOVX    @DPTR,A
   \   16D5  A3                INC     DPTR
   \   16D6  F0                MOVX    @DPTR,A
    732                                      Sbuf[16]= 0xff;          // Head
   \   16D7  14                DEC     A
   \   16D8  9001FE            MOV     DPTR,#Sbuf+16
   \   16DB  F0                MOVX    @DPTR,A
    733                                      Sbuf[15]= 0xff;
   \   16DC  9001FD            MOV     DPTR,#Sbuf+15
   \   16DF  F0                MOVX    @DPTR,A
    734                                      Sbuf[14]= 'M';
   \   16E0  744D              MOV     A,#77
   \   16E2  9001FC            MOV     DPTR,#Sbuf+14
   \   16E5  F0                MOVX    @DPTR,A
    735                                      Sbuf[13]= Wssta;
   \   16E6  900001            MOV     DPTR,#Wssta
   \   16E9  E0                MOVX    A,@DPTR
   \   16EA  9001FB            MOV     DPTR,#Sbuf+13
   \   16ED  F0                MOVX    @DPTR,A
    736                                      Sbuf[12]= 0x01;         // Sensor Code
   \   16EE  7401              MOV     A,#1
   \   16F0  9001FA            MOV     DPTR,#Sbuf+12
   \   16F3  F0                MOVX    @DPTR,A
    737                                      Sbuf[11]= ID+1;         // Sensor ID
   \   16F4  900254            MOV     DPTR,#ID
   \   16F7  E0                MOVX    A,@DPTR
   \   16F8  04                INC     A
   \   16F9  9001F9            MOV     DPTR,#Sbuf+11
   \   16FC  F0                MOVX    @DPTR,A
    738                                      Sbuf[10]= WsSec >> 8;
   \   16FD  9000C2            MOV     DPTR,#WsSec
   \   1700  E0                MOVX    A,@DPTR
   \   1701  FD                MOV     R5,A
   \   1702  A3                INC     DPTR
   \   1703  E0                MOVX    A,@DPTR
   \   1704  ED                MOV     A,R5
   \   1705  7D00              MOV     R5,#0
   \   1707  9001F8            MOV     DPTR,#Sbuf+10
   \   170A  F0                MOVX    @DPTR,A
    739                                      Sbuf[9] = WsSec;
   \   170B  9000C3            MOV     DPTR,#WsSec+1
   \   170E  E0                MOVX    A,@DPTR
   \   170F  9001F7            MOV     DPTR,#Sbuf+9
   \   1712  F0                MOVX    @DPTR,A
    740                                      Sbuf[8] = 0;
   \   1713  ED                MOV     A,R5
   \   1714  9001F6            MOV     DPTR,#Sbuf+8
   \   1717  F0                MOVX    @DPTR,A
    741                                      Sbuf[7] = 0;
   \   1718  9001F5            MOV     DPTR,#Sbuf+7
   \   171B  F0                MOVX    @DPTR,A
    742                                      Sbuf[6] = 0;
   \   171C  9001F4            MOV     DPTR,#Sbuf+6
   \   171F  F0                MOVX    @DPTR,A
    743                                      Sbuf[5] = 0;
   \   1720  9001F3            MOV     DPTR,#Sbuf+5
   \   1723  F0                MOVX    @DPTR,A
    744                                      Sbuf[4] = WsGmax >> 8;
   \   1724  90016E            MOV     DPTR,#WsGmax
   \   1727  E0                MOVX    A,@DPTR
   \   1728  FD                MOV     R5,A
   \   1729  A3                INC     DPTR
   \   172A  E0                MOVX    A,@DPTR
   \   172B  ED                MOV     A,R5
   \   172C  7D00              MOV     R5,#0
   \   172E  9001F2            MOV     DPTR,#Sbuf+4
   \   1731  F0                MOVX    @DPTR,A
    745                                      Sbuf[3] = WsGmax;
   \   1732  90016F            MOV     DPTR,#WsGmax+1
   \   1735  E0                MOVX    A,@DPTR
   \   1736  9001F1            MOV     DPTR,#Sbuf+3
   \   1739  F0                MOVX    @DPTR,A
    746                                      Sbuf[2] = 0;
   \   173A  ED                MOV     A,R5
   \   173B  9001F0            MOV     DPTR,#Sbuf+2
   \   173E  F0                MOVX    @DPTR,A
    747                                      for(j=14;j != 2;j--)
   \   173F  740E              MOV     A,#14
   \   1741  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1744  F0                MOVX    @DPTR,A
   \   1745            ?0245:
   \   1745  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1748  E0                MOVX    A,@DPTR
   \   1749  6402              XRL     A,#2
   \   174B  601A              JZ      ?0244
   \   174D            ?0246:
    748                                          Sbuf[2] ^= Sbuf[j];
   \   174D  E0                MOVX    A,@DPTR
   \   174E  24EE              ADD     A,#LOW(Sbuf)
   \   1750  F582              MOV     DPL,A
   \   1752  E4                CLR     A
   \   1753  3401              ADDC    A,#HIGH(Sbuf)
   \   1755  F583              MOV     DPH,A
   \   1757  E0                MOVX    A,@DPTR
   \   1758  9001F0            MOV     DPTR,#Sbuf+2
   \   175B  FC                MOV     R4,A
   \   175C  E0                MOVX    A,@DPTR
   \   175D  6C                XRL     A,R4
   \   175E  F0                MOVX    @DPTR,A
   \   175F  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1762  E0                MOVX    A,@DPTR
   \   1763  14                DEC     A
   \   1764  F0                MOVX    @DPTR,A
   \   1765  80DE              SJMP    ?0245
   \   1767            ?0244:
    749                                      Sbuf[1] = 0xff;
   \   1767  74FF              MOV     A,#255
   \   1769  9001EF            MOV     DPTR,#Sbuf+1
   \   176C  F0                MOVX    @DPTR,A
    750                                      Sbuf[0] = 0xfe;
   \   176D  14                DEC     A
   \   176E  9001EE            MOV     DPTR,#Sbuf
   \   1771  F0                MOVX    @DPTR,A
    751                                      Spoint=16;
   \   1772  900252            MOV     DPTR,#Spoint
   \   1775  E4                CLR     A
   \   1776  F0                MOVX    @DPTR,A
   \   1777  A3                INC     DPTR
   \   1778  7410              MOV     A,#16
   \   177A  F0                MOVX    @DPTR,A
    752                                      Comon=1;
   \   177B  D202              SETB    Comon
    753                                      SBUF=Sbuf[16];
   \   177D  9001FE            MOV     DPTR,#Sbuf+16
   \   1780  E0                MOVX    A,@DPTR
   \   1781  F599              MOV     SBUF,A
    754                                      break;
   \   1783  021A1D            LJMP    ?0242
   \   1786            ?0248:
   \   1786  B44F02            CJNE    A,#79,$+5
   \   1789  8003              SJMP    $+5
   \   178B  021852            LJMP    ?0253
    755                                  case 'O':
    756                                      Rpoint=0;
   \   178E  9001EC            MOV     DPTR,#Rpoint
   \   1791  E4                CLR     A
   \   1792  F0                MOVX    @DPTR,A
   \   1793  A3                INC     DPTR
   \   1794  F0                MOVX    @DPTR,A
    757                                      Sbuf[16]= 0xff;             // Head
   \   1795  14                DEC     A
   \   1796  9001FE            MOV     DPTR,#Sbuf+16
   \   1799  F0                MOVX    @DPTR,A
    758                                      Sbuf[15]= 0xff;
   \   179A  9001FD            MOV     DPTR,#Sbuf+15
   \   179D  F0                MOVX    @DPTR,A
    759                                      Sbuf[14]= 'O';
   \   179E  744F              MOV     A,#79
   \   17A0  9001FC            MOV     DPTR,#Sbuf+14
   \   17A3  F0                MOVX    @DPTR,A
    760                                      Sbuf[13]= Wssta;
   \   17A4  900001            MOV     DPTR,#Wssta
   \   17A7  E0                MOVX    A,@DPTR
   \   17A8  9001FB            MOV     DPTR,#Sbuf+13
   \   17AB  F0                MOVX    @DPTR,A
    761                                      Sbuf[12]= 0x01;             // Sensor Code
   \   17AC  7401              MOV     A,#1
   \   17AE  9001FA            MOV     DPTR,#Sbuf+12
   \   17B1  F0                MOVX    @DPTR,A
    762                                      Sbuf[11]= ID+1;             // Sensor ID
   \   17B2  900254            MOV     DPTR,#ID
   \   17B5  E0                MOVX    A,@DPTR
   \   17B6  04                INC     A
   \   17B7  9001F9            MOV     DPTR,#Sbuf+11
   \   17BA  F0                MOVX    @DPTR,A
    763                                      Sbuf[10]= WsMin >> 8;
   \   17BB  900152            MOV     DPTR,#WsMin
   \   17BE  E0                MOVX    A,@DPTR
   \   17BF  FD                MOV     R5,A
   \   17C0  A3                INC     DPTR
   \   17C1  E0                MOVX    A,@DPTR
   \   17C2  ED                MOV     A,R5
   \   17C3  7D00              MOV     R5,#0
   \   17C5  9001F8            MOV     DPTR,#Sbuf+10
   \   17C8  F0                MOVX    @DPTR,A
    764                                      Sbuf[9] = WsMin;
   \   17C9  900153            MOV     DPTR,#WsMin+1
   \   17CC  E0                MOVX    A,@DPTR
   \   17CD  9001F7            MOV     DPTR,#Sbuf+9
   \   17D0  F0                MOVX    @DPTR,A
    765                                      Sbuf[8] = WsThvalue >> 8;
   \   17D1  900182            MOV     DPTR,#WsThvalue
   \   17D4  E0                MOVX    A,@DPTR
   \   17D5  FD                MOV     R5,A
   \   17D6  A3                INC     DPTR
   \   17D7  E0                MOVX    A,@DPTR
   \   17D8  ED                MOV     A,R5
   \   17D9  7D00              MOV     R5,#0
   \   17DB  9001F6            MOV     DPTR,#Sbuf+8
   \   17DE  F0                MOVX    @DPTR,A
    766                                      Sbuf[7] = WsThvalue;
   \   17DF  900183            MOV     DPTR,#WsThvalue+1
   \   17E2  E0                MOVX    A,@DPTR
   \   17E3  9001F5            MOV     DPTR,#Sbuf+7
   \   17E6  F0                MOVX    @DPTR,A
    767                                      Sbuf[6] = 0;
   \   17E7  ED                MOV     A,R5
   \   17E8  9001F4            MOV     DPTR,#Sbuf+6
   \   17EB  F0                MOVX    @DPTR,A
    768                                      Sbuf[5] = 0;
   \   17EC  9001F3            MOV     DPTR,#Sbuf+5
   \   17EF  F0                MOVX    @DPTR,A
    769                                      Sbuf[4]=WsGmax >> 8;
   \   17F0  90016E            MOV     DPTR,#WsGmax
   \   17F3  E0                MOVX    A,@DPTR
   \   17F4  FD                MOV     R5,A
   \   17F5  A3                INC     DPTR
   \   17F6  E0                MOVX    A,@DPTR
   \   17F7  ED                MOV     A,R5
   \   17F8  7D00              MOV     R5,#0
   \   17FA  9001F2            MOV     DPTR,#Sbuf+4
   \   17FD  F0                MOVX    @DPTR,A
    770                                      Sbuf[3]=WsGmax;
   \   17FE  90016F            MOV     DPTR,#WsGmax+1
   \   1801  E0                MOVX    A,@DPTR
   \   1802  9001F1            MOV     DPTR,#Sbuf+3
   \   1805  F0                MOVX    @DPTR,A
    771                                      Sbuf[2] = 0;
   \   1806  ED                MOV     A,R5
   \   1807  9001F0            MOV     DPTR,#Sbuf+2
   \   180A  F0                MOVX    @DPTR,A
    772                                      for(j=14;j != 2;j--)
   \   180B  740E              MOV     A,#14
   \   180D  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1810  F0                MOVX    @DPTR,A
   \   1811            ?0250:
   \   1811  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1814  E0                MOVX    A,@DPTR
   \   1815  6402              XRL     A,#2
   \   1817  601A              JZ      ?0249
   \   1819            ?0251:
    773                                          Sbuf[2] ^= Sbuf[j];
   \   1819  E0                MOVX    A,@DPTR
   \   181A  24EE              ADD     A,#LOW(Sbuf)
   \   181C  F582              MOV     DPL,A
   \   181E  E4                CLR     A
   \   181F  3401              ADDC    A,#HIGH(Sbuf)
   \   1821  F583              MOV     DPH,A
   \   1823  E0                MOVX    A,@DPTR
   \   1824  9001F0            MOV     DPTR,#Sbuf+2
   \   1827  FC                MOV     R4,A
   \   1828  E0                MOVX    A,@DPTR
   \   1829  6C                XRL     A,R4
   \   182A  F0                MOVX    @DPTR,A
   \   182B  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   182E  E0                MOVX    A,@DPTR
   \   182F  14                DEC     A
   \   1830  F0                MOVX    @DPTR,A
   \   1831  80DE              SJMP    ?0250
   \   1833            ?0249:
    774                                      Sbuf[1] = 0xff;
   \   1833  74FF              MOV     A,#255
   \   1835  9001EF            MOV     DPTR,#Sbuf+1
   \   1838  F0                MOVX    @DPTR,A
    775                                      Sbuf[0] = 0xfe;
   \   1839  14                DEC     A
   \   183A  9001EE            MOV     DPTR,#Sbuf
   \   183D  F0                MOVX    @DPTR,A
    776                                      Spoint=16;
   \   183E  900252            MOV     DPTR,#Spoint
   \   1841  E4                CLR     A
   \   1842  F0                MOVX    @DPTR,A
   \   1843  A3                INC     DPTR
   \   1844  7410              MOV     A,#16
   \   1846  F0                MOVX    @DPTR,A
    777                                      Comon=1;
   \   1847  D202              SETB    Comon
    778                                      SBUF=Sbuf[16];
   \   1849  9001FE            MOV     DPTR,#Sbuf+16
   \   184C  E0                MOVX    A,@DPTR
   \   184D  F599              MOV     SBUF,A
    779                                      break;
   \   184F  021A1D            LJMP    ?0242
   \   1852            ?0253:
   \   1852  B45402            CJNE    A,#84,$+5
   \   1855  8003              SJMP    $+5
   \   1857  02190C            LJMP    ?0258
    780                                  case 'T':
    781                                      Rpoint=0;
   \   185A  9001EC            MOV     DPTR,#Rpoint
   \   185D  E4                CLR     A
   \   185E  F0                MOVX    @DPTR,A
   \   185F  A3                INC     DPTR
   \   1860  F0                MOVX    @DPTR,A
    782                                      Sbuf[16]= 0xff;         // Head
   \   1861  14                DEC     A
   \   1862  9001FE            MOV     DPTR,#Sbuf+16
   \   1865  F0                MOVX    @DPTR,A
    783                                      Sbuf[15]= 0xff;
   \   1866  9001FD            MOV     DPTR,#Sbuf+15
   \   1869  F0                MOVX    @DPTR,A
    784                                      Sbuf[14]= 'T';
   \   186A  7454              MOV     A,#84
   \   186C  9001FC            MOV     DPTR,#Sbuf+14
   \   186F  F0                MOVX    @DPTR,A
    785                                      Sbuf[13]= 0;
   \   1870  E4                CLR     A
   \   1871  9001FB            MOV     DPTR,#Sbuf+13
   \   1874  F0                MOVX    @DPTR,A
    786                                      Sbuf[12]= 0x01;         // Sensor Code
   \   1875  04                INC     A
   \   1876  9001FA            MOV     DPTR,#Sbuf+12
   \   1879  F0                MOVX    @DPTR,A
    787                                      Sbuf[11]= ID+1;         // Sensor ID
   \   187A  900254            MOV     DPTR,#ID
   \   187D  E0                MOVX    A,@DPTR
   \   187E  04                INC     A
   \   187F  9001F9            MOV     DPTR,#Sbuf+11
   \   1882  F0                MOVX    @DPTR,A
    788                                      Sbuf[10]= WsTen >> 8;
   \   1883  900168            MOV     DPTR,#WsTen
   \   1886  E0                MOVX    A,@DPTR
   \   1887  FD                MOV     R5,A
   \   1888  A3                INC     DPTR
   \   1889  E0                MOVX    A,@DPTR
   \   188A  ED                MOV     A,R5
   \   188B  7D00              MOV     R5,#0
   \   188D  9001F8            MOV     DPTR,#Sbuf+10
   \   1890  F0                MOVX    @DPTR,A
    789                                      Sbuf[9] = WsTen;
   \   1891  900169            MOV     DPTR,#WsTen+1
   \   1894  E0                MOVX    A,@DPTR
   \   1895  9001F7            MOV     DPTR,#Sbuf+9
   \   1898  F0                MOVX    @DPTR,A
    790                                      Sbuf[8] = 0;
   \   1899  ED                MOV     A,R5
   \   189A  9001F6            MOV     DPTR,#Sbuf+8
   \   189D  F0                MOVX    @DPTR,A
    791                                      Sbuf[7] = 0;
   \   189E  9001F5            MOV     DPTR,#Sbuf+7
   \   18A1  F0                MOVX    @DPTR,A
    792                                      Sbuf[6] = 0;
   \   18A2  9001F4            MOV     DPTR,#Sbuf+6
   \   18A5  F0                MOVX    @DPTR,A
    793                                      Sbuf[5] = 0;
   \   18A6  9001F3            MOV     DPTR,#Sbuf+5
   \   18A9  F0                MOVX    @DPTR,A
    794                                      Sbuf[4]=WsGmax >> 8;
   \   18AA  90016E            MOV     DPTR,#WsGmax
   \   18AD  E0                MOVX    A,@DPTR
   \   18AE  FD                MOV     R5,A
   \   18AF  A3                INC     DPTR
   \   18B0  E0                MOVX    A,@DPTR
   \   18B1  ED                MOV     A,R5
   \   18B2  7D00              MOV     R5,#0
   \   18B4  9001F2            MOV     DPTR,#Sbuf+4
   \   18B7  F0                MOVX    @DPTR,A
    795                                      Sbuf[3]=WsGmax;
   \   18B8  90016F            MOV     DPTR,#WsGmax+1
   \   18BB  E0                MOVX    A,@DPTR
   \   18BC  9001F1            MOV     DPTR,#Sbuf+3
   \   18BF  F0                MOVX    @DPTR,A
    796                                      Sbuf[2] = 0;
   \   18C0  ED                MOV     A,R5
   \   18C1  9001F0            MOV     DPTR,#Sbuf+2
   \   18C4  F0                MOVX    @DPTR,A
    797                                      for(j=14;j != 2;j--)
   \   18C5  740E              MOV     A,#14
   \   18C7  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   18CA  F0                MOVX    @DPTR,A
   \   18CB            ?0255:
   \   18CB  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   18CE  E0                MOVX    A,@DPTR
   \   18CF  6402              XRL     A,#2
   \   18D1  601A              JZ      ?0254
   \   18D3            ?0256:
    798                                          Sbuf[2] ^= Sbuf[j];
   \   18D3  E0                MOVX    A,@DPTR
   \   18D4  24EE              ADD     A,#LOW(Sbuf)
   \   18D6  F582              MOV     DPL,A
   \   18D8  E4                CLR     A
   \   18D9  3401              ADDC    A,#HIGH(Sbuf)
   \   18DB  F583              MOV     DPH,A
   \   18DD  E0                MOVX    A,@DPTR
   \   18DE  9001F0            MOV     DPTR,#Sbuf+2
   \   18E1  FC                MOV     R4,A
   \   18E2  E0                MOVX    A,@DPTR
   \   18E3  6C                XRL     A,R4
   \   18E4  F0                MOVX    @DPTR,A
   \   18E5  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   18E8  E0                MOVX    A,@DPTR
   \   18E9  14                DEC     A
   \   18EA  F0                MOVX    @DPTR,A
   \   18EB  80DE              SJMP    ?0255
   \   18ED            ?0254:
    799                                      Sbuf[1] = 0xff;
   \   18ED  74FF              MOV     A,#255
   \   18EF  9001EF            MOV     DPTR,#Sbuf+1
   \   18F2  F0                MOVX    @DPTR,A
    800                                      Sbuf[0] = 0xfe;
   \   18F3  14                DEC     A
   \   18F4  9001EE            MOV     DPTR,#Sbuf
   \   18F7  F0                MOVX    @DPTR,A
    801                                      Spoint=16;
   \   18F8  900252            MOV     DPTR,#Spoint
   \   18FB  E4                CLR     A
   \   18FC  F0                MOVX    @DPTR,A
   \   18FD  A3                INC     DPTR
   \   18FE  7410              MOV     A,#16
   \   1900  F0                MOVX    @DPTR,A
    802                                      Comon=1;
   \   1901  D202              SETB    Comon
    803                                      SBUF=Sbuf[16];
   \   1903  9001FE            MOV     DPTR,#Sbuf+16
   \   1906  E0                MOVX    A,@DPTR
   \   1907  F599              MOV     SBUF,A
    804                                      break;
   \   1909  021A1D            LJMP    ?0242
   \   190C            ?0258:
   \   190C  B45202            CJNE    A,#82,$+5
   \   190F  8003              SJMP    $+5
   \   1911  0219D7            LJMP    ?0263
    805                                  case 'R':
    806                                      Rpoint=0;
   \   1914  9001EC            MOV     DPTR,#Rpoint
   \   1917  E4                CLR     A
   \   1918  F0                MOVX    @DPTR,A
   \   1919  A3                INC     DPTR
   \   191A  F0                MOVX    @DPTR,A
    807                                      Sbuf[16]= 0xff;         // Head
   \   191B  14                DEC     A
   \   191C  9001FE            MOV     DPTR,#Sbuf+16
   \   191F  F0                MOVX    @DPTR,A
    808                                      Sbuf[15]= 0xff;
   \   1920  9001FD            MOV     DPTR,#Sbuf+15
   \   1923  F0                MOVX    @DPTR,A
    809                                      Sbuf[14]= 'R';
   \   1924  7452              MOV     A,#82
   \   1926  9001FC            MOV     DPTR,#Sbuf+14
   \   1929  F0                MOVX    @DPTR,A
    810                                      Sbuf[13]= Wssta;
   \   192A  900001            MOV     DPTR,#Wssta
   \   192D  E0                MOVX    A,@DPTR
   \   192E  9001FB            MOV     DPTR,#Sbuf+13
   \   1931  F0                MOVX    @DPTR,A
    811                                      Sbuf[12]= 0x01;         // Sensor Code
   \   1932  7401              MOV     A,#1
   \   1934  9001FA            MOV     DPTR,#Sbuf+12
   \   1937  F0                MOVX    @DPTR,A
    812                                      Sbuf[11]= ID+1;         // Sensor ID
   \   1938  900254            MOV     DPTR,#ID
   \   193B  E0                MOVX    A,@DPTR
   \   193C  04                INC     A
   \   193D  9001F9            MOV     DPTR,#Sbuf+11
   \   1940  F0                MOVX    @DPTR,A
    813                                      Sbuf[10]= Wsreal >> 8;
   \   1941  90000F            MOV     DPTR,#Wsreal
   \   1944  E0                MOVX    A,@DPTR
   \   1945  FD                MOV     R5,A
   \   1946  A3                INC     DPTR
   \   1947  E0                MOVX    A,@DPTR
   \   1948  ED                MOV     A,R5
   \   1949  7D00              MOV     R5,#0
   \   194B  9001F8            MOV     DPTR,#Sbuf+10
   \   194E  F0                MOVX    @DPTR,A
    814                                      Sbuf[9] = Wsreal;
   \   194F  900010            MOV     DPTR,#Wsreal+1
   \   1952  E0                MOVX    A,@DPTR
   \   1953  9001F7            MOV     DPTR,#Sbuf+9
   \   1956  F0                MOVX    @DPTR,A
    815                                      Sbuf[8] = WsSec >> 8;
   \   1957  9000C2            MOV     DPTR,#WsSec
   \   195A  E0                MOVX    A,@DPTR
   \   195B  FD                MOV     R5,A
   \   195C  A3                INC     DPTR
   \   195D  E0                MOVX    A,@DPTR
   \   195E  ED                MOV     A,R5
   \   195F  7D00              MOV     R5,#0
   \   1961  9001F6            MOV     DPTR,#Sbuf+8
   \   1964  F0                MOVX    @DPTR,A
    816                                      Sbuf[7] = WsSec;
   \   1965  9000C3            MOV     DPTR,#WsSec+1
   \   1968  E0                MOVX    A,@DPTR
   \   1969  9001F5            MOV     DPTR,#Sbuf+7
   \   196C  F0                MOVX    @DPTR,A
    817                                      Sbuf[6] = 0;
   \   196D  ED                MOV     A,R5
   \   196E  9001F4            MOV     DPTR,#Sbuf+6
   \   1971  F0                MOVX    @DPTR,A
    818                                      Sbuf[5] = 0;
   \   1972  9001F3            MOV     DPTR,#Sbuf+5
   \   1975  F0                MOVX    @DPTR,A
    819                                      Sbuf[4] = WsGmax >> 8;
   \   1976  90016E            MOV     DPTR,#WsGmax
   \   1979  E0                MOVX    A,@DPTR
   \   197A  FD                MOV     R5,A
   \   197B  A3                INC     DPTR
   \   197C  E0                MOVX    A,@DPTR
   \   197D  ED                MOV     A,R5
   \   197E  7D00              MOV     R5,#0
   \   1980  9001F2            MOV     DPTR,#Sbuf+4
   \   1983  F0                MOVX    @DPTR,A
    820                                      Sbuf[3] = WsGmax;
   \   1984  90016F            MOV     DPTR,#WsGmax+1
   \   1987  E0                MOVX    A,@DPTR
   \   1988  9001F1            MOV     DPTR,#Sbuf+3
   \   198B  F0                MOVX    @DPTR,A
    821                                      Sbuf[2] = 0;
   \   198C  ED                MOV     A,R5
   \   198D  9001F0            MOV     DPTR,#Sbuf+2
   \   1990  F0                MOVX    @DPTR,A
    822                                      for(j=14;j != 2;j--)
   \   1991  740E              MOV     A,#14
   \   1993  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   1996  F0                MOVX    @DPTR,A
   \   1997            ?0260:
   \   1997  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   199A  E0                MOVX    A,@DPTR
   \   199B  6402              XRL     A,#2
   \   199D  601A              JZ      ?0259
   \   199F            ?0261:
    823                                          Sbuf[2] ^= Sbuf[j];
   \   199F  E0                MOVX    A,@DPTR
   \   19A0  24EE              ADD     A,#LOW(Sbuf)
   \   19A2  F582              MOV     DPL,A
   \   19A4  E4                CLR     A
   \   19A5  3401              ADDC    A,#HIGH(Sbuf)
   \   19A7  F583              MOV     DPH,A
   \   19A9  E0                MOVX    A,@DPTR
   \   19AA  9001F0            MOV     DPTR,#Sbuf+2
   \   19AD  FC                MOV     R4,A
   \   19AE  E0                MOVX    A,@DPTR
   \   19AF  6C                XRL     A,R4
   \   19B0  F0                MOVX    @DPTR,A
   \   19B1  900000            MOV     DPTR,#$LOCBX SCON_int+1
   \   19B4  E0                MOVX    A,@DPTR
   \   19B5  14                DEC     A
   \   19B6  F0                MOVX    @DPTR,A
   \   19B7  80DE              SJMP    ?0260
   \   19B9            ?0259:
    824                                      Sbuf[1] = 0xff;
   \   19B9  74FF              MOV     A,#255
   \   19BB  9001EF            MOV     DPTR,#Sbuf+1
   \   19BE  F0                MOVX    @DPTR,A
    825                                      Sbuf[0] = 0xfe;
   \   19BF  14                DEC     A
   \   19C0  9001EE            MOV     DPTR,#Sbuf
   \   19C3  F0                MOVX    @DPTR,A
    826                                      Spoint=16;
   \   19C4  900252            MOV     DPTR,#Spoint
   \   19C7  E4                CLR     A
   \   19C8  F0                MOVX    @DPTR,A
   \   19C9  A3                INC     DPTR
   \   19CA  7410              MOV     A,#16
   \   19CC  F0                MOVX    @DPTR,A
    827                                      Comon=1;
   \   19CD  D202              SETB    Comon
    828                                      SBUF=Sbuf[16];
   \   19CF  9001FE            MOV     DPTR,#Sbuf+16
   \   19D2  E0                MOVX    A,@DPTR
   \   19D3  F599              MOV     SBUF,A
    829                                      break;
   \   19D5  8046              SJMP    ?0242
   \   19D7            ?0263:
   \   19D7  B44043            CJNE    A,#64,?0242
    830                                  case '@':
    831                                      WsGmax=Rbuf[Rpoint-5] << 8 | Rbuf[Rpoint-4];
   \   19DA  9001EC            MOV     DPTR,#Rpoint
   \   19DD  E0                MOVX    A,@DPTR
   \   19DE  FF                MOV     R7,A
   \   19DF  A3                INC     DPTR
   \   19E0  E0                MOVX    A,@DPTR
   \   19E1  FE                MOV     R6,A
   \   19E2  24FB              ADD     A,#251
   \   19E4  2488              ADD     A,#LOW(Rbuf)
   \   19E6  F582              MOV     DPL,A
   \   19E8  E4                CLR     A
   \   19E9  3401              ADDC    A,#HIGH(Rbuf)
   \   19EB  F583              MOV     DPH,A
   \   19ED  E0                MOVX    A,@DPTR
   \   19EE  7D00              MOV     R5,#0
   \   19F0  7C00              MOV     R4,#0
   \   19F2  CE                XCH     A,R6
   \   19F3  FA                MOV     R2,A
   \   19F4  CE                XCH     A,R6
   \   19F5  FD                MOV     R5,A
   \   19F6  EA                MOV     A,R2
   \   19F7  24FC              ADD     A,#252
   \   19F9  2488              ADD     A,#LOW(Rbuf)
   \   19FB  F582              MOV     DPL,A
   \   19FD  E4                CLR     A
   \   19FE  3401              ADDC    A,#HIGH(Rbuf)
   \   1A00  F583              MOV     DPH,A
   \   1A02  E0                MOVX    A,@DPTR
   \   1A03  7B00              MOV     R3,#0
   \   1A05  FA                MOV     R2,A
   \   1A06  EC                MOV     A,R4
   \   1A07  4A                ORL     A,R2
   \   1A08  FC                MOV     R4,A
   \   1A09  ED                MOV     A,R5
   \   1A0A  90016E            MOV     DPTR,#WsGmax
   \   1A0D  F0                MOVX    @DPTR,A
   \   1A0E  A3                INC     DPTR
   \   1A0F  CC                XCH     A,R4
   \   1A10  F0                MOVX    @DPTR,A
   \   1A11  CC                XCH     A,R4
    832                                      Rpoint=0;
   \   1A12  EB                MOV     A,R3
   \   1A13  FE                MOV     R6,A
   \   1A14  FF                MOV     R7,A
   \   1A15  9001EC            MOV     DPTR,#Rpoint
   \   1A18  F0                MOVX    @DPTR,A
   \   1A19  A3                INC     DPTR
   \   1A1A  F0                MOVX    @DPTR,A
    833                                      break;
   \   1A1B  8000              SJMP    ?0242
   \   1A1D            ?0242:
   \   1A1D  8038              SJMP    ?0264
   \   1A1F            ?0241:
    834                              }
    835                          }
    836          
    837                          else if(Rbuf[Rpoint-9] == 'I')
   \   1A1F  9001ED            MOV     DPTR,#Rpoint+1
   \   1A22  E0                MOVX    A,@DPTR
   \   1A23  24F7              ADD     A,#247
   \   1A25  2488              ADD     A,#LOW(Rbuf)
   \   1A27  F582              MOV     DPL,A
   \   1A29  E4                CLR     A
   \   1A2A  3401              ADDC    A,#HIGH(Rbuf)
   \   1A2C  F583              MOV     DPH,A
   \   1A2E  E0                MOVX    A,@DPTR
   \   1A2F  B44925            CJNE    A,#73,?0266
   \   1A32            ?0265:
    838                          {
    839                              Rpoint=0;
   \   1A32  9001EC            MOV     DPTR,#Rpoint
   \   1A35  E4                CLR     A
   \   1A36  F0                MOVX    @DPTR,A
   \   1A37  A3                INC     DPTR
   \   1A38  F0                MOVX    @DPTR,A
    840                              WdGmax=WdSec;
   \   1A39  900048            MOV     DPTR,#WdSec
   \   1A3C  E0                MOVX    A,@DPTR
   \   1A3D  FD                MOV     R5,A
   \   1A3E  A3                INC     DPTR
   \   1A3F  E0                MOVX    A,@DPTR
   \   1A40  90016C            MOV     DPTR,#WdGmax
   \   1A43  CD                XCH     A,R5
   \   1A44  F0                MOVX    @DPTR,A
   \   1A45  A3                INC     DPTR
   \   1A46  CD                XCH     A,R5
   \   1A47  F0                MOVX    @DPTR,A
    841                              WsGmax=WsSec;
   \   1A48  9000C2            MOV     DPTR,#WsSec
   \   1A4B  E0                MOVX    A,@DPTR
   \   1A4C  FD                MOV     R5,A
   \   1A4D  A3                INC     DPTR
   \   1A4E  E0                MOVX    A,@DPTR
   \   1A4F  90016E            MOV     DPTR,#WsGmax
   \   1A52  CD                XCH     A,R5
   \   1A53  F0                MOVX    @DPTR,A
   \   1A54  A3                INC     DPTR
   \   1A55  CD                XCH     A,R5
   \   1A56  F0                MOVX    @DPTR,A
   \   1A57            ?0266:
   \   1A57            ?0264:
    842                          }
    843                          Rpoint = 0;
   \   1A57  9001EC            MOV     DPTR,#Rpoint
   \   1A5A  E4                CLR     A
   \   1A5B  F0                MOVX    @DPTR,A
   \   1A5C  A3                INC     DPTR
   \   1A5D  F0                MOVX    @DPTR,A
   \   1A5E            ?0215:
   \   1A5E            ?0207:
    844                      }
    845                  }
    846          
    847                  if(Rpoint > 90)
   \   1A5E  D3                SETB    C
   \   1A5F  9001ED            MOV     DPTR,#Rpoint+1
   \   1A62  E0                MOVX    A,@DPTR
   \   1A63  945A              SUBB    A,#90
   \   1A65  9001EC            MOV     DPTR,#Rpoint
   \   1A68  E0                MOVX    A,@DPTR
   \   1A69  9400              SUBB    A,#0
   \   1A6B  4004              JC      ?0268
   \   1A6D            ?0267:
    848                      Rpoint=0;
   \   1A6D  E4                CLR     A
   \   1A6E  F0                MOVX    @DPTR,A
   \   1A6F  A3                INC     DPTR
   \   1A70  F0                MOVX    @DPTR,A
   \   1A71            ?0268:
   \   1A71            ?0205:
    849              }
    850          
    851              if(TI == 1)
   \   1A71  30993B            JNB     SCON.1,?0270
   \   1A74            ?0269:
    852              {
    853                  TI=0;
   \   1A74  C299              CLR     SCON.1
    854                  if(Comon == 1)
   \   1A76  300236            JNB     Comon,?0272
   \   1A79            ?0271:
    855                  {
    856                      if( Spoint-- != 0 )
   \   1A79  900252            MOV     DPTR,#Spoint
   \   1A7C  E0                MOVX    A,@DPTR
   \   1A7D  FD                MOV     R5,A
   \   1A7E  A3                INC     DPTR
   \   1A7F  E0                MOVX    A,@DPTR
   \   1A80  FC                MOV     R4,A
   \   1A81  E0                MOVX    A,@DPTR
   \   1A82  24FF              ADD     A,#255
   \   1A84  F0                MOVX    @DPTR,A
   \   1A85  900252            MOV     DPTR,#Spoint
   \   1A88  E0                MOVX    A,@DPTR
   \   1A89  34FF              ADDC    A,#255
   \   1A8B  F0                MOVX    @DPTR,A
   \   1A8C  EC                MOV     A,R4
   \   1A8D  4D                ORL     A,R5
   \   1A8E  601D              JZ      ?0274
   \   1A90            ?0273:
    857                      {
    858                          SBUF=Sbuf[Spoint];
   \   1A90  A3                INC     DPTR
   \   1A91  E0                MOVX    A,@DPTR
   \   1A92  24EE              ADD     A,#LOW(Sbuf)
   \   1A94  F582              MOV     DPL,A
   \   1A96  E4                CLR     A
   \   1A97  3401              ADDC    A,#HIGH(Sbuf)
   \   1A99  F583              MOV     DPH,A
   \   1A9B  E0                MOVX    A,@DPTR
   \   1A9C  F599              MOV     SBUF,A
    859                          Transm=1;
   \   1A9E  D204              SETB    Transm
    860                          RedL=1;
   \   1AA0  D297              SETB    P1.7
    861                          Redb=LightL;
   \   1AA2  900257            MOV     DPTR,#Redb
   \   1AA5  7410              MOV     A,#16
   \   1AA7  F0                MOVX    @DPTR,A
   \   1AA8  A3                INC     DPTR
   \   1AA9  E4                CLR     A
   \   1AAA  F0                MOVX    @DPTR,A
    862                      }
    863                      else
   \   1AAB  8002              SJMP    ?0275
   \   1AAD            ?0274:
    864                          Comon=0;
   \   1AAD  C202              CLR     Comon
   \   1AAF            ?0275:
   \   1AAF            ?0272:
   \   1AAF            ?0270:
    865                  }
    866              }
    867          }
   \   1AAF  D0E0              POP     ACC
   \   1AB1  FF                MOV     R7,A
   \   1AB2  D0E0              POP     ACC
   \   1AB4  FE                MOV     R6,A
   \   1AB5  D0E0              POP     ACC
   \   1AB7  FD                MOV     R5,A
   \   1AB8  D0E0              POP     ACC
   \   1ABA  FC                MOV     R4,A
   \   1ABB  D0E0              POP     ACC
   \   1ABD  FB                MOV     R3,A
   \   1ABE  D0E0              POP     ACC
   \   1AC0  FA                MOV     R2,A
   \   1AC1  D0D0              POP     PSW
   \   1AC3  D083              POP     DPH
   \   1AC5  D082              POP     DPL
   \   1AC7  D0E0              POP     ACC
   \   1AC9  32                RETI
    868          
    869          int Ws_calc(unsigned int Wssum)
    870          {
   \   1ACA            Ws_calc:
    871          
    872              unsigned int newv,oldv,i,flag;
    873              float value;
    874                                  /* Calculation W_S  */
    875              if(Wssum == 0)
   \   1ACA  900000            MOV     DPTR,#$LOCBX Ws_calc+12
   \   1ACD  ED                MOV     A,R5
   \   1ACE  F0                MOVX    @DPTR,A
   \   1ACF  A3                INC     DPTR
   \   1AD0  EC                MOV     A,R4
   \   1AD1  F0                MOVX    @DPTR,A
   \   1AD2  4D                ORL     A,R5
   \   1AD3  700E              JNZ     ?0277
   \   1AD5            ?0276:
    876                  Wssum = 0;
   \   1AD5  E4                CLR     A
   \   1AD6  FC                MOV     R4,A
   \   1AD7  FD                MOV     R5,A
   \   1AD8  900000            MOV     DPTR,#$LOCBX Ws_calc+12
   \   1ADB  ED                MOV     A,R5
   \   1ADC  F0                MOVX    @DPTR,A
   \   1ADD  A3                INC     DPTR
   \   1ADE  EC                MOV     A,R4
   \   1ADF  F0                MOVX    @DPTR,A
   \   1AE0  021DA5            LJMP    ?0278
   \   1AE3            ?0277:
    877              else if(Wssum <= Aspeed[0])
   \   1AE3  9002AB            MOV     DPTR,#Aspeed+1
   \   1AE6  E4                CLR     A
   \   1AE7  93                MOVC    A,@A+DPTR
   \   1AE8  C3                CLR     C
   \   1AE9  9C                SUBB    A,R4
   \   1AEA  9002AA            MOV     DPTR,#Aspeed
   \   1AED  E4                CLR     A
   \   1AEE  93                MOVC    A,@A+DPTR
   \   1AEF  9D                SUBB    A,R5
   \   1AF0  4049              JC      ?0280
   \   1AF2            ?0279:
    878              {
    879                  value=3./(float)Aspeed[0];
   \   1AF2  E4                CLR     A
   \   1AF3  93                MOVC    A,@A+DPTR
   \   1AF4  FD                MOV     R5,A
   \   1AF5  7401              MOV     A,#1
   \   1AF7  93                MOVC    A,@A+DPTR
   \   1AF8  FC                MOV     R4,A
   \   1AF9  ED                MOV     A,R5
   \   1AFA  E4                CLR     A
   \   1AFB  FE                MOV     R6,A
   \   1AFC  FF                MOV     R7,A
   \   1AFD  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   1B00  E4                CLR     A
   \   1B01  F8                MOV     R0,A
   \   1B02  F9                MOV     R1,A
   \   1B03  7440              MOV     A,#64
   \   1B05  FA                MOV     R2,A
   \   1B06  FB                MOV     R3,A
   \   1B07  120000            LCALL   ?F_DIV_R_L02
    880                  Wssum = value*Wssum*10;
   \   1B0A  900000            MOV     DPTR,#$LOCBX Ws_calc+12
   \   1B0D  E0                MOVX    A,@DPTR
   \   1B0E  FB                MOV     R3,A
   \   1B0F  A3                INC     DPTR
   \   1B10  E0                MOVX    A,@DPTR
   \   1B11  F8                MOV     R0,A
   \   1B12  CB                XCH     A,R3
   \   1B13  F9                MOV     R1,A
   \   1B14  CB                XCH     A,R3
   \   1B15  EB                MOV     A,R3
   \   1B16  E4                CLR     A
   \   1B17  FA                MOV     R2,A
   \   1B18  FB                MOV     R3,A
   \   1B19  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1B1C  900000            MOV     DPTR,#$LOCBX Ws_calc+8
   \   1B1F  120000            LCALL   ?STO_R4567_DPTR_L20
   \   1B22  120000            LCALL   ?F_MUL_L02
   \   1B25  E4                CLR     A
   \   1B26  F8                MOV     R0,A
   \   1B27  F9                MOV     R1,A
   \   1B28  7A20              MOV     R2,#32
   \   1B2A  7B41              MOV     R3,#65
   \   1B2C  120000            LCALL   ?F_MUL_L02
   \   1B2F  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1B32  A3                INC     DPTR
   \   1B33  ED                MOV     A,R5
   \   1B34  F0                MOVX    @DPTR,A
   \   1B35  A3                INC     DPTR
   \   1B36  EC                MOV     A,R4
   \   1B37  F0                MOVX    @DPTR,A
   \   1B38  021DA5            LJMP    ?0281
   \   1B3B            ?0280:
    881              }
    882              else if(Wssum > Aspeed[0] && Wssum <= Aspeed[1])
   \   1B3B  A3                INC     DPTR
   \   1B3C  E4                CLR     A
   \   1B3D  93                MOVC    A,@A+DPTR
   \   1B3E  C3                CLR     C
   \   1B3F  9C                SUBB    A,R4
   \   1B40  9002AA            MOV     DPTR,#Aspeed
   \   1B43  E4                CLR     A
   \   1B44  93                MOVC    A,@A+DPTR
   \   1B45  9D                SUBB    A,R5
   \   1B46  4003              JC      $+5
   \   1B48  021C0D            LJMP    ?0283
   \   1B4B  9002AD            MOV     DPTR,#Aspeed+3
   \   1B4E  E4                CLR     A
   \   1B4F  93                MOVC    A,@A+DPTR
   \   1B50  C3                CLR     C
   \   1B51  9C                SUBB    A,R4
   \   1B52  9002AC            MOV     DPTR,#Aspeed+2
   \   1B55  E4                CLR     A
   \   1B56  93                MOVC    A,@A+DPTR
   \   1B57  9D                SUBB    A,R5
   \   1B58  5003              JNC     $+5
   \   1B5A  021C0D            LJMP    ?0283
   \   1B5D            ?0285:
   \   1B5D            ?0284:
   \   1B5D            ?0282:
    883              {
    884                  newv=Aspeed[1];
   \   1B5D  E4                CLR     A
   \   1B5E  93                MOVC    A,@A+DPTR
   \   1B5F  FD                MOV     R5,A
   \   1B60  7401              MOV     A,#1
   \   1B62  93                MOVC    A,@A+DPTR
    885                  oldv=Aspeed[0];
   \   1B63  FC                MOV     R4,A
   \   1B64  9002AA            MOV     DPTR,#Aspeed
   \   1B67  E4                CLR     A
   \   1B68  93                MOVC    A,@A+DPTR
   \   1B69  FF                MOV     R7,A
   \   1B6A  7401              MOV     A,#1
   \   1B6C  93                MOVC    A,@A+DPTR
    886                  value=2./(float)(newv-oldv);
   \   1B6D  FE                MOV     R6,A
   \   1B6E  EC                MOV     A,R4
   \   1B6F  900000            MOV     DPTR,#$LOCBX Ws_calc
   \   1B72  CD                XCH     A,R5
   \   1B73  F0                MOVX    @DPTR,A
   \   1B74  A3                INC     DPTR
   \   1B75  CD                XCH     A,R5
   \   1B76  F0                MOVX    @DPTR,A
   \   1B77  FC                MOV     R4,A
   \   1B78  EE                MOV     A,R6
   \   1B79  A3                INC     DPTR
   \   1B7A  CF                XCH     A,R7
   \   1B7B  F0                MOVX    @DPTR,A
   \   1B7C  A3                INC     DPTR
   \   1B7D  CF                XCH     A,R7
   \   1B7E  F0                MOVX    @DPTR,A
   \   1B7F  FE                MOV     R6,A
   \   1B80  C3                CLR     C
   \   1B81  EC                MOV     A,R4
   \   1B82  9E                SUBB    A,R6
   \   1B83  FC                MOV     R4,A
   \   1B84  ED                MOV     A,R5
   \   1B85  9F                SUBB    A,R7
   \   1B86  FD                MOV     R5,A
   \   1B87  EC                MOV     A,R4
   \   1B88  F8                MOV     R0,A
   \   1B89  CD                XCH     A,R5
   \   1B8A  F9                MOV     R1,A
   \   1B8B  CD                XCH     A,R5
   \   1B8C  ED                MOV     A,R5
   \   1B8D  E4                CLR     A
   \   1B8E  FA                MOV     R2,A
   \   1B8F  FB                MOV     R3,A
   \   1B90  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1B93  E4                CLR     A
   \   1B94  FC                MOV     R4,A
   \   1B95  FD                MOV     R5,A
   \   1B96  FE                MOV     R6,A
   \   1B97  7F40              MOV     R7,#64
   \   1B99  120000            LCALL   ?F_DIV_L02
    887                  Wssum = ((value*Wssum)-(value*oldv)+3)*10.;
   \   1B9C  900000            MOV     DPTR,#$LOCBX Ws_calc+12
   \   1B9F  E0                MOVX    A,@DPTR
   \   1BA0  FB                MOV     R3,A
   \   1BA1  A3                INC     DPTR
   \   1BA2  E0                MOVX    A,@DPTR
   \   1BA3  F8                MOV     R0,A
   \   1BA4  CB                XCH     A,R3
   \   1BA5  F9                MOV     R1,A
   \   1BA6  CB                XCH     A,R3
   \   1BA7  EB                MOV     A,R3
   \   1BA8  E4                CLR     A
   \   1BA9  FA                MOV     R2,A
   \   1BAA  FB                MOV     R3,A
   \   1BAB  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1BAE  900000            MOV     DPTR,#$LOCBX Ws_calc+8
   \   1BB1  120000            LCALL   ?STO_R4567_DPTR_L20
   \   1BB4  120000            LCALL   ?F_MUL_L02
   \   1BB7  900000            MOV     DPTR,#$LOCBX Ws_calc+2
   \   1BBA  E0                MOVX    A,@DPTR
   \   1BBB  FB                MOV     R3,A
   \   1BBC  A3                INC     DPTR
   \   1BBD  E0                MOVX    A,@DPTR
   \   1BBE  F8                MOV     R0,A
   \   1BBF  CB                XCH     A,R3
   \   1BC0  F9                MOV     R1,A
   \   1BC1  CB                XCH     A,R3
   \   1BC2  EB                MOV     A,R3
   \   1BC3  E4                CLR     A
   \   1BC4  FA                MOV     R2,A
   \   1BC5  FB                MOV     R3,A
   \   1BC6  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1BC9  EF                MOV     A,R7
   \   1BCA  C0E0              PUSH    ACC
   \   1BCC  EE                MOV     A,R6
   \   1BCD  C0E0              PUSH    ACC
   \   1BCF  ED                MOV     A,R5
   \   1BD0  C0E0              PUSH    ACC
   \   1BD2  EC                MOV     A,R4
   \   1BD3  C0E0              PUSH    ACC
   \   1BD5  900000            MOV     DPTR,#$LOCBX Ws_calc+8
   \   1BD8  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   1BDB  120000            LCALL   ?F_MUL_L02
   \   1BDE  D0E0              POP     ACC
   \   1BE0  F8                MOV     R0,A
   \   1BE1  D0E0              POP     ACC
   \   1BE3  F9                MOV     R1,A
   \   1BE4  D0E0              POP     ACC
   \   1BE6  FA                MOV     R2,A
   \   1BE7  D0E0              POP     ACC
   \   1BE9  FB                MOV     R3,A
   \   1BEA  120000            LCALL   ?F_SUB_R_L02
   \   1BED  E4                CLR     A
   \   1BEE  F8                MOV     R0,A
   \   1BEF  F9                MOV     R1,A
   \   1BF0  7440              MOV     A,#64
   \   1BF2  FA                MOV     R2,A
   \   1BF3  FB                MOV     R3,A
   \   1BF4  120000            LCALL   ?F_ADD_L02
   \   1BF7  E4                CLR     A
   \   1BF8  F8                MOV     R0,A
   \   1BF9  F9                MOV     R1,A
   \   1BFA  7A20              MOV     R2,#32
   \   1BFC  7B41              MOV     R3,#65
   \   1BFE  120000            LCALL   ?F_MUL_L02
   \   1C01  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1C04  A3                INC     DPTR
   \   1C05  ED                MOV     A,R5
   \   1C06  F0                MOVX    @DPTR,A
   \   1C07  A3                INC     DPTR
   \   1C08  EC                MOV     A,R4
   \   1C09  F0                MOVX    @DPTR,A
    888              }
    889              else
   \   1C0A  021DA5            LJMP    ?0286
   \   1C0D            ?0283:
    890              {
    891                  oldv=Aspeed[1];
   \   1C0D  9002AC            MOV     DPTR,#Aspeed+2
   \   1C10  E4                CLR     A
   \   1C11  93                MOVC    A,@A+DPTR
   \   1C12  FD                MOV     R5,A
   \   1C13  7401              MOV     A,#1
   \   1C15  93                MOVC    A,@A+DPTR
   \   1C16  900000            MOV     DPTR,#$LOCBX Ws_calc+2
   \   1C19  CD                XCH     A,R5
   \   1C1A  F0                MOVX    @DPTR,A
   \   1C1B  A3                INC     DPTR
   \   1C1C  CD                XCH     A,R5
   \   1C1D  F0                MOVX    @DPTR,A
    892                  flag=5.;
   \   1C1E  900000            MOV     DPTR,#$LOCBX Ws_calc+6
   \   1C21  E4                CLR     A
   \   1C22  F0                MOVX    @DPTR,A
   \   1C23  A3                INC     DPTR
   \   1C24  7405              MOV     A,#5
   \   1C26  F0                MOVX    @DPTR,A
    893                  for(i=2; i != 16; i++)
   \   1C27  900000            MOV     DPTR,#$LOCBX Ws_calc+4
   \   1C2A  E4                CLR     A
   \   1C2B  F0                MOVX    @DPTR,A
   \   1C2C  A3                INC     DPTR
   \   1C2D  7402              MOV     A,#2
   \   1C2F  F0                MOVX    @DPTR,A
   \   1C30            ?0288:
   \   1C30  900000            MOV     DPTR,#$LOCBX Ws_calc+5
   \   1C33  E0                MOVX    A,@DPTR
   \   1C34  6410              XRL     A,#16
   \   1C36  7009              JNZ     ?0371
   \   1C38  900000            MOV     DPTR,#$LOCBX Ws_calc+4
   \   1C3B  E0                MOVX    A,@DPTR
   \   1C3C  7003              JNZ     $+5
   \   1C3E  021DA5            LJMP    ?0287
   \   1C41            ?0371:
   \   1C41            ?0289:
    894                  {
    895                      flag += 5.;
   \   1C41  900000            MOV     DPTR,#$LOCBX Ws_calc+7
   \   1C44  E0                MOVX    A,@DPTR
   \   1C45  2405              ADD     A,#5
   \   1C47  F0                MOVX    @DPTR,A
   \   1C48  900000            MOV     DPTR,#$LOCBX Ws_calc+6
   \   1C4B  E0                MOVX    A,@DPTR
   \   1C4C  3400              ADDC    A,#0
   \   1C4E  F0                MOVX    @DPTR,A
    896                      newv=Aspeed[i];
   \   1C4F  900000            MOV     DPTR,#$LOCBX Ws_calc+5
   \   1C52  E0                MOVX    A,@DPTR
   \   1C53  25E0              ADD     A,ACC
   \   1C55  9002AA            MOV     DPTR,#Aspeed
   \   1C58  FD                MOV     R5,A
   \   1C59  93                MOVC    A,@A+DPTR
   \   1C5A  CD                XCH     A,R5
   \   1C5B  04                INC     A
   \   1C5C  93                MOVC    A,@A+DPTR
    897                      if( Wssum < newv && Wssum >= oldv)
   \   1C5D  900000            MOV     DPTR,#$LOCBX Ws_calc
   \   1C60  CD                XCH     A,R5
   \   1C61  F0                MOVX    @DPTR,A
   \   1C62  A3                INC     DPTR
   \   1C63  CD                XCH     A,R5
   \   1C64  F0                MOVX    @DPTR,A
   \   1C65  FC                MOV     R4,A
   \   1C66  900000            MOV     DPTR,#$LOCBX Ws_calc+13
   \   1C69  E0                MOVX    A,@DPTR
   \   1C6A  C3                CLR     C
   \   1C6B  9C                SUBB    A,R4
   \   1C6C  900000            MOV     DPTR,#$LOCBX Ws_calc+12
   \   1C6F  E0                MOVX    A,@DPTR
   \   1C70  9D                SUBB    A,R5
   \   1C71  4003              JC      $+5
   \   1C73  021D88            LJMP    ?0292
   \   1C76  E0                MOVX    A,@DPTR
   \   1C77  FD                MOV     R5,A
   \   1C78  A3                INC     DPTR
   \   1C79  E0                MOVX    A,@DPTR
   \   1C7A  FC                MOV     R4,A
   \   1C7B  900000            MOV     DPTR,#$LOCBX Ws_calc+3
   \   1C7E  E0                MOVX    A,@DPTR
   \   1C7F  D3                SETB    C
   \   1C80  9C                SUBB    A,R4
   \   1C81  900000            MOV     DPTR,#$LOCBX Ws_calc+2
   \   1C84  E0                MOVX    A,@DPTR
   \   1C85  9D                SUBB    A,R5
   \   1C86  4003              JC      $+5
   \   1C88  021D88            LJMP    ?0292
   \   1C8B            ?0294:
   \   1C8B            ?0293:
   \   1C8B            ?0291:
    898                      {
    899                          value=(float)(flag-(flag-5.))/(newv-oldv);
   \   1C8B  900000            MOV     DPTR,#$LOCBX Ws_calc+6
   \   1C8E  E0                MOVX    A,@DPTR
   \   1C8F  FF                MOV     R7,A
   \   1C90  A3                INC     DPTR
   \   1C91  E0                MOVX    A,@DPTR
   \   1C92  FE                MOV     R6,A
   \   1C93  FC                MOV     R4,A
   \   1C94  CF                XCH     A,R7
   \   1C95  FD                MOV     R5,A
   \   1C96  CF                XCH     A,R7
   \   1C97  EF                MOV     A,R7
   \   1C98  E4                CLR     A
   \   1C99  FE                MOV     R6,A
   \   1C9A  FF                MOV     R7,A
   \   1C9B  120000            LCALL   ?R4567_ULONG_TO_FLT_L02
   \   1C9E  E4                CLR     A
   \   1C9F  F8                MOV     R0,A
   \   1CA0  F9                MOV     R1,A
   \   1CA1  7AA0              MOV     R2,#160
   \   1CA3  7BC0              MOV     R3,#192
   \   1CA5  120000            LCALL   ?F_ADD_L02
   \   1CA8  EE                MOV     A,R6
   \   1CA9  4F                ORL     A,R7
   \   1CAA  6004              JZ      $+6
   \   1CAC  EF                MOV     A,R7
   \   1CAD  6480              XRL     A,#128
   \   1CAF  FF                MOV     R7,A
   \   1CB0  900000            MOV     DPTR,#$LOCBX Ws_calc+6
   \   1CB3  E0                MOVX    A,@DPTR
   \   1CB4  FB                MOV     R3,A
   \   1CB5  A3                INC     DPTR
   \   1CB6  E0                MOVX    A,@DPTR
   \   1CB7  F8                MOV     R0,A
   \   1CB8  CB                XCH     A,R3
   \   1CB9  F9                MOV     R1,A
   \   1CBA  CB                XCH     A,R3
   \   1CBB  EB                MOV     A,R3
   \   1CBC  E4                CLR     A
   \   1CBD  FA                MOV     R2,A
   \   1CBE  FB                MOV     R3,A
   \   1CBF  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1CC2  120000            LCALL   ?F_ADD_L02
   \   1CC5  900000            MOV     DPTR,#$LOCBX Ws_calc
   \   1CC8  E0                MOVX    A,@DPTR
   \   1CC9  FB                MOV     R3,A
   \   1CCA  A3                INC     DPTR
   \   1CCB  E0                MOVX    A,@DPTR
   \   1CCC  C3                CLR     C
   \   1CCD  A3                INC     DPTR
   \   1CCE  A3                INC     DPTR
   \   1CCF  F9                MOV     R1,A
   \   1CD0  E0                MOVX    A,@DPTR
   \   1CD1  C9                XCH     A,R1
   \   1CD2  99                SUBB    A,R1
   \   1CD3  FA                MOV     R2,A
   \   1CD4  900000            MOV     DPTR,#$LOCBX Ws_calc+2
   \   1CD7  E0                MOVX    A,@DPTR
   \   1CD8  F9                MOV     R1,A
   \   1CD9  EB                MOV     A,R3
   \   1CDA  99                SUBB    A,R1
   \   1CDB  FB                MOV     R3,A
   \   1CDC  EA                MOV     A,R2
   \   1CDD  F8                MOV     R0,A
   \   1CDE  CB                XCH     A,R3
   \   1CDF  F9                MOV     R1,A
   \   1CE0  CB                XCH     A,R3
   \   1CE1  EB                MOV     A,R3
   \   1CE2  E4                CLR     A
   \   1CE3  FA                MOV     R2,A
   \   1CE4  FB                MOV     R3,A
   \   1CE5  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1CE8  120000            LCALL   ?F_DIV_L02
    900                          Wssum = ((value*Wssum) - (value*oldv) + ( flag-5.))*10.;
   \   1CEB  900000            MOV     DPTR,#$LOCBX Ws_calc+12
   \   1CEE  E0                MOVX    A,@DPTR
   \   1CEF  FB                MOV     R3,A
   \   1CF0  A3                INC     DPTR
   \   1CF1  E0                MOVX    A,@DPTR
   \   1CF2  F8                MOV     R0,A
   \   1CF3  CB                XCH     A,R3
   \   1CF4  F9                MOV     R1,A
   \   1CF5  CB                XCH     A,R3
   \   1CF6  EB                MOV     A,R3
   \   1CF7  E4                CLR     A
   \   1CF8  FA                MOV     R2,A
   \   1CF9  FB                MOV     R3,A
   \   1CFA  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1CFD  900000            MOV     DPTR,#$LOCBX Ws_calc+8
   \   1D00  120000            LCALL   ?STO_R4567_DPTR_L20
   \   1D03  120000            LCALL   ?F_MUL_L02
   \   1D06  900000            MOV     DPTR,#$LOCBX Ws_calc+6
   \   1D09  E0                MOVX    A,@DPTR
   \   1D0A  FB                MOV     R3,A
   \   1D0B  A3                INC     DPTR
   \   1D0C  E0                MOVX    A,@DPTR
   \   1D0D  F8                MOV     R0,A
   \   1D0E  CB                XCH     A,R3
   \   1D0F  F9                MOV     R1,A
   \   1D10  CB                XCH     A,R3
   \   1D11  EB                MOV     A,R3
   \   1D12  E4                CLR     A
   \   1D13  FA                MOV     R2,A
   \   1D14  FB                MOV     R3,A
   \   1D15  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1D18  EF                MOV     A,R7
   \   1D19  C0E0              PUSH    ACC
   \   1D1B  EE                MOV     A,R6
   \   1D1C  C0E0              PUSH    ACC
   \   1D1E  ED                MOV     A,R5
   \   1D1F  C0E0              PUSH    ACC
   \   1D21  EC                MOV     A,R4
   \   1D22  C0E0              PUSH    ACC
   \   1D24  E4                CLR     A
   \   1D25  FC                MOV     R4,A
   \   1D26  FD                MOV     R5,A
   \   1D27  7EA0              MOV     R6,#160
   \   1D29  7FC0              MOV     R7,#192
   \   1D2B  120000            LCALL   ?F_ADD_L02
   \   1D2E  D0E0              POP     ACC
   \   1D30  F8                MOV     R0,A
   \   1D31  D0E0              POP     ACC
   \   1D33  F9                MOV     R1,A
   \   1D34  D0E0              POP     ACC
   \   1D36  FA                MOV     R2,A
   \   1D37  D0E0              POP     ACC
   \   1D39  FB                MOV     R3,A
   \   1D3A  120000            LCALL   ?F_ADD_L02
   \   1D3D  900000            MOV     DPTR,#$LOCBX Ws_calc+2
   \   1D40  E0                MOVX    A,@DPTR
   \   1D41  FB                MOV     R3,A
   \   1D42  A3                INC     DPTR
   \   1D43  E0                MOVX    A,@DPTR
   \   1D44  F8                MOV     R0,A
   \   1D45  CB                XCH     A,R3
   \   1D46  F9                MOV     R1,A
   \   1D47  CB                XCH     A,R3
   \   1D48  EB                MOV     A,R3
   \   1D49  E4                CLR     A
   \   1D4A  FA                MOV     R2,A
   \   1D4B  FB                MOV     R3,A
   \   1D4C  120000            LCALL   ?R0123_ULONG_TO_FLT_L02
   \   1D4F  EF                MOV     A,R7
   \   1D50  C0E0              PUSH    ACC
   \   1D52  EE                MOV     A,R6
   \   1D53  C0E0              PUSH    ACC
   \   1D55  ED                MOV     A,R5
   \   1D56  C0E0              PUSH    ACC
   \   1D58  EC                MOV     A,R4
   \   1D59  C0E0              PUSH    ACC
   \   1D5B  900000            MOV     DPTR,#$LOCBX Ws_calc+8
   \   1D5E  120000            LCALL   ?LD_R4567_XDPTR_L20
   \   1D61  120000            LCALL   ?F_MUL_L02
   \   1D64  D0E0              POP     ACC
   \   1D66  F8                MOV     R0,A
   \   1D67  D0E0              POP     ACC
   \   1D69  F9                MOV     R1,A
   \   1D6A  D0E0              POP     ACC
   \   1D6C  FA                MOV     R2,A
   \   1D6D  D0E0              POP     ACC
   \   1D6F  FB                MOV     R3,A
   \   1D70  120000            LCALL   ?F_SUB_R_L02
   \   1D73  E4                CLR     A
   \   1D74  F8                MOV     R0,A
   \   1D75  F9                MOV     R1,A
   \   1D76  7A20              MOV     R2,#32
   \   1D78  7B41              MOV     R3,#65
   \   1D7A  120000            LCALL   ?F_MUL_L02
   \   1D7D  120000            LCALL   ?R4567_FLT_TO_LONG_L02
   \   1D80  A3                INC     DPTR
   \   1D81  ED                MOV     A,R5
   \   1D82  F0                MOVX    @DPTR,A
   \   1D83  A3                INC     DPTR
   \   1D84  EC                MOV     A,R4
   \   1D85  F0                MOVX    @DPTR,A
    901                          break;
   \   1D86  801D              SJMP    ?0287
   \   1D88            ?0292:
    902                      }
    903                      else
    904                          oldv=newv;
   \   1D88  900000            MOV     DPTR,#$LOCBX Ws_calc
   \   1D8B  E0                MOVX    A,@DPTR
   \   1D8C  FD                MOV     R5,A
   \   1D8D  A3                INC     DPTR
   \   1D8E  E0                MOVX    A,@DPTR
   \   1D8F  A3                INC     DPTR
   \   1D90  CD                XCH     A,R5
   \   1D91  F0                MOVX    @DPTR,A
   \   1D92  A3                INC     DPTR
   \   1D93  CD                XCH     A,R5
   \   1D94  F0                MOVX    @DPTR,A
   \   1D95  A3                INC     DPTR
   \   1D96  A3                INC     DPTR
   \   1D97  E0                MOVX    A,@DPTR
   \   1D98  04                INC     A
   \   1D99  F0                MOVX    @DPTR,A
   \   1D9A  900000            MOV     DPTR,#$LOCBX Ws_calc+4
   \   1D9D  7003              JNZ     ?0372
   \   1D9F  E0                MOVX    A,@DPTR
   \   1DA0  04                INC     A
   \   1DA1  F0                MOVX    @DPTR,A
   \   1DA2            ?0372:
    905                  }
    906              }
   \   1DA2  021C30            LJMP    ?0288
   \   1DA5            ?0287:
   \   1DA5            ?0286:
   \   1DA5            ?0281:
   \   1DA5            ?0278:
    907              if(Wssum > 600)
   \   1DA5  D3                SETB    C
   \   1DA6  900000            MOV     DPTR,#$LOCBX Ws_calc+13
   \   1DA9  E0                MOVX    A,@DPTR
   \   1DAA  9458              SUBB    A,#88
   \   1DAC  900000            MOV     DPTR,#$LOCBX Ws_calc+12
   \   1DAF  E0                MOVX    A,@DPTR
   \   1DB0  9402              SUBB    A,#2
   \   1DB2  4005              JC      ?0296
   \   1DB4            ?0295:
    908                  return 601;
   \   1DB4  7D02              MOV     R5,#2
   \   1DB6  7C59              MOV     R4,#89
    909              else
   \   1DB8  22                RET
   \   1DB9            ?0296:
    910                  return Wssum;
   \   1DB9  E0                MOVX    A,@DPTR
   \   1DBA  FD                MOV     R5,A
   \   1DBB  A3                INC     DPTR
   \   1DBC  E0                MOVX    A,@DPTR
   \   1DBD  FC                MOV     R4,A
    911          }
   \   1DBE            ?0297:
   \   1DBE  22                RET
   \   0000                    RSEG    CONST
   \   0000            Title:
   \   0000  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   0004  2F202F2F
   \   0008  2F2F2F2F
   \   000C  2F2F2F2F
   \   0010  2F2F2F2F
   \   0014  2F2F2F2F
   \   0018  2F2F2F2F
   \   001C  2F2F2F2F
   \   0020  2F2F2F2F
   \   0024  2F2F2F2F
   \   0028  2F2F2F2F
   \   002C  2F2F2F2F
   \   0030  2F2F2F2F
   \   0034  2F202F2F
   \   0038  2F202F00
   \   003C  00000000          DB      0,0,0,0,0
   \   0040  00
   \   0041  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   0045  2F202F2F
   \   0049  2F2F2F2F
   \   004D  2F2F2F2F
   \   0051  2F2F2F2F
   \   0055  2F2F2F2F
   \   0059  2F2F2F2F
   \   005D  2F2F2F2F
   \   0061  2F2F2F2F
   \   0065  2F2F2F2F
   \   0069  2F2F2F2F
   \   006D  2F2F2F2F
   \   0071  2F2F2F2F
   \   0075  2F202F2F
   \   0079  2F202F00
   \   007D  00000000          DB      0,0,0,0,0
   \   0081  00
   \   0082  2F202F2F          DB      '/ /// ///        Wind Speed & Direction Board     /// /// /',0
   \   0086  2F202F2F
   \   008A  2F202020
   \   008E  20202020
   \   0092  2057696E
   \   0096  64205370
   \   009A  65656420
   \   009E  26204469
   \   00A2  72656374
   \   00A6  696F6E20
   \   00AA  426F6172
   \   00AE  64202020
   \   00B2  20202F2F
   \   00B6  2F202F2F
   \   00BA  2F202F00
   \   00BE  00000000          DB      0,0,0,0,0
   \   00C2  00
   \   00C3  2F202F2F          DB      '/ /// ///                        (Up-Grade)       /// /// /',0
   \   00C7  2F202F2F
   \   00CB  2F202020
   \   00CF  20202020
   \   00D3  20202020
   \   00D7  20202020
   \   00DB  20202020
   \   00DF  20202020
   \   00E3  20285570
   \   00E7  2D477261
   \   00EB  64652920
   \   00EF  20202020
   \   00F3  20202F2F
   \   00F7  2F202F2F
   \   00FB  2F202F00
   \   00FF  00000000          DB      0,0,0,0,0
   \   0103  00
   \   0104  2F202F2F          DB      '/ /// ///       JINYANG  INDUSTRIAL.,CO LTD       /// /// /',0
   \   0108  2F202F2F
   \   010C  2F202020
   \   0110  20202020
   \   0114  4A494E59
   \   0118  414E4720
   \   011C  20494E44
   \   0120  55535452
   \   0124  49414C2E
   \   0128  2C434F20
   \   012C  4C544420
   \   0130  20202020
   \   0134  20202F2F
   \   0138  2F202F2F
   \   013C  2F202F00
   \   0140  00000000          DB      0,0,0,0,0
   \   0144  00
   \   0145  2F202F2F          DB      '/ /// ///       Program By  Hae-suk. JIN          /// /// /',0
   \   0149  2F202F2F
   \   014D  2F202020
   \   0151  20202020
   \   0155  50726F67
   \   0159  72616D20
   \   015D  42792020
   \   0161  4861652D
   \   0165  73756B2E
   \   0169  204A494E
   \   016D  20202020
   \   0171  20202020
   \   0175  20202F2F
   \   0179  2F202F2F
   \   017D  2F202F00
   \   0181  00000000          DB      0,0,0,0,0
   \   0185  00
   \   0186  2F202F2F          DB      '/ /// ///     Start :  1995.12. 17                /// /// /',0
   \   018A  2F202F2F
   \   018E  2F202020
   \   0192  20205374
   \   0196  61727420
   \   019A  3A202031
   \   019E  3939352E
   \   01A2  31322E20
   \   01A6  31372020
   \   01AA  20202020
   \   01AE  20202020
   \   01B2  20202020
   \   01B6  20202F2F
   \   01BA  2F202F2F
   \   01BE  2F202F00
   \   01C2  00000000          DB      0,0,0,0,0
   \   01C6  00
   \   01C7  2F202F2F          DB      '/ /// ///       End :  1996. 3. 11  Ver 1.1       /// /// /',0
   \   01CB  2F202F2F
   \   01CF  2F202020
   \   01D3  20202020
   \   01D7  456E6420
   \   01DB  3A202031
   \   01DF  3939362E
   \   01E3  20332E20
   \   01E7  31312020
   \   01EB  56657220
   \   01EF  312E3120
   \   01F3  20202020
   \   01F7  20202F2F
   \   01FB  2F202F2F
   \   01FF  2F202F00
   \   0203  00000000          DB      0,0,0,0,0
   \   0207  00
   \   0208  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   020C  2F202F2F
   \   0210  2F2F2F2F
   \   0214  2F2F2F2F
   \   0218  2F2F2F2F
   \   021C  2F2F2F2F
   \   0220  2F2F2F2F
   \   0224  2F2F2F2F
   \   0228  2F2F2F2F
   \   022C  2F2F2F2F
   \   0230  2F2F2F2F
   \   0234  2F2F2F2F
   \   0238  2F2F2F2F
   \   023C  2F202F2F
   \   0240  2F202F00
   \   0244  00000000          DB      0,0,0,0,0
   \   0248  00
   \   0249  2F202F2F          DB      '/ /// /////////////////////////////////////////////// /// /',0
   \   024D  2F202F2F
   \   0251  2F2F2F2F
   \   0255  2F2F2F2F
   \   0259  2F2F2F2F
   \   025D  2F2F2F2F
   \   0261  2F2F2F2F
   \   0265  2F2F2F2F
   \   0269  2F2F2F2F
   \   026D  2F2F2F2F
   \   0271  2F2F2F2F
   \   0275  2F2F2F2F
   \   0279  2F2F2F2F
   \   027D  2F202F2F
   \   0281  2F202F00
   \   0285  00000000          DB      0,0,0,0,0
   \   0289  00
   \   028A            Adirection:
   \   028A  00FE              DW      254
   \   028C  01FD              DW      509
   \   028E  02FB              DW      763
   \   0290  03FA              DW      1018
   \   0292  04F8              DW      1272
   \   0294  05F6              DW      1526
   \   0296  06F5              DW      1781
   \   0298  07F3              DW      2035
   \   029A  08F1              DW      2289
   \   029C  09F0              DW      2544
   \   029E  0AEE              DW      2798
   \   02A0  0BED              DW      3053
   \   02A2  0CEB              DW      3307
   \   02A4  0DE9              DW      3561
   \   02A6  0EE8              DW      3816
   \   02A8  0FE6              DW      4070
   \   02AA            Aspeed:
   \   02AA  002D              DW      45
   \   02AC  0050              DW      80
   \   02AE  00A0              DW      160
   \   02B0  00F8              DW      248
   \   02B2  014D              DW      333
   \   02B4  01A4              DW      420
   \   02B6  01FB              DW      507
   \   02B8  0251              DW      593
   \   02BA  02A8              DW      680
   \   02BC  02FE              DW      766
   \   02BE  0355              DW      853
   \   02C0  03AC              DW      940
   \   02C2  0403              DW      1027
   \   02C4  0459              DW      1113
   \   02C6  04B0              DW      1200
   \   02C8  0507              DW      1287
   \   0000                    COMMON  INTVEC
   \   0003                    DS      3
   \   0003  02                DB      2
   \   0004  0E94              DB      HIGH(EX0_int),LOW(EX0_int)
   \   000B                    DS      5
   \   000B  02                DB      2
   \   000C  0E4F              DB      HIGH(T0_int),LOW(T0_int)
   \   0023                    DS      21
   \   0023  02                DB      2
   \   0024  121E              DB      HIGH(SCON_int),LOW(SCON_int)
   \   002B                    DS      5
   \   002B  02                DB      2
   \   002C  0E50              DB      HIGH(T2_int),LOW(T2_int)
   \   0000                    RSEG    X_UDATA
   \   0000            Wdsta:
   \   0001                    DS      1
   \   0001            Wssta:
   \   0002                    DS      1
   \   0002            Nws:
   \   0006                    DS      4
   \   0006            Ows:
   \   000A                    DS      4
   \   000A            Quad:
   \   000B                    DS      1
   \   000B            Minute:
   \   000C                    DS      1
   \   000C            Second:
   \   000D                    DS      1
   \   000D            Wdreal:
   \   000F                    DS      2
   \   000F            Wsreal:
   \   0011                    DS      2
   \   0011            Wsabs:
   \   0013                    DS      2
   \   0013            Wdvalue:
   \   0015                    DS      2
   \   0015            Wsvalue:
   \   0017                    DS      2
   \   0017            Wddata:
   \   002F                    DS      24
   \   002F            Wsdata:
   \   0047                    DS      24
   \   0047            Wpoint:
   \   0048                    DS      1
   \   0048            WdSec:
   \   004A                    DS      2
   \   004A            WdSecd:
   \   00C2                    DS      120
   \   00C2            WsSec:
   \   00C4                    DS      2
   \   00C4            WsSecd:
   \   013C                    DS      120
   \   013C            WdMin:
   \   013E                    DS      2
   \   013E            WdMind:
   \   0152                    DS      20
   \   0152            WsMin:
   \   0154                    DS      2
   \   0154            WsMind:
   \   0168                    DS      20
   \   0168            WsTen:
   \   016A                    DS      2
   \   016A            WdTen:
   \   016C                    DS      2
   \   016C            WdGmax:
   \   016E                    DS      2
   \   016E            WsGmax:
   \   0170                    DS      2
   \   0170            WdMmax:
   \   0172                    DS      2
   \   0172            WsMmax:
   \   0174                    DS      2
   \   0174            WdTmax:
   \   0176                    DS      2
   \   0176            WsTmax:
   \   0178                    DS      2
   \   0178            WdEvalue:
   \   017A                    DS      2
   \   017A            WsEvalue:
   \   017C                    DS      2
   \   017C            WdEcount:
   \   017E                    DS      2
   \   017E            WsEcount:
   \   0180                    DS      2
   \   0180            WdThvalue:
   \   0182                    DS      2
   \   0182            WsThvalue:
   \   0184                    DS      2
   \   0184            WdsEcount:
   \   0186                    DS      2
   \   0186            TEcount:
   \   0188                    DS      2
   \   0188            Rbuf:
   \   01EC                    DS      100
   \   01EC            Rpoint:
   \   01EE                    DS      2
   \   01EE            Sbuf:
   \   0252                    DS      100
   \   0252            Spoint:
   \   0254                    DS      2
   \   0254            ID:
   \   0255                    DS      1
   \   0255            Blueb:
   \   0257                    DS      2
   \   0257            Redb:
   \   0259                    DS      2
   \   0259            wdb:
   \   025B                    DS      2
   \   025B            oldv:
   \   025D                    DS      2
   \   025D            newv:
   \   025F                    DS      2
   \   025F            flag:
   \   0263                    DS      4
   \   0263            value:
   \   0267                    DS      4
   \   0267            sinSec:
   \   026B                    DS      4
   \   026B            sinOne:
   \   026F                    DS      4
   \   026F            sinTen:
   \   0273                    DS      4
   \   0273            cosSec:
   \   0277                    DS      4
   \   0277            cosOne:
   \   027B                    DS      4
   \   027B            cosTen:
   \   027F                    DS      4
   \   027F            sumSec:
   \   0281                    DS      2
   \   0281            sumOne:
   \   0285                    DS      4
   \   0285            sumTen:
   \   0289                    DS      4
   \   0000                    RSEG    BITVARS
   \   0000            Sendd:
   \   0001                    DS      1
   \   0001            Send:
   \   0002                    DS      1
   \   0002            Comon:
   \   0003                    DS      1
   \   0003            Receve:
   \   0004                    DS      1
   \   0004            Transm:
   \   0005                    DS      1
   \   0005            Sens:
   \   0006                    DS      1
   \   0006            MeasQ:
   \   0007                    DS      1
   \   0007            Init:
   \   0008                    DS      1
   \   0008            Wbit:
   \   0009                    DS      1
   \   0009            Aderr:
   \   000A                    DS      1
   \   000A            Wderr:
   \   000B                    DS      1
   \   000B            Wserr:
   \   000C                    DS      1
   \   000C            Terror:
   \   000D                    DS      1
   \   000D                    END

Errors: none
Warnings: none
Code size: 7615
Constant size: 760
Static variable size: Data(0) Idata(0) Bit(13) Xdata(649)

